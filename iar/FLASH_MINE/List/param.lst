###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     08/Aug/2014  19:52:21 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Others\param.c                                           #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Others\param.c -D LPLD_K60 -lCN                          #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\param.lst                                       #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\param.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\Others\param.c
      1          /****************************************************************************** 
      2           *       param.c ----- The code of the param setting of the quad          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  param.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/30 20:26:32                                                       *
     10           ******************************************************************************/
     11          #include "param.h" 
     12          

   \                                 In section .bss, align 4
     13          static QuadParamTypeDef s_sQuadParamInRam = {0};
   \                     s_sQuadParamInRam:
   \   00000000                      DS8 160
     14          

   \                                 In section .text, align 2, keep-with-next
     15          uint8 InitQuadParam(void)
     16          {
   \                     InitQuadParam:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A4             SUB      SP,SP,#+144
     17          
     18              uint8 success = 0;
   \   00000004   0x2400             MOVS     R4,#+0
     19              if(!LoadQuadParamInFlash(&s_sQuadParamInRam))
   \   00000006   0x....             LDR.N    R0,??DataTable3
   \   00000008   0x.... 0x....      BL       LoadQuadParamInFlash
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD102             BNE.N    ??InitQuadParam_0
     20              {
     21                  success = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x0004             MOVS     R4,R0
   \   00000014   0xE00F             B.N      ??InitQuadParam_1
     22              }
     23              else 
     24              {
     25                  if(!CheckQuadParamValid(s_sQuadParamInRam))
   \                     ??InitQuadParam_0:
   \   00000016   0x....             LDR.N    R1,??DataTable3
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x22A0             MOVS     R2,#+160
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       CheckQuadParamValid
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD102             BNE.N    ??InitQuadParam_2
     26                  {
     27                      success = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x0004             MOVS     R4,R0
   \   00000030   0xE001             B.N      ??InitQuadParam_1
     28                  }
     29                  else
     30                  {
     31                      success = 1;
   \                     ??InitQuadParam_2:
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x0004             MOVS     R4,R0
     32                  }
     33              }
     34          
     35              if(success == 0)
   \                     ??InitQuadParam_1:
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x2C00             CMP      R4,#+0
   \   0000003A   0xD102             BNE.N    ??InitQuadParam_3
     36              {
     37                  LoadDefaultQuadParam(&s_sQuadParamInRam);
   \   0000003C   0x....             LDR.N    R0,??DataTable3
   \   0000003E   0x.... 0x....      BL       LoadDefaultQuadParam
     38              }
     39          
     40              return success;
   \                     ??InitQuadParam_3:
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000046   0xB024             ADD      SP,SP,#+144
   \   00000048   0xBD10             POP      {R4,PC}          ;; return
     41          }
     42          

   \                                 In section .text, align 2, keep-with-next
     43          uint8 LoadQuadParamInFlash(QuadParamTypeDef * p_quad_param)
     44          {
   \                     LoadQuadParamInFlash:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     45              return ReadFlashStorage(QUAD_PARAM_FLASH_STORAGE_POS, p_quad_param, sizeof(QuadParamTypeDef));
   \   00000004   0x229D             MOVS     R2,#+157
   \   00000006   0x0021             MOVS     R1,R4
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       ReadFlashStorage
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
     46          }
     47          

   \                                 In section .text, align 2, keep-with-next
     48          uint8 CheckQuadParamValid(QuadParamTypeDef quad_param)
     49          {
   \                     CheckQuadParamValid:
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
     50              if(CalculateCrc16_HalfByte(&quad_param, sizeof(QuadParamTypeDef)) != 0)
   \   00000004   0x219D             MOVS     R1,#+157
   \   00000006   0xA802             ADD      R0,SP,#+8
   \   00000008   0x.... 0x....      BL       CalculateCrc16_HalfByte
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD001             BEQ.N    ??CheckQuadParamValid_0
     51              {
     52                  return 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE006             B.N      ??CheckQuadParamValid_1
     53              }
     54              else if(quad_param.size != sizeof(QuadParamTypeDef))
   \                     ??CheckQuadParamValid_0:
   \   00000014   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000018   0x289D             CMP      R0,#+157
   \   0000001A   0xD001             BEQ.N    ??CheckQuadParamValid_2
     55              {
     56                  return 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??CheckQuadParamValid_1
     57              }
     58              else
     59              {
     60                  return 1;
   \                     ??CheckQuadParamValid_2:
   \   00000020   0x2001             MOVS     R0,#+1
   \                     ??CheckQuadParamValid_1:
   \   00000022   0xBC02             POP      {R1}
   \   00000024   0xF85D 0xFB14      LDR      PC,[SP], #+20    ;; return
     61              }
     62          }
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void LoadDefaultQuadParam(QuadParamTypeDef * p_quad_param)
     65          {
   \                     LoadDefaultQuadParam:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     66              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     67          
     68              p_quad_param->size = sizeof(QuadParamTypeDef);
   \   00000006   0x209D             MOVS     R0,#+157
   \   00000008   0x7020             STRB     R0,[R4, #+0]
     69          
     70              p_quad_param->acc_offset[0] = -200;
   \   0000000A   0xF07F 0x00C7      MVNS     R0,#+199
   \   0000000E   0xF8A4 0x0001      STRH     R0,[R4, #+1]
     71              p_quad_param->acc_offset[1] = 100;
   \   00000012   0x2064             MOVS     R0,#+100
   \   00000014   0xF8A4 0x0003      STRH     R0,[R4, #+3]
     72              p_quad_param->acc_offset[2] = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF8A4 0x0005      STRH     R0,[R4, #+5]
     73          
     74              p_quad_param->gyr_offset[0] = 5;
   \   0000001E   0x2005             MOVS     R0,#+5
   \   00000020   0xF8A4 0x0013      STRH     R0,[R4, #+19]
     75              p_quad_param->gyr_offset[1] = 41;
   \   00000024   0x2029             MOVS     R0,#+41
   \   00000026   0xF8A4 0x0015      STRH     R0,[R4, #+21]
     76              p_quad_param->gyr_offset[2] = -16;
   \   0000002A   0xF07F 0x000F      MVNS     R0,#+15
   \   0000002E   0xF8A4 0x0017      STRH     R0,[R4, #+23]
     77          
     78              p_quad_param->mag_offset[0] = 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0xF8A4 0x0025      STRH     R0,[R4, #+37]
     79              p_quad_param->mag_offset[1] = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0xF8A4 0x0027      STRH     R0,[R4, #+39]
     80              p_quad_param->mag_offset[2] = 0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0xF8A4 0x0029      STRH     R0,[R4, #+41]
     81          
     82              for(i = 0; i < 3; i++)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x0005             MOVS     R5,R0
   \                     ??LoadDefaultQuadParam_0:
   \   00000048   0x2D03             CMP      R5,#+3
   \   0000004A   0xDA11             BGE.N    ??LoadDefaultQuadParam_1
     83              {
     84                  p_quad_param->acc_gain[i] = 0.0005981445f ;
   \   0000004C   0xEB14 0x0085      ADDS     R0,R4,R5, LSL #+2
   \   00000050   0x....             LDR.N    R1,??DataTable3_1  ;; 0x3a1ccccc
   \   00000052   0xF8C0 0x1007      STR      R1,[R0, #+7]
     85                  p_quad_param->gyr_gain[i] = 0.001065264f;
   \   00000056   0xEB14 0x0085      ADDS     R0,R4,R5, LSL #+2
   \   0000005A   0x....             LDR.N    R1,??DataTable3_2  ;; 0x3a8ba054
   \   0000005C   0xF8C0 0x1019      STR      R1,[R0, #+25]
     86                  p_quad_param->mag_gain[i] = 1;
   \   00000060   0xEB14 0x0085      ADDS     R0,R4,R5, LSL #+2
   \   00000064   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   00000068   0xF8C0 0x102B      STR      R1,[R0, #+43]
     87              }
   \   0000006C   0x1C6D             ADDS     R5,R5,#+1
   \   0000006E   0xE7EB             B.N      ??LoadDefaultQuadParam_0
     88          
     89              for(i = 0; i < 4; i++)
   \                     ??LoadDefaultQuadParam_1:
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x0005             MOVS     R5,R0
   \                     ??LoadDefaultQuadParam_2:
   \   00000074   0x2D04             CMP      R5,#+4
   \   00000076   0xDA0D             BGE.N    ??LoadDefaultQuadParam_3
     90              {
     91                  p_quad_param->WFLY_RC_offset[i] = 1520;
   \   00000078   0xEB14 0x0085      ADDS     R0,R4,R5, LSL #+2
   \   0000007C   0xF44F 0x61BE      MOV      R1,#+1520
   \   00000080   0xF8C0 0x1037      STR      R1,[R0, #+55]
     92                  p_quad_param->WFLY_RC_max_range[i] = 700;
   \   00000084   0xEB14 0x0085      ADDS     R0,R4,R5, LSL #+2
   \   00000088   0xF44F 0x712F      MOV      R1,#+700
   \   0000008C   0xF8C0 0x1047      STR      R1,[R0, #+71]
     93              }
   \   00000090   0x1C6D             ADDS     R5,R5,#+1
   \   00000092   0xE7EF             B.N      ??LoadDefaultQuadParam_2
     94          
     95              for(i = 0; i < 2; i++)
   \                     ??LoadDefaultQuadParam_3:
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x0005             MOVS     R5,R0
   \                     ??LoadDefaultQuadParam_4:
   \   00000098   0x2D02             CMP      R5,#+2
   \   0000009A   0xDA2A             BGE.N    ??LoadDefaultQuadParam_5
     96              {
     97                  p_quad_param->ypr_pid_param[i].p = 0.45;
   \   0000009C   0x2014             MOVS     R0,#+20
   \   0000009E   0xFB00 0x4005      MLA      R0,R0,R5,R4
   \   000000A2   0x....             LDR.N    R1,??DataTable3_3  ;; 0x3ee66666
   \   000000A4   0xF8C0 0x1057      STR      R1,[R0, #+87]
     98                  p_quad_param->ypr_pid_param[i].i = 0.0025;
   \   000000A8   0x2014             MOVS     R0,#+20
   \   000000AA   0xFB00 0x4005      MLA      R0,R0,R5,R4
   \   000000AE   0x....             LDR.N    R1,??DataTable3_4  ;; 0x3b23d70a
   \   000000B0   0xF8C0 0x105B      STR      R1,[R0, #+91]
     99                  p_quad_param->ypr_pid_param[i].d = 15;
   \   000000B4   0x2014             MOVS     R0,#+20
   \   000000B6   0xFB00 0x4005      MLA      R0,R0,R5,R4
   \   000000BA   0x....             LDR.N    R1,??DataTable3_5  ;; 0x41700000
   \   000000BC   0xF8C0 0x105F      STR      R1,[R0, #+95]
    100                  p_quad_param->ypr_pid_param[i].i_output_limit = 0.05;
   \   000000C0   0x2014             MOVS     R0,#+20
   \   000000C2   0xFB00 0x4005      MLA      R0,R0,R5,R4
   \   000000C6   0x....             LDR.N    R1,??DataTable3_6  ;; 0x3d4ccccd
   \   000000C8   0xF8C0 0x1067      STR      R1,[R0, #+103]
    101                  p_quad_param->ypr_pid_param[i].i_limit = p_quad_param->ypr_pid_param[i].i_output_limit / p_quad_param->ypr_pid_param[i].i;
   \   000000CC   0x2014             MOVS     R0,#+20
   \   000000CE   0xFB00 0x4105      MLA      R1,R0,R5,R4
   \   000000D2   0xF8D1 0x0067      LDR      R0,[R1, #+103]
   \   000000D6   0x2114             MOVS     R1,#+20
   \   000000D8   0xFB01 0x4205      MLA      R2,R1,R5,R4
   \   000000DC   0xF8D2 0x105B      LDR      R1,[R2, #+91]
   \   000000E0   0x2214             MOVS     R2,#+20
   \   000000E2   0xFB02 0x4605      MLA      R6,R2,R5,R4
   \   000000E6   0x.... 0x....      BL       __aeabi_fdiv
   \   000000EA   0xF8C6 0x0063      STR      R0,[R6, #+99]
    102              }
   \   000000EE   0x1C6D             ADDS     R5,R5,#+1
   \   000000F0   0xE7D2             B.N      ??LoadDefaultQuadParam_4
    103              p_quad_param->ypr_pid_param[2].p = 0.25;
   \                     ??LoadDefaultQuadParam_5:
   \   000000F2   0xF05F 0x507A      MOVS     R0,#+1048576000
   \   000000F6   0xF8C4 0x007F      STR      R0,[R4, #+127]
    104              p_quad_param->ypr_pid_param[2].i = 0;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0xF8C4 0x0083      STR      R0,[R4, #+131]
    105              p_quad_param->ypr_pid_param[2].d = 0;
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0xF8C4 0x0087      STR      R0,[R4, #+135]
    106              p_quad_param->ypr_pid_param[2].i_output_limit = 0;
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0xF8C4 0x008F      STR      R0,[R4, #+143]
    107              p_quad_param->ypr_pid_param[2].i_limit = p_quad_param->ypr_pid_param[2].i_output_limit / p_quad_param->ypr_pid_param[2].i;
   \   0000010C   0xF8D4 0x008F      LDR      R0,[R4, #+143]
   \   00000110   0xF8D4 0x1083      LDR      R1,[R4, #+131]
   \   00000114   0x.... 0x....      BL       __aeabi_fdiv
   \   00000118   0xF8C4 0x008B      STR      R0,[R4, #+139]
    108          
    109              p_quad_param->halt_voltage = 14.8;
   \   0000011C   0x....             LDR.N    R0,??DataTable3_7  ;; 0x416ccccd
   \   0000011E   0xF8C4 0x0093      STR      R0,[R4, #+147]
    110          
    111              p_quad_param->halt_inclination_angle = 30;
   \   00000122   0x....             LDR.N    R0,??DataTable3_8  ;; 0x41f00000
   \   00000124   0xF8C4 0x0097      STR      R0,[R4, #+151]
    112          
    113              RefreshQuadParamCrc(p_quad_param);
   \   00000128   0x0020             MOVS     R0,R4
   \   0000012A   0x.... 0x....      BL       RefreshQuadParamCrc
    114          }
   \   0000012E   0xBD70             POP      {R4-R6,PC}       ;; return
    115          

   \                                 In section .text, align 2, keep-with-next
    116          void RefreshQuadParamCrc(QuadParamTypeDef * p_quad_param)
    117          {
   \                     RefreshQuadParamCrc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    118              uint16 ccitt_crc_code = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    119          
    120              ccitt_crc_code = CalculateCrc16_HalfByte(p_quad_param, sizeof(QuadParamTypeDef) - 2);
   \   0000000C   0x219B             MOVS     R1,#+155
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       CalculateCrc16_HalfByte
   \   00000014   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    121          
    122              ExchangeUint16Bytes(&ccitt_crc_code);
   \   00000018   0xA800             ADD      R0,SP,#+0
   \   0000001A   0x.... 0x....      BL       ExchangeUint16Bytes
    123          
    124              p_quad_param->crc_code = ccitt_crc_code;
   \   0000001E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000022   0xF8A4 0x009B      STRH     R0,[R4, #+155]
    125          }
   \   00000026   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    126          

   \                                 In section .text, align 2, keep-with-next
    127          uint8 SaveQuadParamToFlash(QuadParamTypeDef quad_param)
    128          {
   \                     SaveQuadParamToFlash:
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB510             PUSH     {R4,LR}
    129              uint8 result = 0;
   \   00000004   0x2400             MOVS     R4,#+0
    130          
    131              RefreshQuadParamCrc(&quad_param);
   \   00000006   0xA802             ADD      R0,SP,#+8
   \   00000008   0x.... 0x....      BL       RefreshQuadParamCrc
    132          
    133              result = WriteFlashStorage(QUAD_PARAM_FLASH_STORAGE_POS, &quad_param, sizeof(QuadParamTypeDef));
   \   0000000C   0x229D             MOVS     R2,#+157
   \   0000000E   0xA902             ADD      R1,SP,#+8
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       WriteFlashStorage
   \   00000016   0x0004             MOVS     R4,R0
    134              
    135              return result;
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xBC10             POP      {R4}
   \   0000001E   0xF85D 0xFB14      LDR      PC,[SP], #+20    ;; return
    136          }
    137          

   \                                 In section .text, align 2, keep-with-next
    138          QuadParamTypeDef * GetQuadParamInRam(void)
    139          {
    140              return &s_sQuadParamInRam;
   \                     GetQuadParamInRam:
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x4770             BX       LR               ;; return
    141          }
    142          

   \                                 In section .text, align 2, keep-with-next
    143          void ApplyQuadParam(QuadParamTypeDef quad_param)
    144          {
   \                     ApplyQuadParam:
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB510             PUSH     {R4,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
    145              int i = 0;
   \   00000006   0x2400             MOVS     R4,#+0
    146          
    147              for(i = 0; i < 3; i++)
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x0004             MOVS     R4,R0
   \                     ??ApplyQuadParam_0:
   \   0000000C   0x2C03             CMP      R4,#+3
   \   0000000E   0xDA49             BGE.N    ??ApplyQuadParam_1
    148              {
    149                  g_i16AccOffset[i] = quad_param.acc_offset[i];
   \   00000010   0xA808             ADD      R0,SP,#+32
   \   00000012   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   00000016   0xF8B0 0x0001      LDRH     R0,[R0, #+1]
   \   0000001A   0x....             LDR.N    R1,??DataTable3_9
   \   0000001C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
    150                  g_f32AccGain[i]   = quad_param.acc_gain[i];
   \   00000020   0xA808             ADD      R0,SP,#+32
   \   00000022   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000026   0xF8D0 0x1007      LDR      R1,[R0, #+7]
   \   0000002A   0x....             LDR.N    R0,??DataTable3_10
   \   0000002C   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
    151                  g_i16GyrOffset[i] = quad_param.gyr_offset[i];
   \   00000030   0xA808             ADD      R0,SP,#+32
   \   00000032   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   00000036   0xF8B0 0x0013      LDRH     R0,[R0, #+19]
   \   0000003A   0x....             LDR.N    R1,??DataTable3_11
   \   0000003C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
    152                  g_f32GyrGain[i]   = quad_param.gyr_gain[i];
   \   00000040   0xA808             ADD      R0,SP,#+32
   \   00000042   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000046   0xF8D0 0x1019      LDR      R1,[R0, #+25]
   \   0000004A   0x....             LDR.N    R0,??DataTable3_12
   \   0000004C   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
    153                  g_i16MagOffset[i] = quad_param.mag_offset[i];
   \   00000050   0xA808             ADD      R0,SP,#+32
   \   00000052   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   00000056   0xF8B0 0x0025      LDRH     R0,[R0, #+37]
   \   0000005A   0x....             LDR.N    R1,??DataTable3_13
   \   0000005C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
    154                  g_f32MagGain[i]   = quad_param.mag_gain[i];
   \   00000060   0xA808             ADD      R0,SP,#+32
   \   00000062   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000066   0xF8D0 0x102B      LDR      R1,[R0, #+43]
   \   0000006A   0x....             LDR.N    R0,??DataTable3_14
   \   0000006C   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
    155                  g_sXYZPidPara[i]  = quad_param.ypr_pid_param[i];
   \   00000070   0x2000             MOVS     R0,#+0
   \                     ??ApplyQuadParam_2:
   \   00000072   0x2114             MOVS     R1,#+20
   \   00000074   0xAA08             ADD      R2,SP,#+32
   \   00000076   0xFB01 0x2104      MLA      R1,R1,R4,R2
   \   0000007A   0x1841             ADDS     R1,R0,R1
   \   0000007C   0xF891 0x1057      LDRB     R1,[R1, #+87]
   \   00000080   0xAA00             ADD      R2,SP,#+0
   \   00000082   0x5481             STRB     R1,[R0, R2]
   \   00000084   0x1C40             ADDS     R0,R0,#+1
   \   00000086   0x2814             CMP      R0,#+20
   \   00000088   0xDBF3             BLT.N    ??ApplyQuadParam_2
   \   0000008A   0x2014             MOVS     R0,#+20
   \   0000008C   0x....             LDR.N    R1,??DataTable3_15
   \   0000008E   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000092   0xA900             ADD      R1,SP,#+0
   \   00000094   0x2214             MOVS     R2,#+20
   \   00000096   0x.... 0x....      BL       __aeabi_memcpy4
    156                  InitPID(g_sXYZPidPara);
   \   0000009A   0x....             LDR.N    R0,??DataTable3_15
   \   0000009C   0x.... 0x....      BL       InitPID
    157              }
   \   000000A0   0x1C64             ADDS     R4,R4,#+1
   \   000000A2   0xE7B3             B.N      ??ApplyQuadParam_0
    158          
    159              for(i = 0; i < 4; i++)
   \                     ??ApplyQuadParam_1:
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x0004             MOVS     R4,R0
   \                     ??ApplyQuadParam_3:
   \   000000A8   0x2C04             CMP      R4,#+4
   \   000000AA   0xDA11             BGE.N    ??ApplyQuadParam_4
    160              {
    161                  g_u32WFLY_RC_offset[i] = quad_param.WFLY_RC_offset[i];
   \   000000AC   0xA808             ADD      R0,SP,#+32
   \   000000AE   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000000B2   0xF8D0 0x0037      LDR      R0,[R0, #+55]
   \   000000B6   0x....             LDR.N    R1,??DataTable3_16
   \   000000B8   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
    162                  g_u32WFLY_RC_max_range[i] = quad_param.WFLY_RC_max_range[i];
   \   000000BC   0xA808             ADD      R0,SP,#+32
   \   000000BE   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000000C2   0xF8D0 0x0047      LDR      R0,[R0, #+71]
   \   000000C6   0x....             LDR.N    R1,??DataTable3_17
   \   000000C8   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
    163              }
   \   000000CC   0x1C64             ADDS     R4,R4,#+1
   \   000000CE   0xE7EB             B.N      ??ApplyQuadParam_3
    164          
    165              g_f32HaltVoltage = quad_param.halt_voltage;
   \                     ??ApplyQuadParam_4:
   \   000000D0   0xF10D 0x00B3      ADD      R0,SP,#+179
   \   000000D4   0x6801             LDR      R1,[R0, #+0]
   \   000000D6   0x....             LDR.N    R0,??DataTable3_18
   \   000000D8   0x6001             STR      R1,[R0, #+0]
    166              //g_f32HaltInclinationAngle = quad_param.halt_inclination_angle;
    167          }
   \   000000DA   0xB006             ADD      SP,SP,#+24
   \   000000DC   0xBC10             POP      {R4}
   \   000000DE   0xF85D 0xFB14      LDR      PC,[SP], #+20    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     s_sQuadParamInRam

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x3A1CCCCC         DC32     0x3a1ccccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x3A8BA054         DC32     0x3a8ba054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x3EE66666         DC32     0x3ee66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x3B23D70A         DC32     0x3b23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x41700000         DC32     0x41700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x3D4CCCCD         DC32     0x3d4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x416CCCCD         DC32     0x416ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     g_i16AccOffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     g_f32AccGain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     g_i16GyrOffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     g_f32GyrGain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     g_i16MagOffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     g_f32MagGain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     g_sXYZPidPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     g_u32WFLY_RC_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     g_u32WFLY_RC_max_range

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     g_f32HaltVoltage

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       48  ApplyQuadParam
              48 -> InitPID
              48 -> __aeabi_memcpy4
       24  CheckQuadParamValid
              24 -> CalculateCrc16_HalfByte
        0  GetQuadParamInRam
      168  InitQuadParam
             152 -> CheckQuadParamValid
             152 -> LoadDefaultQuadParam
             152 -> LoadQuadParamInFlash
             168 -> __aeabi_memcpy4
       16  LoadDefaultQuadParam
              16 -> RefreshQuadParamCrc
              16 -> __aeabi_fdiv
        8  LoadQuadParamInFlash
               8 -> ReadFlashStorage
       16  RefreshQuadParamCrc
              16 -> CalculateCrc16_HalfByte
              16 -> ExchangeUint16Bytes
       24  SaveQuadParamToFlash
              24 -> RefreshQuadParamCrc
              24 -> WriteFlashStorage


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
     226  ApplyQuadParam
      40  CheckQuadParamValid
       4  GetQuadParamInRam
      74  InitQuadParam
     304  LoadDefaultQuadParam
      16  LoadQuadParamInFlash
      40  RefreshQuadParamCrc
      34  SaveQuadParamToFlash
     160  s_sQuadParamInRam

 
 160 bytes in section .bss
 814 bytes in section .text
 
 814 bytes of CODE memory
 160 bytes of DATA memory

Errors: none
Warnings: none
