###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     04/Apr/2014  10:11:06 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\battery.c                                             #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\battery.c -D LPLD_K60 -lCN                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V2\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V2\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\ #
#                    iar\..\source\module\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V2\iar\..\source\module\eMPL\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\CPU\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad #
#                    _V2\iar\..\source\lib\common\ -I                         #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\LPLD\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qua #
#                    d_V2\iar\..\source\lib\LPLD\HW\ -I                       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\LPLD\DEV\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD #
#                    _Quad_V2\iar\..\source\lib\uCOS-II\Ports\ -I             #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\uCOS-II\Source\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V2\iar\..\source\lib\FatFs\ -I               #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\FatFs\option\ -I E:\ShawnDocuments\IAR_WorkSpace\ #
#                    LPLD_Quad_V2\iar\..\source\lib\USB\common\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\driver\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V2\iar\..\source\lib\USB\descriptor\ -I          #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\class\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V2\iar\..\source\lib\MyLib\ -On -I "D:\Program    #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\CMSIS\Include\" -D ARM_MATH_CM4                  #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\battery.lst                                     #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\Obj\battery.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\module\battery.c
      1          /****************************************************************************** 
      2           *       battery.c ----- The AD Conversion of Battery Voltage          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  battery.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/4 9:42:47                                                       *
     10           ******************************************************************************/
     11          #include "battery.h"
     12          

   \                                 In section .bss, align 2
     13          uint16 g_battery_voltage = 0;
   \                     g_battery_voltage:
   \   00000000                      DS8 2
     14          

   \                                 In section .text, align 2, keep-with-next
     15          void InitBatteryVoltageMeasurement(void)
     16          {
   \                     InitBatteryVoltageMeasurement:
   \   00000000   0xB580             PUSH     {R7,LR}
     17              static ADC_InitTypeDef battery_voltage_adc_init_struct;
     18              battery_voltage_adc_init_struct.ADC_Adcx = ADC0;
   \   00000002   0x....             LDR.N    R0,??DataTable1
   \   00000004   0x....             LDR.N    R1,??DataTable1_1  ;; 0x4003b000
   \   00000006   0x6001             STR      R1,[R0, #+0]
     19              battery_voltage_adc_init_struct.ADC_DiffMode = ADC_SE;
   \   00000008   0x....             LDR.N    R0,??DataTable1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7101             STRB     R1,[R0, #+4]
     20              battery_voltage_adc_init_struct.ADC_BitMode = SE_12BIT;
   \   0000000E   0x....             LDR.N    R0,??DataTable1
   \   00000010   0x2101             MOVS     R1,#+1
   \   00000012   0x7141             STRB     R1,[R0, #+5]
     21              battery_voltage_adc_init_struct.ADC_SampleTimeCfg = SAMTIME_SHORT;
   \   00000014   0x....             LDR.N    R0,??DataTable1
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x7181             STRB     R1,[R0, #+6]
     22              battery_voltage_adc_init_struct.ADC_HwAvgSel = HW_4AVG;
   \   0000001A   0x....             LDR.N    R0,??DataTable1
   \   0000001C   0x2104             MOVS     R1,#+4
   \   0000001E   0x7201             STRB     R1,[R0, #+8]
     23              battery_voltage_adc_init_struct.ADC_CalEnable = TRUE;
   \   00000020   0x....             LDR.N    R0,??DataTable1
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x72C1             STRB     R1,[R0, #+11]
     24              battery_voltage_adc_init_struct.ADC_Isr = BatteryVoltageADCIsr;
   \   00000026   0x....             LDR.N    R0,??DataTable1
   \   00000028   0x.... 0x....      ADR.W    R1,BatteryVoltageADCIsr
   \   0000002C   0x6101             STR      R1,[R0, #+16]
     25          
     26              LPLD_ADC_Init(battery_voltage_adc_init_struct);
   \   0000002E   0x....             LDR.N    R1,??DataTable1
   \   00000030   0xB084             SUB      SP,SP,#+16
   \   00000032   0x4668             MOV      R0,SP
   \   00000034   0x2214             MOVS     R2,#+20
   \   00000036   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003A   0xBC0F             POP      {R0-R3}
   \   0000003C   0x.... 0x....      BL       LPLD_ADC_Init
     27          
     28              LPLD_ADC_Chn_Enable(ADC0, DAD1);
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4003b000
   \   00000044   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     29          
     30              LPLD_ADC_EnableIrq(battery_voltage_adc_init_struct);
   \   00000048   0x....             LDR.N    R1,??DataTable1
   \   0000004A   0xB084             SUB      SP,SP,#+16
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x2214             MOVS     R2,#+20
   \   00000050   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000054   0xBC0F             POP      {R0-R3}
   \   00000056   0x.... 0x....      BL       LPLD_ADC_EnableIrq
     31          
     32              LPLD_ADC_Get(ADC0, DAD1);
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4003b000
   \   0000005E   0x.... 0x....      BL       LPLD_ADC_Get
     33          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??battery_voltage_adc_init_struct:
   \   00000000                      DS8 20
     34          

   \                                 In section .text, align 4, keep-with-next
     35          void BatteryVoltageADCIsr(void)
     36          {
   \                     BatteryVoltageADCIsr:
   \   00000000   0xB510             PUSH     {R4,LR}
     37              uint16 adc_result = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     38          
     39              adc_result = LPLD_ADC_Get(ADC0, DAD1);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4003b000
   \   00000008   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000000C   0x0004             MOVS     R4,R0
     40              
     41              g_battery_voltage = (uint16)((uint32)adc_result * 330 / 4096);
   \   0000000E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000010   0xF44F 0x70A5      MOV      R0,#+330
   \   00000014   0xFB00 0xF004      MUL      R0,R0,R4
   \   00000018   0x0B00             LSRS     R0,R0,#+12
   \   0000001A   0x....             LDR.N    R1,??DataTable1_2
   \   0000001C   0x8008             STRH     R0,[R1, #+0]
     42          
     43              g_battery_voltage = g_battery_voltage * 6;
   \   0000001E   0x....             LDR.N    R0,??DataTable1_2
   \   00000020   0x8800             LDRH     R0,[R0, #+0]
   \   00000022   0x2106             MOVS     R1,#+6
   \   00000024   0xFB10 0xF001      SMULBB   R0,R0,R1
   \   00000028   0x....             LDR.N    R1,??DataTable1_2
   \   0000002A   0x8008             STRH     R0,[R1, #+0]
     44          }
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ??battery_voltage_adc_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     g_battery_voltage

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  BatteryVoltageADCIsr
              8 -> LPLD_ADC_Get
       24  InitBatteryVoltageMeasurement
              8 -> LPLD_ADC_Chn_Enable
              8 -> LPLD_ADC_EnableIrq
              8 -> LPLD_ADC_Get
              8 -> LPLD_ADC_Init
             24 -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
      46  BatteryVoltageADCIsr
     100  InitBatteryVoltageMeasurement
      20  battery_voltage_adc_init_struct
       2  g_battery_voltage

 
  22 bytes in section .bss
 158 bytes in section .text
 
 158 bytes of CODE memory
  22 bytes of DATA memory

Errors: none
Warnings: none
