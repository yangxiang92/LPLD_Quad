###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     08/Aug/2014  19:52:13 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Others\sysflag.c                                         #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Others\sysflag.c -D LPLD_K60 -lCN                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\sysflag.lst                                     #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\sysflag.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\Others\sysflag.c
      1          /****************************************************************************** 
      2           *       sysflag.c ----- The code to set system flag          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  sysflag.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/5/1 16:37:11                                                       *
     10           ******************************************************************************/
     11          #include "sysflag.h"
     12          

   \                                 In section .bss, align 4
     13          QuadSystemFlagTypeDef g_sQuadSystemFlag = {0};
   \                     g_sQuadSystemFlag:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
     14          static QuadSystemSettingTypeDef s_sLastQuadSystemSettingInRam = {0};
   \                     s_sLastQuadSystemSettingInRam:
   \   00000000                      DS8 8
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void GetSystemSettingOnSwitch(void)
     17          {
   \                     GetSystemSettingOnSwitch:
   \   00000000   0xB580             PUSH     {R7,LR}
     18              g_sQuadSystemFlag.sys_setting.acc_getoffset = !!ReadSwitches(GET_ACC_OFFSET_SWITCH_BIT_MASK);
   \   00000002   0x2002             MOVS     R0,#+2
   \   00000004   0x.... 0x....      BL       ReadSwitches
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_0
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0xE000             B.N      ??GetSystemSettingOnSwitch_1
   \                     ??GetSystemSettingOnSwitch_0:
   \   00000010   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_1:
   \   00000012   0x....             LDR.N    R1,??DataTable4
   \   00000014   0x7148             STRB     R0,[R1, #+5]
     19          
     20              g_sQuadSystemFlag.sys_setting.gyr_getoffset = !!ReadSwitches(GET_GYR_OFFSET_SWITCH_BIT_MASK);
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       ReadSwitches
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_2
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xE000             B.N      ??GetSystemSettingOnSwitch_3
   \                     ??GetSystemSettingOnSwitch_2:
   \   00000024   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_3:
   \   00000026   0x....             LDR.N    R1,??DataTable4
   \   00000028   0x7188             STRB     R0,[R1, #+6]
     21          
     22              g_sQuadSystemFlag.sys_setting.WFLY_RC_getoffset = !!ReadSwitches(GET_WFLY_RC_OFFSET_SWITCH_BIT_MASK);
   \   0000002A   0x2004             MOVS     R0,#+4
   \   0000002C   0x.... 0x....      BL       ReadSwitches
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_4
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0xE000             B.N      ??GetSystemSettingOnSwitch_5
   \                     ??GetSystemSettingOnSwitch_4:
   \   00000038   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_5:
   \   0000003A   0x....             LDR.N    R1,??DataTable4
   \   0000003C   0x71C8             STRB     R0,[R1, #+7]
     23          
     24              g_sQuadSystemFlag.sys_setting.save_default_param_to_flash = !!ReadSwitches(SAVE_DEFAULT_PARAM_TO_FLASH_SWITCH_BIT_MASK);
   \   0000003E   0x2040             MOVS     R0,#+64
   \   00000040   0x.... 0x....      BL       ReadSwitches
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_6
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0xE000             B.N      ??GetSystemSettingOnSwitch_7
   \                     ??GetSystemSettingOnSwitch_6:
   \   0000004C   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_7:
   \   0000004E   0x....             LDR.N    R1,??DataTable4
   \   00000050   0x7208             STRB     R0,[R1, #+8]
     25          
     26              g_sQuadSystemFlag.sys_setting.use_ak8975c = 0;//!!ReadSwitches(USE_AK8975C_SWITCH_BIT_MASK);
   \   00000052   0x....             LDR.N    R0,??DataTable4
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x7241             STRB     R1,[R0, #+9]
     27          
     28              g_sQuadSystemFlag.sys_setting.lock_height = !!ReadSwitches(LOCK_HEIGHT_CONTROL_SWITCH_BIT_MASK);
   \   00000058   0x2020             MOVS     R0,#+32
   \   0000005A   0x.... 0x....      BL       ReadSwitches
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_8
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xE000             B.N      ??GetSystemSettingOnSwitch_9
   \                     ??GetSystemSettingOnSwitch_8:
   \   00000066   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_9:
   \   00000068   0x....             LDR.N    R1,??DataTable4
   \   0000006A   0x7308             STRB     R0,[R1, #+12]
     29          
     30              g_sQuadSystemFlag.sys_setting.use_buzzer = !!ReadSwitches(USE_BUZZER_SWITCH_BIT_MASK);
   \   0000006C   0x2010             MOVS     R0,#+16
   \   0000006E   0x.... 0x....      BL       ReadSwitches
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_10
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0xE000             B.N      ??GetSystemSettingOnSwitch_11
   \                     ??GetSystemSettingOnSwitch_10:
   \   0000007A   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_11:
   \   0000007C   0x....             LDR.N    R1,??DataTable4
   \   0000007E   0x7288             STRB     R0,[R1, #+10]
     31          
     32              g_sQuadSystemFlag.sys_setting.use_WFLY_RC = !!ReadSwitches(USE_WFLY_RC_SWITCH_BIT_MASK);
   \   00000080   0x2008             MOVS     R0,#+8
   \   00000082   0x.... 0x....      BL       ReadSwitches
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD001             BEQ.N    ??GetSystemSettingOnSwitch_12
   \   0000008A   0x2001             MOVS     R0,#+1
   \   0000008C   0xE000             B.N      ??GetSystemSettingOnSwitch_13
   \                     ??GetSystemSettingOnSwitch_12:
   \   0000008E   0x2000             MOVS     R0,#+0
   \                     ??GetSystemSettingOnSwitch_13:
   \   00000090   0x....             LDR.N    R1,??DataTable4
   \   00000092   0x72C8             STRB     R0,[R1, #+11]
     33          }
   \   00000094   0xBD01             POP      {R0,PC}          ;; return
     34          

   \                                 In section .text, align 2, keep-with-next
     35          uint8 LoadLastSystemSetting()
     36          {
   \                     LoadLastSystemSetting:
   \   00000000   0xB510             PUSH     {R4,LR}
     37              uint8 result= 0;
   \   00000002   0x2400             MOVS     R4,#+0
     38              
     39              result = ReadFlashStorage(LAST_SYSTEM_SETTING_POS, &s_sLastQuadSystemSettingInRam, sizeof(QuadSystemSettingTypeDef));
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x....             LDR.N    R1,??DataTable4_1
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x.... 0x....      BL       ReadFlashStorage
   \   00000010   0x0004             MOVS     R4,R0
     40          
     41              if(result == 0)
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x2C00             CMP      R4,#+0
   \   00000016   0xD101             BNE.N    ??LoadLastSystemSetting_0
     42              {
     43                  SetDefaultLastSystemSettingInRam();
   \   00000018   0x.... 0x....      BL       SetDefaultLastSystemSettingInRam
     44              }
     45          
     46              return result;
   \                     ??LoadLastSystemSetting_0:
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
     47          }
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void SetDefaultLastSystemSettingInRam(void)
     50          {
     51              s_sLastQuadSystemSettingInRam.acc_getoffset = 0;
   \                     SetDefaultLastSystemSettingInRam:
   \   00000000   0x....             LDR.N    R0,??DataTable4_1
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
     52              s_sLastQuadSystemSettingInRam.gyr_getoffset = 0;
   \   00000006   0x....             LDR.N    R0,??DataTable4_1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x7041             STRB     R1,[R0, #+1]
     53              s_sLastQuadSystemSettingInRam.WFLY_RC_getoffset = 0;
   \   0000000C   0x....             LDR.N    R0,??DataTable4_1
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7081             STRB     R1,[R0, #+2]
     54              s_sLastQuadSystemSettingInRam.save_default_param_to_flash = 1;
   \   00000012   0x....             LDR.N    R0,??DataTable4_1
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x70C1             STRB     R1,[R0, #+3]
     55              s_sLastQuadSystemSettingInRam.use_ak8975c = 0;
   \   00000018   0x....             LDR.N    R0,??DataTable4_1
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x7101             STRB     R1,[R0, #+4]
     56              s_sLastQuadSystemSettingInRam.use_buzzer = 1;
   \   0000001E   0x....             LDR.N    R0,??DataTable4_1
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x7141             STRB     R1,[R0, #+5]
     57              s_sLastQuadSystemSettingInRam.use_WFLY_RC = 0;    
   \   00000024   0x....             LDR.N    R0,??DataTable4_1
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x7181             STRB     R1,[R0, #+6]
     58          }
   \   0000002A   0x4770             BX       LR               ;; return
     59          

   \                                 In section .text, align 2, keep-with-next
     60          uint8 SaveThisSystemSettingToFlash(void)
     61          {
   \                     SaveThisSystemSettingToFlash:
   \   00000000   0xB510             PUSH     {R4,LR}
     62              uint8 result = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     63          
     64              result = WriteFlashStorage(LAST_SYSTEM_SETTING_POS, &(g_sQuadSystemFlag.sys_setting), sizeof(QuadSystemSettingTypeDef));
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x....             LDR.N    R1,??DataTable4_2
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x.... 0x....      BL       WriteFlashStorage
   \   00000010   0x0004             MOVS     R4,R0
     65          
     66              return result;
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     67          }
     68          

   \                                 In section .text, align 2, keep-with-next
     69          uint8 CheckLastSystemSettingTheSame()
     70          {
   \                     CheckLastSystemSettingTheSame:
   \   00000000   0xB510             PUSH     {R4,LR}
     71              int8 result = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     72          
     73              LoadLastSystemSetting();
   \   00000004   0x.... 0x....      BL       LoadLastSystemSetting
     74              
     75              result = MemoryBytesCompare(&s_sLastQuadSystemSettingInRam, &(g_sQuadSystemFlag.sys_setting), sizeof(QuadSystemSettingTypeDef));
   \   00000008   0x2208             MOVS     R2,#+8
   \   0000000A   0x....             LDR.N    R1,??DataTable4_2
   \   0000000C   0x....             LDR.N    R0,??DataTable4_1
   \   0000000E   0x.... 0x....      BL       MemoryBytesCompare
   \   00000012   0x0004             MOVS     R4,R0
     76          
     77              if(result == 0)
   \   00000014   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   00000016   0x2C00             CMP      R4,#+0
   \   00000018   0xD101             BNE.N    ??CheckLastSystemSettingTheSame_0
     78              {
     79                  return 1;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xE000             B.N      ??CheckLastSystemSettingTheSame_1
     80              }
     81              else
     82              {
     83                  return 0;
   \                     ??CheckLastSystemSettingTheSame_0:
   \   0000001E   0x2000             MOVS     R0,#+0
   \                     ??CheckLastSystemSettingTheSame_1:
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
     84              }
     85          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     g_sQuadSystemFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     s_sLastQuadSystemSettingInRam

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     g_sQuadSystemFlag+0x5

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  CheckLastSystemSettingTheSame
             8 -> LoadLastSystemSetting
             8 -> MemoryBytesCompare
        8  GetSystemSettingOnSwitch
             8 -> ReadSwitches
        8  LoadLastSystemSetting
             8 -> ReadFlashStorage
             8 -> SetDefaultLastSystemSettingInRam
        8  SaveThisSystemSettingToFlash
             8 -> WriteFlashStorage
        0  SetDefaultLastSystemSettingInRam


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
      34  CheckLastSystemSettingTheSame
     150  GetSystemSettingOnSwitch
      34  LoadLastSystemSetting
      24  SaveThisSystemSettingToFlash
      44  SetDefaultLastSystemSettingInRam
      16  g_sQuadSystemFlag
       8  s_sLastQuadSystemSettingInRam

 
  24 bytes in section .bss
 298 bytes in section .text
 
 298 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
