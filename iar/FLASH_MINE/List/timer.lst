###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     07/Aug/2014  15:34:42 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\timer.c                                               #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\timer.c -D LPLD_K60 -lCN                              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\timer.lst                                       #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\timer.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\module\timer.c
      1          /****************************************************************************** 
      2           *       timer.c ----- The code to use 1ms timer          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  timer.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/1 19:07:27                                                       *
     10           ******************************************************************************/
     11          #include "timer.h"
     12          

   \                                 In section .bss, align 4
     13          volatile uint32 g_timer_cnt = 0;
   \                     g_timer_cnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          volatile uint32 g_u32TimerMsCnt = 0;
   \                     g_u32TimerMsCnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     15          volatile uint32 g_u32DelayTimerMsCnt = 0;
   \                     g_u32DelayTimerMsCnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          volatile uint32 g_u32ProgramPeriodTimerCnt = 0;
   \                     g_u32ProgramPeriodTimerCnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          volatile uint32 g_u32LostSignalTimerCnt = 0;
   \                     g_u32LostSignalTimerCnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          static volatile uint32 s_u32SystemClockTimerMsCnt = 0;
   \                     s_u32SystemClockTimerMsCnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 8
     19          static volatile uint64_t s_u64SystemClockTimerUsCnt = 0;
   \                     s_u64SystemClockTimerUsCnt:
   \   00000000                      DS8 8
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void InitTimer(void)
     22          {
   \                     InitTimer:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     23              PIT_InitTypeDef timer_init_struct = {TIMER_PITX};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2114             MOVS     R1,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     24          
     25              timer_init_struct.PIT_Pitx = TIMER_PITX;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xF88D 0x0004      STRB     R0,[SP, #+4]
     26              timer_init_struct.PIT_PeriodS = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9004             STR      R0,[SP, #+16]
     27              timer_init_struct.PIT_PeriodMs = TIMER_PERIOD;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x9003             STR      R0,[SP, #+12]
     28              timer_init_struct.PIT_PeriodUs = 0;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9002             STR      R0,[SP, #+8]
     29              timer_init_struct.PIT_Isr = TimerIsr;
   \   0000001E   0x.... 0x....      ADR.W    R0,TimerIsr
   \   00000022   0x9005             STR      R0,[SP, #+20]
     30              LPLD_PIT_Init(timer_init_struct);
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_PIT_Init
     31              LPLD_PIT_EnableIrq(timer_init_struct);
   \   00000036   0xA901             ADD      R1,SP,#+4
   \   00000038   0xB084             SUB      SP,SP,#+16
   \   0000003A   0x4668             MOV      R0,SP
   \   0000003C   0x2214             MOVS     R2,#+20
   \   0000003E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000042   0xBC0F             POP      {R0-R3}
   \   00000044   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     32          }
   \   00000048   0xB007             ADD      SP,SP,#+28
   \   0000004A   0xBD00             POP      {PC}             ;; return
     33          

   \                                 In section .text, align 4, keep-with-next
     34          void TimerIsr(void)
     35          {
     36              s_u32SystemClockTimerMsCnt ++;
   \                     TimerIsr:
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable3
   \   00000008   0x6008             STR      R0,[R1, #+0]
     37              s_u64SystemClockTimerUsCnt = s_u32SystemClockTimerMsCnt * 1000;
   \   0000000A   0x....             LDR.N    R0,??DataTable3
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000012   0x4348             MULS     R0,R1,R0
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x....             LDR.N    R2,??DataTable3_1
   \   00000018   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     38              g_timer_cnt ++;
   \   0000001C   0x....             LDR.N    R0,??DataTable3_2
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0x....             LDR.N    R1,??DataTable3_2
   \   00000024   0x6008             STR      R0,[R1, #+0]
     39              g_u32TimerMsCnt ++;
   \   00000026   0x....             LDR.N    R0,??DataTable3_3
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x1C40             ADDS     R0,R0,#+1
   \   0000002C   0x....             LDR.N    R1,??DataTable3_3
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     40              g_u32DelayTimerMsCnt ++;
   \   00000030   0x....             LDR.N    R0,??DataTable3_4
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \   00000036   0x....             LDR.N    R1,??DataTable3_4
   \   00000038   0x6008             STR      R0,[R1, #+0]
     41              g_u32ProgramPeriodTimerCnt ++;
   \   0000003A   0x....             LDR.N    R0,??DataTable3_5
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x1C40             ADDS     R0,R0,#+1
   \   00000040   0x....             LDR.N    R1,??DataTable3_5
   \   00000042   0x6008             STR      R0,[R1, #+0]
     42              g_u32LostSignalTimerCnt ++;
   \   00000044   0x....             LDR.N    R0,??DataTable3_6
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \   0000004A   0x....             LDR.N    R1,??DataTable3_6
   \   0000004C   0x6008             STR      R0,[R1, #+0]
     43          }
   \   0000004E   0x4770             BX       LR               ;; return
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void DelayWithTimer(uint32 ms)
     46          {
     47              g_u32DelayTimerMsCnt = 0;
   \                     DelayWithTimer:
   \   00000000   0x....             LDR.N    R1,??DataTable3_4
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x600A             STR      R2,[R1, #+0]
     48              while(g_u32DelayTimerMsCnt < ms);
   \                     ??DelayWithTimer_0:
   \   00000006   0x....             LDR.N    R1,??DataTable3_4
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x4281             CMP      R1,R0
   \   0000000C   0xD3FB             BCC.N    ??DelayWithTimer_0
     49          }
   \   0000000E   0x4770             BX       LR               ;; return
     50          

   \                                 In section .text, align 2, keep-with-next
     51          uint64_t GetSystemClockUs(void)
     52          {
   \                     GetSystemClockUs:
   \   00000000   0xB430             PUSH     {R4,R5}
     53              uint64_t ret = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2100             MOVS     R1,#+0
     54              uint32 timer_us_cnt = 0;
   \   00000006   0x2200             MOVS     R2,#+0
     55          
     56              timer_us_cnt = PIT->CHANNEL[TIMER_PITX].LDVAL;
   \   00000008   0x....             LDR.N    R3,??DataTable3_7  ;; 0x40037100
   \   0000000A   0x681B             LDR      R3,[R3, #+0]
   \   0000000C   0x001A             MOVS     R2,R3
     57              timer_us_cnt = timer_us_cnt - PIT->CHANNEL[TIMER_PITX].CVAL;
   \   0000000E   0x....             LDR.N    R3,??DataTable3_8  ;; 0x40037104
   \   00000010   0x681B             LDR      R3,[R3, #+0]
   \   00000012   0x1AD2             SUBS     R2,R2,R3
     58              timer_us_cnt = timer_us_cnt / (g_bus_clock / 1000000);
   \   00000014   0x....             LDR.N    R3,??DataTable3_9
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x....             LDR.N    R4,??DataTable3_10  ;; 0xf4240
   \   0000001A   0xFBB3 0xF3F4      UDIV     R3,R3,R4
   \   0000001E   0xFBB2 0xF2F3      UDIV     R2,R2,R3
     59              
     60              ret = (s_u64SystemClockTimerUsCnt) + (uint64_t)timer_us_cnt;
   \   00000022   0x....             LDR.N    R3,??DataTable3_1
   \   00000024   0xE9D3 0x4500      LDRD     R4,R5,[R3, #+0]
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x18A4             ADDS     R4,R4,R2
   \   0000002C   0x415D             ADCS     R5,R5,R3
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x0029             MOVS     R1,R5
     61          
     62              return ret;
   \   00000032   0xBC30             POP      {R4,R5}
   \   00000034   0x4770             BX       LR               ;; return
     63          }
     64          

   \                                 In section .text, align 2, keep-with-next
     65          uint32 GetSystemClockMs(void)
     66          {
     67              return s_u32SystemClockTimerMsCnt;
   \                     GetSystemClockMs:
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
     68          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     s_u32SystemClockTimerMsCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     s_u64SystemClockTimerUsCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     g_timer_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     g_u32TimerMsCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     g_u32DelayTimerMsCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     g_u32ProgramPeriodTimerCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     g_u32LostSignalTimerCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x40037104         DC32     0x40037104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  DelayWithTimer
        0  GetSystemClockMs
        8  GetSystemClockUs
       48  InitTimer
             32 -> LPLD_PIT_EnableIrq
             32 -> LPLD_PIT_Init
             32 -> __aeabi_memclr4
             48 -> __aeabi_memcpy4
        0  TimerIsr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant {0}>
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      16  DelayWithTimer
       6  GetSystemClockMs
      54  GetSystemClockUs
      76  InitTimer
      80  TimerIsr
       4  g_timer_cnt
       4  g_u32DelayTimerMsCnt
       4  g_u32LostSignalTimerCnt
       4  g_u32ProgramPeriodTimerCnt
       4  g_u32TimerMsCnt
       4  s_u32SystemClockTimerMsCnt
       8  s_u64SystemClockTimerUsCnt

 
  32 bytes in section .bss
  20 bytes in section .rodata
 276 bytes in section .text
 
 276 bytes of CODE  memory
  20 bytes of CONST memory
  32 bytes of DATA  memory

Errors: none
Warnings: none
