###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     12/Apr/2014  10:07:00 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\dmp.c                                                 #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\dmp.c -D LPLD_K60 -lCN E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V2\iar\FLASH_MINE\List\ -lB                  #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\ -o E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V #
#                    2\iar\FLASH_MINE\Obj\ --no_cse --no_unroll --no_inline   #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\i #
#                    ar\..\source\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V2\iar\..\source\app\Communicate\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V2\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V2\iar\..\source\module\eMPL\ -I                         #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\CPU\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad #
#                    _V2\iar\..\source\lib\common\ -I                         #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\LPLD\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qua #
#                    d_V2\iar\..\source\lib\LPLD\HW\ -I                       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\LPLD\DEV\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD #
#                    _Quad_V2\iar\..\source\lib\uCOS-II\Ports\ -I             #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\uCOS-II\Source\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V2\iar\..\source\lib\FatFs\ -I               #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\FatFs\option\ -I E:\ShawnDocuments\IAR_WorkSpace\ #
#                    LPLD_Quad_V2\iar\..\source\lib\USB\common\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\driver\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V2\iar\..\source\lib\USB\descriptor\ -I          #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\class\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V2\iar\..\source\lib\MyLib\ -On -I "D:\Program    #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\CMSIS\Include\" -D ARM_MATH_CM4                  #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\dmp.lst                                         #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\Obj\dmp.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\module\dmp.c
      1          /****************************************************************************** 
      2           *       dmp.c ----- The code to use the DMP function of the mpu9150          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  dmp.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/3/29 18:28:56                                                       *
     10           ******************************************************************************/
     11          #include "dmp.h"
     12          
     13          /* The sensors can be mounted onto the board in any orientation. The mounting
     14           * matrix seen below tells the MPL how to rotate the raw data from thei
     15           * driver(s).
     16           * TODO: The following matrices refer to the configuration on an internal test
     17           * board at Invensense. If needed, please modify the matrices to match the
     18           * chip-to-body matrix for your particular set up.
     19           */

   \                                 In section .data, align 4
     20          static signed char gyro_orientation[9] = {-1, 0, 0,
   \                     gyro_orientation:
   \   00000000   0xFF 0x00          DC8 -1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0
   \              0x00 0x00    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00 0x00    
     21                                                     0,-1, 0,
     22                                                     0, 0, 1};
     23          
     24          /* These next two functions converts the orientation matrix (see
     25           * gyro_orientation) to a scalar representation for use by the DMP.
     26           * NOTE: These functions are borrowed from Invensense's MPL.
     27           */
     28          
     29          /* Every time new gyro data is available, this function is called in an
     30           * ISR context. In this example, it sets a flag protecting the FIFO read
     31           * function.
     32           */
     33          //static void gyro_data_ready_cb(void)
     34          //{
     35          //    hal.new_gyro = 1;
     36          //}
     37          #define q30  1073741824.0f

   \                                 In section .data, align 4
     38          float q0=1.0f,q1=0.0f,q2=0.0f,q3=0.0f;
   \                     q0:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     q1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39          float Pitch=0.0f,Roll=0.0f,Yaw=0.0f;
   \                     Pitch:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Roll:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Yaw:
   \   00000000                      DS8 4
     40          

   \                                 In section .text, align 2, keep-with-next
     41          static  unsigned short inv_row_2_scale(const signed char *row)
     42          {
   \                     inv_row_2_scale:
   \   00000000   0x0001             MOVS     R1,R0
     43              unsigned short b;
     44          
     45              if (row[0] > 0)
   \   00000002   0xF991 0x2000      LDRSB    R2,[R1, #+0]
   \   00000006   0x2A01             CMP      R2,#+1
   \   00000008   0xDB02             BLT.N    ??inv_row_2_scale_0
     46                  b = 0;
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x0010             MOVS     R0,R2
   \   0000000E   0xE024             B.N      ??inv_row_2_scale_1
     47              else if (row[0] < 0)
   \                     ??inv_row_2_scale_0:
   \   00000010   0xF991 0x2000      LDRSB    R2,[R1, #+0]
   \   00000014   0x2A00             CMP      R2,#+0
   \   00000016   0xD502             BPL.N    ??inv_row_2_scale_2
     48                  b = 4;
   \   00000018   0x2204             MOVS     R2,#+4
   \   0000001A   0x0010             MOVS     R0,R2
   \   0000001C   0xE01D             B.N      ??inv_row_2_scale_1
     49              else if (row[1] > 0)
   \                     ??inv_row_2_scale_2:
   \   0000001E   0xF991 0x2001      LDRSB    R2,[R1, #+1]
   \   00000022   0x2A01             CMP      R2,#+1
   \   00000024   0xDB02             BLT.N    ??inv_row_2_scale_3
     50                  b = 1;
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0x0010             MOVS     R0,R2
   \   0000002A   0xE016             B.N      ??inv_row_2_scale_1
     51              else if (row[1] < 0)
   \                     ??inv_row_2_scale_3:
   \   0000002C   0xF991 0x2001      LDRSB    R2,[R1, #+1]
   \   00000030   0x2A00             CMP      R2,#+0
   \   00000032   0xD502             BPL.N    ??inv_row_2_scale_4
     52                  b = 5;
   \   00000034   0x2205             MOVS     R2,#+5
   \   00000036   0x0010             MOVS     R0,R2
   \   00000038   0xE00F             B.N      ??inv_row_2_scale_1
     53              else if (row[2] > 0)
   \                     ??inv_row_2_scale_4:
   \   0000003A   0xF991 0x2002      LDRSB    R2,[R1, #+2]
   \   0000003E   0x2A01             CMP      R2,#+1
   \   00000040   0xDB02             BLT.N    ??inv_row_2_scale_5
     54                  b = 2;
   \   00000042   0x2202             MOVS     R2,#+2
   \   00000044   0x0010             MOVS     R0,R2
   \   00000046   0xE008             B.N      ??inv_row_2_scale_1
     55              else if (row[2] < 0)
   \                     ??inv_row_2_scale_5:
   \   00000048   0xF991 0x2002      LDRSB    R2,[R1, #+2]
   \   0000004C   0x2A00             CMP      R2,#+0
   \   0000004E   0xD502             BPL.N    ??inv_row_2_scale_6
     56                  b = 6;
   \   00000050   0x2206             MOVS     R2,#+6
   \   00000052   0x0010             MOVS     R0,R2
   \   00000054   0xE001             B.N      ??inv_row_2_scale_1
     57              else
     58                  b = 7;      // error
   \                     ??inv_row_2_scale_6:
   \   00000056   0x2207             MOVS     R2,#+7
   \   00000058   0x0010             MOVS     R0,R2
     59              return b;
   \                     ??inv_row_2_scale_1:
   \   0000005A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005C   0x4770             BX       LR               ;; return
     60          }
     61          

   \                                 In section .text, align 2, keep-with-next
     62          static  unsigned short inv_orientation_matrix_to_scalar(
     63              const signed char *mtx)
     64          {
   \                     inv_orientation_matrix_to_scalar:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     65              unsigned short scalar;
     66          
     67              /*
     68                 XYZ  010_001_000 Identity Matrix
     69                 XZY  001_010_000
     70                 YXZ  010_000_001
     71                 YZX  000_010_001
     72                 ZXY  001_000_010
     73                 ZYX  000_001_010
     74               */
     75          
     76              scalar = inv_row_2_scale(mtx);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       inv_row_2_scale
   \   0000000A   0x0005             MOVS     R5,R0
     77              scalar |= inv_row_2_scale(mtx + 3) << 3;
   \   0000000C   0x1CE0             ADDS     R0,R4,#+3
   \   0000000E   0x.... 0x....      BL       inv_row_2_scale
   \   00000012   0xEA55 0x00C0      ORRS     R0,R5,R0, LSL #+3
   \   00000016   0x0005             MOVS     R5,R0
     78              scalar |= inv_row_2_scale(mtx + 6) << 6;
   \   00000018   0x1DA0             ADDS     R0,R4,#+6
   \   0000001A   0x.... 0x....      BL       inv_row_2_scale
   \   0000001E   0xEA55 0x1080      ORRS     R0,R5,R0, LSL #+6
   \   00000022   0x0005             MOVS     R5,R0
     79          
     80          
     81              return scalar;
   \   00000024   0x0028             MOVS     R0,R5
   \   00000026   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000028   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     82          }
     83          
     84          

   \                                 In section .text, align 2, keep-with-next
     85          static void run_self_test(void)
     86          {
   \                     run_self_test:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     87              //int result;
     88          //    char test_packet[4] = {0};
     89              long gyro[3], accel[3];
     90          
     91              //result = mpu_run_self_test(gyro, accel);
     92              mpu_run_self_test(gyro, accel);
   \   00000004   0xA902             ADD      R1,SP,#+8
   \   00000006   0xA805             ADD      R0,SP,#+20
   \   00000008   0x.... 0x....      BL       mpu_run_self_test
     93              //if (result == 0x7) {
     94                  /* Test passed. We can trust the gyro data here, so let's push it down
     95                   * to the DMP.
     96                   */
     97                  float sens;
     98                  unsigned short accel_sens;
     99                  mpu_get_gyro_sens(&sens);
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x.... 0x....      BL       mpu_get_gyro_sens
    100                  gyro[0] = (long)(gyro[0] * sens);
   \   00000012   0x9805             LDR      R0,[SP, #+20]
   \   00000014   0x.... 0x....      BL       __aeabi_i2f
   \   00000018   0x9901             LDR      R1,[SP, #+4]
   \   0000001A   0x.... 0x....      BL       __aeabi_fmul
   \   0000001E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000022   0x9005             STR      R0,[SP, #+20]
    101                  gyro[1] = (long)(gyro[1] * sens);
   \   00000024   0x9806             LDR      R0,[SP, #+24]
   \   00000026   0x.... 0x....      BL       __aeabi_i2f
   \   0000002A   0x9901             LDR      R1,[SP, #+4]
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x.... 0x....      BL       __aeabi_f2iz
   \   00000034   0x9006             STR      R0,[SP, #+24]
    102                  gyro[2] = (long)(gyro[2] * sens);
   \   00000036   0x9807             LDR      R0,[SP, #+28]
   \   00000038   0x.... 0x....      BL       __aeabi_i2f
   \   0000003C   0x9901             LDR      R1,[SP, #+4]
   \   0000003E   0x.... 0x....      BL       __aeabi_fmul
   \   00000042   0x.... 0x....      BL       __aeabi_f2iz
   \   00000046   0x9007             STR      R0,[SP, #+28]
    103                  dmp_set_gyro_bias(gyro);
   \   00000048   0xA805             ADD      R0,SP,#+20
   \   0000004A   0x.... 0x....      BL       dmp_set_gyro_bias
    104                  mpu_get_accel_sens(&accel_sens);
   \   0000004E   0xA800             ADD      R0,SP,#+0
   \   00000050   0x.... 0x....      BL       mpu_get_accel_sens
    105                  accel[0] *= accel_sens;
   \   00000054   0x9802             LDR      R0,[SP, #+8]
   \   00000056   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000005A   0x4348             MULS     R0,R1,R0
   \   0000005C   0x9002             STR      R0,[SP, #+8]
    106                  accel[1] *= accel_sens;
   \   0000005E   0x9803             LDR      R0,[SP, #+12]
   \   00000060   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000064   0x4348             MULS     R0,R1,R0
   \   00000066   0x9003             STR      R0,[SP, #+12]
    107                  accel[2] *= accel_sens;
   \   00000068   0x9804             LDR      R0,[SP, #+16]
   \   0000006A   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000006E   0x4348             MULS     R0,R1,R0
   \   00000070   0x9004             STR      R0,[SP, #+16]
    108                  dmp_set_accel_bias(accel);
   \   00000072   0xA802             ADD      R0,SP,#+8
   \   00000074   0x.... 0x....      BL       dmp_set_accel_bias
    109          		PrintChar("setting bias succesfully ......\n");
   \   00000078   0x....             LDR.N    R0,??DataTable2
   \   0000007A   0x.... 0x....      BL       PrintChar
    110              //}
    111          	//else
    112          	//{
    113          		//PrintChar("bias has not been modified ......\n");
    114          	//}
    115          
    116              /* Report results. */
    117          //    test_packet[0] = 't';
    118          //    test_packet[1] = result;
    119          //    send_packet(PACKET_TYPE_MISC, test_packet);
    120          }
   \   0000007E   0xB009             ADD      SP,SP,#+36
   \   00000080   0xBD00             POP      {PC}             ;; return
    121          
    122          

   \                                 In section .text, align 2, keep-with-next
    123          void InitDMP(void)
    124          {
   \                     InitDMP:
   \   00000000   0xB510             PUSH     {R4,LR}
    125            int result;     
    126            result = mpu_init();
   \   00000002   0x.... 0x....      BL       mpu_init
   \   00000006   0x0004             MOVS     R4,R0
    127            if(!result)
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD167             BNE.N    ??InitDMP_0
    128            {
    129          	  //mpu_init();
    130          	  PrintChar("mpu initialization complete......\n ");
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1
   \   0000000E   0x.... 0x....      BL       PrintChar
    131          	  //mpu_set_sensor
    132          	  if(!mpu_set_sensors(INV_XYZ_GYRO | INV_XYZ_ACCEL))
   \   00000012   0x2078             MOVS     R0,#+120
   \   00000014   0x.... 0x....      BL       mpu_set_sensors
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD103             BNE.N    ??InitDMP_1
    133          	  {
    134          	  	 PrintChar("mpu_set_sensor complete ......\n");
   \   0000001C   0x....             LDR.N    R0,??DataTable2_2
   \   0000001E   0x.... 0x....      BL       PrintChar
   \   00000022   0xE002             B.N      ??InitDMP_2
    135          	  }
    136          	  else
    137          	  {
    138          	  	 PrintChar("mpu_set_sensor come across error ......\n");
   \                     ??InitDMP_1:
   \   00000024   0x....             LDR.N    R0,??DataTable2_3
   \   00000026   0x.... 0x....      BL       PrintChar
    139          	  }
    140          	  //mpu_configure_fifo
    141          	  if(!mpu_configure_fifo(INV_XYZ_GYRO | INV_XYZ_ACCEL))
   \                     ??InitDMP_2:
   \   0000002A   0x2078             MOVS     R0,#+120
   \   0000002C   0x.... 0x....      BL       mpu_configure_fifo
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD103             BNE.N    ??InitDMP_3
    142          	  {
    143          	  	 PrintChar("mpu_configure_fifo complete ......\n");
   \   00000034   0x....             LDR.N    R0,??DataTable2_4
   \   00000036   0x.... 0x....      BL       PrintChar
   \   0000003A   0xE002             B.N      ??InitDMP_4
    144          	  }
    145          	  else
    146          	  {
    147          	  	 PrintChar("mpu_configure_fifo come across error ......\n");
   \                     ??InitDMP_3:
   \   0000003C   0x....             LDR.N    R0,??DataTable2_5
   \   0000003E   0x.... 0x....      BL       PrintChar
    148          	  }
    149          	  //mpu_set_sample_rate
    150          	  if(!mpu_set_sample_rate(DEFAULT_MPU_HZ))
   \                     ??InitDMP_4:
   \   00000042   0x2064             MOVS     R0,#+100
   \   00000044   0x.... 0x....      BL       mpu_set_sample_rate
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD103             BNE.N    ??InitDMP_5
    151          	  {
    152          	  	 PrintChar("mpu_set_sample_rate complete ......\n");
   \   0000004C   0x....             LDR.N    R0,??DataTable2_6
   \   0000004E   0x.... 0x....      BL       PrintChar
   \   00000052   0xE002             B.N      ??InitDMP_6
    153          	  }
    154          	  else
    155          	  {
    156          	  	 PrintChar("mpu_set_sample_rate error ......\n");
   \                     ??InitDMP_5:
   \   00000054   0x....             LDR.N    R0,??DataTable2_7
   \   00000056   0x.... 0x....      BL       PrintChar
    157          	  }
    158          	  //dmp_load_motion_driver_firmvare
    159          	  if(!dmp_load_motion_driver_firmware())
   \                     ??InitDMP_6:
   \   0000005A   0x.... 0x....      BL       dmp_load_motion_driver_firmware
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD103             BNE.N    ??InitDMP_7
    160          	  {
    161          	  	PrintChar("dmp_load_motion_driver_firmware complete ......\n");
   \   00000062   0x....             LDR.N    R0,??DataTable2_8
   \   00000064   0x.... 0x....      BL       PrintChar
   \   00000068   0xE002             B.N      ??InitDMP_8
    162          	  }
    163          	  else
    164          	  {
    165          	  	PrintChar("dmp_load_motion_driver_firmware come across error ......\n");
   \                     ??InitDMP_7:
   \   0000006A   0x....             LDR.N    R0,??DataTable2_9
   \   0000006C   0x.... 0x....      BL       PrintChar
    166          	  }
    167          	  //dmp_set_orientation
    168          	  if(!dmp_set_orientation(inv_orientation_matrix_to_scalar(gyro_orientation)))
   \                     ??InitDMP_8:
   \   00000070   0x....             LDR.N    R0,??DataTable2_10
   \   00000072   0x.... 0x....      BL       inv_orientation_matrix_to_scalar
   \   00000076   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000078   0x.... 0x....      BL       dmp_set_orientation
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD103             BNE.N    ??InitDMP_9
    169          	  {
    170          	  	 PrintChar("dmp_set_orientation complete ......\n");
   \   00000080   0x....             LDR.N    R0,??DataTable2_11
   \   00000082   0x.... 0x....      BL       PrintChar
   \   00000086   0xE002             B.N      ??InitDMP_10
    171          	  }
    172          	  else
    173          	  {
    174          	  	 PrintChar("dmp_set_orientation come across error ......\n");
   \                     ??InitDMP_9:
   \   00000088   0x....             LDR.N    R0,??DataTable2_12
   \   0000008A   0x.... 0x....      BL       PrintChar
    175          	  }
    176          	  //dmp_enable_feature
    177          	  if(!dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT | DMP_FEATURE_TAP |
    178          	        DMP_FEATURE_ANDROID_ORIENT | DMP_FEATURE_SEND_RAW_ACCEL | DMP_FEATURE_SEND_CAL_GYRO |
    179          	        DMP_FEATURE_GYRO_CAL))
   \                     ??InitDMP_10:
   \   0000008E   0xF240 0x1073      MOVW     R0,#+371
   \   00000092   0x.... 0x....      BL       dmp_enable_feature
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD103             BNE.N    ??InitDMP_11
    180          	  {
    181          	  	 PrintChar("dmp_enable_feature complete ......\n");
   \   0000009A   0x....             LDR.N    R0,??DataTable2_13
   \   0000009C   0x.... 0x....      BL       PrintChar
   \   000000A0   0xE002             B.N      ??InitDMP_12
    182          	  }
    183          	  else
    184          	  {
    185          	  	 PrintChar("dmp_enable_feature come across error ......\n");
   \                     ??InitDMP_11:
   \   000000A2   0x....             LDR.N    R0,??DataTable2_14
   \   000000A4   0x.... 0x....      BL       PrintChar
    186          	  }
    187          	  //dmp_set_fifo_rate
    188          	  if(!dmp_set_fifo_rate(DEFAULT_MPU_HZ))
   \                     ??InitDMP_12:
   \   000000A8   0x2064             MOVS     R0,#+100
   \   000000AA   0x.... 0x....      BL       dmp_set_fifo_rate
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD103             BNE.N    ??InitDMP_13
    189          	  {
    190          	  	 PrintChar("dmp_set_fifo_rate complete ......\n");
   \   000000B2   0x....             LDR.N    R0,??DataTable2_15
   \   000000B4   0x.... 0x....      BL       PrintChar
   \   000000B8   0xE002             B.N      ??InitDMP_14
    191          	  }
    192          	  else
    193          	  {
    194          	  	 PrintChar("dmp_set_fifo_rate come across error ......\n");
   \                     ??InitDMP_13:
   \   000000BA   0x....             LDR.N    R0,??DataTable2_16
   \   000000BC   0x.... 0x....      BL       PrintChar
    195          	  }
    196          	  run_self_test();
   \                     ??InitDMP_14:
   \   000000C0   0x.... 0x....      BL       run_self_test
    197          	  if(!mpu_set_dmp_state(1))
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x.... 0x....      BL       mpu_set_dmp_state
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD103             BNE.N    ??InitDMP_15
    198          	  {
    199          	  	 PrintChar("mpu_set_dmp_state complete ......\n");
   \   000000CE   0x....             LDR.N    R0,??DataTable2_17
   \   000000D0   0x.... 0x....      BL       PrintChar
   \   000000D4   0xE002             B.N      ??InitDMP_0
    200          	  }
    201          	  else
    202          	  {
    203          	  	 PrintChar("mpu_set_dmp_state come across error ......\n");
   \                     ??InitDMP_15:
   \   000000D6   0x....             LDR.N    R0,??DataTable2_18
   \   000000D8   0x.... 0x....      BL       PrintChar
    204          	  }
    205            }
    206              
    207          }
   \                     ??InitDMP_0:
   \   000000DC   0xBD10             POP      {R4,PC}          ;; return
    208          

   \                                 In section .text, align 2, keep-with-next
    209          void PrintChar(int8 const* string)
    210          {
   \                     PrintChar:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    211              printf(string);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       printf
    212          }
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    213          

   \                                 In section .text, align 2, keep-with-next
    214          void get_ms(unsigned long *time)
    215          {
    216          
    217          }
   \                     get_ms:
   \   00000000   0x4770             BX       LR               ;; return
    218          

   \                                 In section .text, align 2, keep-with-next
    219          void delay_ms(uint32 n)
    220          {
   \                     delay_ms:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    221              delayms(n);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       delayms
    222          }
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    223          

   \                                 In section .text, align 2, keep-with-next
    224          int8_t i2cwrite(uint8 addr, uint8 reg, uint8 len, uint8 * data)
    225          {
   \                     i2cwrite:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    226              MPU6050_DMP_MultiWriteReg(addr, reg, len, data);
   \   0000000A   0x003B             MOVS     R3,R7
   \   0000000C   0x0032             MOVS     R2,R6
   \   0000000E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       MPU6050_DMP_MultiWriteReg
    227          	return 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    228          }
    229          

   \                                 In section .text, align 2, keep-with-next
    230          int8_t i2cread(uint8 addr, uint8 reg, uint8 len, uint8 *buf)
    231          {
   \                     i2cread:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    232              MPU6050_DMP_MultiReadReg(addr, reg, len, buf);
   \   0000000A   0x003B             MOVS     R3,R7
   \   0000000C   0x0032             MOVS     R2,R6
   \   0000000E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       MPU6050_DMP_MultiReadReg
    233          		return 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    234          }
    235          

   \                                 In section .text, align 2, keep-with-next
    236          long labs(long l)
    237          {
    238              if(l>=0)
   \                     labs:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD500             BPL.N    ??labs_0
    239              {
    240                  return l;
    241              }
    242              else
    243              {
    244                  return -l;
   \                     ??labs_1:
   \   00000004   0x4240             RSBS     R0,R0,#+0
   \                     ??labs_0:
   \   00000006   0x4770             BX       LR               ;; return
    245              }
    246          }
    247          
    248          

   \                                 In section .text, align 2, keep-with-next
    249          void RefreshDMP(void)
    250          {
   \                     RefreshDMP:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
    251               unsigned long sensor_timestamp;
    252               short gyro[3], accel[3], sensors;
    253               unsigned char more;
    254               long quat[4];
    255          	 //float Yaw,Roll,Pitch;
    256          	 dmp_read_fifo(gyro, accel, quat, &sensor_timestamp, &sensors,
    257                          &more);	 
   \   00000004   0xA802             ADD      R0,SP,#+8
   \   00000006   0x9001             STR      R0,[SP, #+4]
   \   00000008   0xF10D 0x000A      ADD      R0,SP,#+10
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0xAB03             ADD      R3,SP,#+12
   \   00000010   0xAA04             ADD      R2,SP,#+16
   \   00000012   0xA908             ADD      R1,SP,#+32
   \   00000014   0xA80A             ADD      R0,SP,#+40
   \   00000016   0x.... 0x....      BL       dmp_read_fifo
    258          	 /* Gyro and accel data are written to the FIFO by the DMP in chip
    259               * frame and hardware units. This behavior is convenient because it
    260               * keeps the gyro and accel outputs of dmp_read_fifo and
    261               * mpu_read_fifo consistent.
    262               */
    263          /*     if (sensors & INV_XYZ_GYRO )
    264                 send_packet(PACKET_TYPE_GYRO, gyro);
    265               if (sensors & INV_XYZ_ACCEL)
    266                  send_packet(PACKET_TYPE_ACCEL, accel); */
    267               /* Unlike gyro and accel, quaternions are written to the FIFO in
    268               * the body frame, q30. The orientation is set by the scalar passed
    269               * to dmp_set_orientation during initialization.
    270               */
    271               if (sensors & INV_WXYZ_QUAT )
   \   0000001A   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   0000001E   0x05C0             LSLS     R0,R0,#+23
   \   00000020   0xF140 0x80E6      BPL.W    ??RefreshDMP_0
    272          	 {
    273          	     //PrintChar("in Calculating quaternion steps.....\n");
    274          	 	 q0=quat[0] / q30;
   \   00000024   0x9804             LDR      R0,[SP, #+16]
   \   00000026   0x.... 0x....      BL       __aeabi_i2f
   \   0000002A   0xF05F 0x419D      MOVS     R1,#+1317011456
   \   0000002E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000032   0x....             LDR.N    R1,??DataTable2_19
   \   00000034   0x6008             STR      R0,[R1, #+0]
    275          		 q1=quat[1] / q30;
   \   00000036   0x9805             LDR      R0,[SP, #+20]
   \   00000038   0x.... 0x....      BL       __aeabi_i2f
   \   0000003C   0xF05F 0x419D      MOVS     R1,#+1317011456
   \   00000040   0x.... 0x....      BL       __aeabi_fdiv
   \   00000044   0x....             LDR.N    R1,??DataTable2_20
   \   00000046   0x6008             STR      R0,[R1, #+0]
    276          		 q2=quat[2] / q30;
   \   00000048   0x9806             LDR      R0,[SP, #+24]
   \   0000004A   0x.... 0x....      BL       __aeabi_i2f
   \   0000004E   0xF05F 0x419D      MOVS     R1,#+1317011456
   \   00000052   0x.... 0x....      BL       __aeabi_fdiv
   \   00000056   0x....             LDR.N    R1,??DataTable2_21
   \   00000058   0x6008             STR      R0,[R1, #+0]
    277          		 q3=quat[3] / q30;
   \   0000005A   0x9807             LDR      R0,[SP, #+28]
   \   0000005C   0x.... 0x....      BL       __aeabi_i2f
   \   00000060   0xF05F 0x419D      MOVS     R1,#+1317011456
   \   00000064   0x.... 0x....      BL       __aeabi_fdiv
   \   00000068   0x....             LDR.N    R1,??DataTable2_22
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    278          		 Pitch  = asin(-2 * q1 * q3 + 2 * q0* q2)* 57.3; // pitch
   \   0000006C   0x....             LDR.N    R0,??DataTable2_20
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   00000074   0x.... 0x....      BL       __aeabi_fmul
   \   00000078   0x....             LDR.N    R1,??DataTable2_22
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x0004             MOVS     R4,R0
   \   00000082   0x....             LDR.N    R0,??DataTable2_19
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000008A   0x.... 0x....      BL       __aeabi_fmul
   \   0000008E   0x....             LDR.N    R1,??DataTable2_21
   \   00000090   0x6809             LDR      R1,[R1, #+0]
   \   00000092   0x.... 0x....      BL       __aeabi_fmul
   \   00000096   0x0001             MOVS     R1,R0
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0x.... 0x....      BL       __aeabi_fadd
   \   0000009E   0x.... 0x....      BL       __aeabi_f2d
   \   000000A2   0x.... 0x....      BL       asin
   \   000000A6   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000000AA   0x....             LDR.N    R3,??DataTable2_23  ;; 0x404ca666
   \   000000AC   0x.... 0x....      BL       __aeabi_dmul
   \   000000B0   0x.... 0x....      BL       __aeabi_d2f
   \   000000B4   0x....             LDR.N    R1,??DataTable2_24
   \   000000B6   0x6008             STR      R0,[R1, #+0]
    279            	     Roll = atan2(2 * q2 * q3 + 2 * q0 * q1, -2 * q1 * q1 - 2 * q2* q2 + 1)* 57.3; // roll
   \   000000B8   0x....             LDR.N    R0,??DataTable2_20
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   000000C0   0x.... 0x....      BL       __aeabi_fmul
   \   000000C4   0x....             LDR.N    R1,??DataTable2_20
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0x.... 0x....      BL       __aeabi_fmul
   \   000000CC   0x0004             MOVS     R4,R0
   \   000000CE   0x....             LDR.N    R0,??DataTable2_21
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000000D6   0x.... 0x....      BL       __aeabi_fmul
   \   000000DA   0x....             LDR.N    R1,??DataTable2_21
   \   000000DC   0x6809             LDR      R1,[R1, #+0]
   \   000000DE   0x.... 0x....      BL       __aeabi_fmul
   \   000000E2   0x0001             MOVS     R1,R0
   \   000000E4   0x0020             MOVS     R0,R4
   \   000000E6   0x.... 0x....      BL       __aeabi_fsub
   \   000000EA   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x.... 0x....      BL       __aeabi_f2d
   \   000000F6   0x0002             MOVS     R2,R0
   \   000000F8   0x000B             MOVS     R3,R1
   \   000000FA   0x0014             MOVS     R4,R2
   \   000000FC   0x001D             MOVS     R5,R3
   \   000000FE   0x....             LDR.N    R0,??DataTable2_21
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000106   0x.... 0x....      BL       __aeabi_fmul
   \   0000010A   0x....             LDR.N    R1,??DataTable2_22
   \   0000010C   0x6809             LDR      R1,[R1, #+0]
   \   0000010E   0x.... 0x....      BL       __aeabi_fmul
   \   00000112   0x0006             MOVS     R6,R0
   \   00000114   0x....             LDR.N    R0,??DataTable2_19
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000011C   0x.... 0x....      BL       __aeabi_fmul
   \   00000120   0x....             LDR.N    R1,??DataTable2_20
   \   00000122   0x6809             LDR      R1,[R1, #+0]
   \   00000124   0x.... 0x....      BL       __aeabi_fmul
   \   00000128   0x0001             MOVS     R1,R0
   \   0000012A   0x0030             MOVS     R0,R6
   \   0000012C   0x.... 0x....      BL       __aeabi_fadd
   \   00000130   0x.... 0x....      BL       __aeabi_f2d
   \   00000134   0x0022             MOVS     R2,R4
   \   00000136   0x002B             MOVS     R3,R5
   \   00000138   0x.... 0x....      BL       atan2
   \   0000013C   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000140   0x....             LDR.N    R3,??DataTable2_23  ;; 0x404ca666
   \   00000142   0x.... 0x....      BL       __aeabi_dmul
   \   00000146   0x.... 0x....      BL       __aeabi_d2f
   \   0000014A   0x....             LDR.N    R1,??DataTable2_25
   \   0000014C   0x6008             STR      R0,[R1, #+0]
    280          		 Yaw = 	atan2(2*(q1*q2 + q0*q3),q0*q0+q1*q1-q2*q2-q3*q3) * 57.3;
   \   0000014E   0x....             LDR.N    R0,??DataTable2_19
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0x....             LDR.N    R1,??DataTable2_19
   \   00000154   0x6809             LDR      R1,[R1, #+0]
   \   00000156   0x.... 0x....      BL       __aeabi_fmul
   \   0000015A   0x0004             MOVS     R4,R0
   \   0000015C   0x....             LDR.N    R0,??DataTable2_20
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0x....             LDR.N    R1,??DataTable2_20
   \   00000162   0x6809             LDR      R1,[R1, #+0]
   \   00000164   0x.... 0x....      BL       __aeabi_fmul
   \   00000168   0x0001             MOVS     R1,R0
   \   0000016A   0x0020             MOVS     R0,R4
   \   0000016C   0x.... 0x....      BL       __aeabi_fadd
   \   00000170   0x0004             MOVS     R4,R0
   \   00000172   0x....             LDR.N    R0,??DataTable2_21
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x....             LDR.N    R1,??DataTable2_21
   \   00000178   0x6809             LDR      R1,[R1, #+0]
   \   0000017A   0x.... 0x....      BL       __aeabi_fmul
   \   0000017E   0x0001             MOVS     R1,R0
   \   00000180   0x0020             MOVS     R0,R4
   \   00000182   0x.... 0x....      BL       __aeabi_fsub
   \   00000186   0x0004             MOVS     R4,R0
   \   00000188   0x....             LDR.N    R0,??DataTable2_22
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0x....             LDR.N    R1,??DataTable2_22
   \   0000018E   0x6809             LDR      R1,[R1, #+0]
   \   00000190   0x.... 0x....      BL       __aeabi_fmul
   \   00000194   0x0001             MOVS     R1,R0
   \   00000196   0x0020             MOVS     R0,R4
   \   00000198   0x.... 0x....      BL       __aeabi_fsub
   \   0000019C   0x.... 0x....      BL       __aeabi_f2d
   \   000001A0   0x0002             MOVS     R2,R0
   \   000001A2   0x000B             MOVS     R3,R1
   \   000001A4   0x0014             MOVS     R4,R2
   \   000001A6   0x001D             MOVS     R5,R3
   \   000001A8   0x....             LDR.N    R0,??DataTable2_20
   \   000001AA   0x6800             LDR      R0,[R0, #+0]
   \   000001AC   0x....             LDR.N    R1,??DataTable2_21
   \   000001AE   0x6809             LDR      R1,[R1, #+0]
   \   000001B0   0x.... 0x....      BL       __aeabi_fmul
   \   000001B4   0x0006             MOVS     R6,R0
   \   000001B6   0x....             LDR.N    R0,??DataTable2_19
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x....             LDR.N    R1,??DataTable2_22
   \   000001BC   0x6809             LDR      R1,[R1, #+0]
   \   000001BE   0x.... 0x....      BL       __aeabi_fmul
   \   000001C2   0x0001             MOVS     R1,R0
   \   000001C4   0x0030             MOVS     R0,R6
   \   000001C6   0x.... 0x....      BL       __aeabi_fadd
   \   000001CA   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000001CE   0x.... 0x....      BL       __aeabi_fmul
   \   000001D2   0x.... 0x....      BL       __aeabi_f2d
   \   000001D6   0x0022             MOVS     R2,R4
   \   000001D8   0x002B             MOVS     R3,R5
   \   000001DA   0x.... 0x....      BL       atan2
   \   000001DE   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000001E2   0x....             LDR.N    R3,??DataTable2_23  ;; 0x404ca666
   \   000001E4   0x.... 0x....      BL       __aeabi_dmul
   \   000001E8   0x.... 0x....      BL       __aeabi_d2f
   \   000001EC   0x....             LDR.N    R1,??DataTable2_26
   \   000001EE   0x6008             STR      R0,[R1, #+0]
    281          	 }
    282          	 if(sensors & INV_XYZ_GYRO)
    283          	 {}
    284          	 if(sensors & INV_XYZ_ACCEL)
    285          	 {}
    286                //send_packet(PACKET_TYPE_QUAT, quat);
    287              
    288          }
   \                     ??RefreshDMP_0:
   \   000001F0   0xB00C             ADD      SP,SP,#+48
   \   000001F2   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     `?<Constant "setting bias succesfu...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     `?<Constant "mpu initialization co...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_sensor comple...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_sensor come a...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     `?<Constant "mpu_configure_fifo co...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     `?<Constant "mpu_configure_fifo co...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_sample_rate c...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_sample_rate e...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     `?<Constant "dmp_load_motion_drive...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     `?<Constant "dmp_load_motion_drive...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     gyro_orientation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     `?<Constant "dmp_set_orientation c...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     `?<Constant "dmp_set_orientation c...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     `?<Constant "dmp_enable_feature co...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     `?<Constant "dmp_enable_feature co...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     `?<Constant "dmp_set_fifo_rate com...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     `?<Constant "dmp_set_fifo_rate com...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_dmp_state com...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     `?<Constant "mpu_set_dmp_state com...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     q0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     q1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     q2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     q3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x404CA666         DC32     0x404ca666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     Pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     Roll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x........         DC32     Yaw

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting bias succesfu...">`:
   \   00000000   0x73 0x65          DC8 "setting bias succesfully ......\012"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x62 0x69    
   \              0x61 0x73    
   \              0x20 0x73    
   \              0x75 0x63    
   \              0x63 0x65    
   \              0x73 0x66    
   \              0x75 0x6C    
   \              0x6C 0x79    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu initialization co...">`:
   \   00000000   0x6D 0x70          DC8 "mpu initialization complete......\012 "
   \              0x75 0x20    
   \              0x69 0x6E    
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6C    
   \              0x65 0x74    
   \              0x65 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_sensor comple...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_sensor complete ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6C    
   \              0x65 0x74    
   \              0x65 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_sensor come a...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_sensor come across error ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x65 0x20    
   \              0x61 0x63    
   \              0x72 0x6F    
   \              0x73 0x73    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_configure_fifo co...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_configure_fifo complete ......\012"
   \              0x75 0x5F    
   \              0x63 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x65 0x5F    
   \              0x66 0x69    
   \              0x66 0x6F    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6C    
   \              0x65 0x74    
   \              0x65 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_configure_fifo co...">_1`:
   \   00000000   0x6D 0x70          DC8 "mpu_configure_fifo come across error ......\012"
   \              0x75 0x5F    
   \              0x63 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x65 0x5F    
   \              0x66 0x69    
   \              0x66 0x6F    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x65 0x20    
   \              0x61 0x63    
   \              0x72 0x6F    
   \              0x73 0x73    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_sample_rate c...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_sample_rate complete ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x73 0x61    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x5F 0x72    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_sample_rate e...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_sample_rate error ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x73 0x61    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x5F 0x72    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_load_motion_drive...">`:
   \   00000000   0x64 0x6D          DC8 "dmp_load_motion_driver_firmware complete ......\012"
   \              0x70 0x5F    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \              0x5F 0x6D    
   \              0x6F 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x64 0x72    
   \              0x69 0x76    
   \              0x65 0x72    
   \              0x5F 0x66    
   \              0x69 0x72    
   \              0x6D 0x77    
   \              0x61 0x72    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_load_motion_drive...">_1`:
   \   00000000   0x64 0x6D          DC8 64H, 6DH, 70H, 5FH, 6CH, 6FH, 61H, 64H
   \              0x70 0x5F    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \   00000008   0x5F 0x6D          DC8 5FH, 6DH, 6FH, 74H, 69H, 6FH, 6EH, 5FH
   \              0x6F 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \   00000010   0x64 0x72          DC8 64H, 72H, 69H, 76H, 65H, 72H, 5FH, 66H
   \              0x69 0x76    
   \              0x65 0x72    
   \              0x5F 0x66    
   \   00000018   0x69 0x72          DC8 69H, 72H, 6DH, 77H, 61H, 72H, 65H, 20H
   \              0x6D 0x77    
   \              0x61 0x72    
   \              0x65 0x20    
   \   00000020   0x63 0x6F          DC8 63H, 6FH, 6DH, 65H, 20H, 61H, 63H, 72H
   \              0x6D 0x65    
   \              0x20 0x61    
   \              0x63 0x72    
   \   00000028   0x6F 0x73          DC8 6FH, 73H, 73H, 20H, 65H, 72H, 72H, 6FH
   \              0x73 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \   00000030   0x72 0x20          DC8 72H, 20H, 2EH, 2EH, 2EH, 2EH, 2EH, 2EH
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \   00000038   0x0A 0x00          DC8 0AH, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_set_orientation c...">`:
   \   00000000   0x64 0x6D          DC8 "dmp_set_orientation complete ......\012"
   \              0x70 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x6F 0x72    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_set_orientation c...">_1`:
   \   00000000   0x64 0x6D          DC8 "dmp_set_orientation come across error ......\012"
   \              0x70 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x6F 0x72    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x63 0x6F    
   \              0x6D 0x65    
   \              0x20 0x61    
   \              0x63 0x72    
   \              0x6F 0x73    
   \              0x73 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_enable_feature co...">`:
   \   00000000   0x64 0x6D          DC8 "dmp_enable_feature complete ......\012"
   \              0x70 0x5F    
   \              0x65 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x5F 0x66    
   \              0x65 0x61    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6C    
   \              0x65 0x74    
   \              0x65 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_enable_feature co...">_1`:
   \   00000000   0x64 0x6D          DC8 "dmp_enable_feature come across error ......\012"
   \              0x70 0x5F    
   \              0x65 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x5F 0x66    
   \              0x65 0x61    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x65 0x20    
   \              0x61 0x63    
   \              0x72 0x6F    
   \              0x73 0x73    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_set_fifo_rate com...">`:
   \   00000000   0x64 0x6D          DC8 "dmp_set_fifo_rate complete ......\012"
   \              0x70 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x66 0x69    
   \              0x66 0x6F    
   \              0x5F 0x72    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dmp_set_fifo_rate com...">_1`:
   \   00000000   0x64 0x6D          DC8 "dmp_set_fifo_rate come across error ......\012"
   \              0x70 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x66 0x69    
   \              0x66 0x6F    
   \              0x5F 0x72    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x65    
   \              0x20 0x61    
   \              0x63 0x72    
   \              0x6F 0x73    
   \              0x73 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_dmp_state com...">`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_dmp_state complete ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x64 0x6D    
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "mpu_set_dmp_state com...">_1`:
   \   00000000   0x6D 0x70          DC8 "mpu_set_dmp_state come across error ......\012"
   \              0x75 0x5F    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x64 0x6D    
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6D 0x65    
   \              0x20 0x61    
   \              0x63 0x72    
   \              0x6F 0x73    
   \              0x73 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  InitDMP
              8 -> PrintChar
              8 -> dmp_enable_feature
              8 -> dmp_load_motion_driver_firmware
              8 -> dmp_set_fifo_rate
              8 -> dmp_set_orientation
              8 -> inv_orientation_matrix_to_scalar
              8 -> mpu_configure_fifo
              8 -> mpu_init
              8 -> mpu_set_dmp_state
              8 -> mpu_set_sample_rate
              8 -> mpu_set_sensors
              8 -> run_self_test
        8  PrintChar
              8 -> printf
       64  RefreshDMP
             64 -> __aeabi_d2f
             64 -> __aeabi_dmul
             64 -> __aeabi_f2d
             64 -> __aeabi_fadd
             64 -> __aeabi_fdiv
             64 -> __aeabi_fmul
             64 -> __aeabi_fsub
             64 -> __aeabi_i2f
             64 -> asin
             64 -> atan2
             64 -> dmp_read_fifo
        8  delay_ms
              8 -> delayms
        0  get_ms
       24  i2cread
             24 -> MPU6050_DMP_MultiReadReg
       24  i2cwrite
             24 -> MPU6050_DMP_MultiWriteReg
       16  inv_orientation_matrix_to_scalar
             16 -> inv_row_2_scale
        0  inv_row_2_scale
        0  labs
       40  run_self_test
             40 -> PrintChar
             40 -> __aeabi_f2iz
             40 -> __aeabi_fmul
             40 -> __aeabi_i2f
             40 -> dmp_set_accel_bias
             40 -> dmp_set_gyro_bias
             40 -> mpu_get_accel_sens
             40 -> mpu_get_gyro_sens
             40 -> mpu_run_self_test


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ?<Constant "dmp_enable_feature co...">
      48  ?<Constant "dmp_enable_feature co...">_1
      52  ?<Constant "dmp_load_motion_drive...">
      60  ?<Constant "dmp_load_motion_drive...">_1
      36  ?<Constant "dmp_set_fifo_rate com...">
      44  ?<Constant "dmp_set_fifo_rate com...">_1
      40  ?<Constant "dmp_set_orientation c...">
      48  ?<Constant "dmp_set_orientation c...">_1
      36  ?<Constant "mpu initialization co...">
      36  ?<Constant "mpu_configure_fifo co...">
      48  ?<Constant "mpu_configure_fifo co...">_1
      36  ?<Constant "mpu_set_dmp_state com...">
      44  ?<Constant "mpu_set_dmp_state com...">_1
      40  ?<Constant "mpu_set_sample_rate c...">
      36  ?<Constant "mpu_set_sample_rate e...">
      44  ?<Constant "mpu_set_sensor come a...">
      32  ?<Constant "mpu_set_sensor comple...">
      36  ?<Constant "setting bias succesfu...">
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
     222  InitDMP
       4  Pitch
      12  PrintChar
     500  RefreshDMP
       4  Roll
       4  Yaw
      12  delay_ms
       2  get_ms
      12  gyro_orientation
      32  i2cread
      32  i2cwrite
      42  inv_orientation_matrix_to_scalar
      94  inv_row_2_scale
       8  labs
       4  q0
       4  q1
       4  q2
       4  q3
     130  run_self_test

 
    24 bytes in section .bss
    16 bytes in section .data
   752 bytes in section .rodata
 1 194 bytes in section .text
 
 1 194 bytes of CODE  memory
   752 bytes of CONST memory
    40 bytes of DATA  memory

Errors: none
Warnings: none
