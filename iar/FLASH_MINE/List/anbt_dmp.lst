###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     13/Apr/2014  20:54:17 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\anbt_dmp.c                                            #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\modu #
#                    le\anbt_dmp.c -D LPLD_K60 -lCN                           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V2\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V2\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\ #
#                    iar\..\source\app\Communicate\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V2\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V2\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V2\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V2\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V2\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V2\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V2\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V2\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V2\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\List\anbt_dmp.lst                                    #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\iar\FLASH_M #
#                    INE\Obj\anbt_dmp.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V2\source\module\anbt_dmp.c
      1          /****************************************************************************** 
      2           *       anbt_dmp.c ----- 使用圆点博士的dmp移植代码          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  anbt_dmp.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/13 19:38:16                                                       *
     10           ******************************************************************************/
     11          #include "anbt_dmp.h"
     12          

   \                                 In section .text, align 2, keep-with-next
     13          void InitAnbtDMP(void)
     14          {
   \                     InitAnbtDMP:
   \   00000000   0xB580             PUSH     {R7,LR}
     15              AnBT_DMP_MPU6050_Init();
   \   00000002   0x.... 0x....      BL       AnBT_DMP_MPU6050_Init
     16          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void AnBT_Uart1_Send_String(unsigned char * str_buf, unsigned char str_len)
     19          {
   \                     AnBT_Uart1_Send_String:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     20              printf((signed char *)str_buf);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       printf
     21          }
   \   0000000C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     22          

   \                                 In section .text, align 2, keep-with-next
     23          void AnBT_Uart1_Send_Num(unsigned char number)
     24          {
   \                     AnBT_Uart1_Send_Num:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     25              LPLD_UART_PutChar(DEBUG_UART, number);
   \   00000004   0x0021             MOVS     R1,R4
   \   00000006   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000008   0x....             LDR.N    R0,??DataTable1  ;; 0x4006b000
   \   0000000A   0x.... 0x....      BL       LPLD_UART_PutChar
     26          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
     27              

   \                                 In section .text, align 2, keep-with-next
     28          unsigned char AnBT_DMP_I2C_Read(unsigned char anbt_dev_addr, unsigned char anbt_reg_addr, unsigned char anbt_i2c_len, unsigned char * anbt_i2c_data_buf)
     29          {
   \                     AnBT_DMP_I2C_Read:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
     30              return MPU6050_DMP_MultiReadReg(anbt_dev_addr, anbt_reg_addr, anbt_i2c_len, anbt_i2c_data_buf);
   \   0000000A   0x003B             MOVS     R3,R7
   \   0000000C   0x0032             MOVS     R2,R6
   \   0000000E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       MPU6050_DMP_MultiReadReg
   \   0000001C   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     31          }
     32          

   \                                 In section .text, align 2, keep-with-next
     33          unsigned char AnBT_DMP_I2C_Write(unsigned char anbt_dev_addr, unsigned char anbt_reg_addr, unsigned char anbt_i2c_len, unsigned char *anbt_i2c_data_buf)
     34          {
   \                     AnBT_DMP_I2C_Write:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
     35              return MPU6050_DMP_MultiWriteReg(anbt_dev_addr, anbt_reg_addr, anbt_i2c_len, anbt_i2c_data_buf);
   \   0000000A   0x003B             MOVS     R3,R7
   \   0000000C   0x0032             MOVS     R2,R6
   \   0000000E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       MPU6050_DMP_MultiWriteReg
   \   0000001C   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     36          }
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void AnBT_DMP_Delay_ms(unsigned int ms)
     39          {
   \                     AnBT_DMP_Delay_ms:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     40              delayms(ms);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       delayms
     41          }
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
     42          

   \                                 In section .text, align 2, keep-with-next
     43          long labs(long n)
     44          {
     45              if(n >= 0)
   \                     labs:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD500             BPL.N    ??labs_0
     46              {
     47                  return n;
     48              }
     49              else
     50              {
     51                  return -n;
   \                     ??labs_1:
   \   00000004   0x4240             RSBS     R0,R0,#+0
   \                     ??labs_0:
   \   00000006   0x4770             BX       LR               ;; return
     52              }
     53          }
     54          

   \                                 In section .text, align 2, keep-with-next
     55          void AnBT_Uart1_Send_Char(unsigned char ascii_code)
     56          {
   \                     AnBT_Uart1_Send_Char:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     57              LPLD_UART_PutChar(DEBUG_UART, ascii_code);
   \   00000004   0x0021             MOVS     R1,R4
   \   00000006   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000008   0x....             LDR.N    R0,??DataTable1  ;; 0x4006b000
   \   0000000A   0x.... 0x....      BL       LPLD_UART_PutChar
     58          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x4006B000         DC32     0x4006b000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  AnBT_DMP_Delay_ms
              8 -> delayms
       24  AnBT_DMP_I2C_Read
             24 -> MPU6050_DMP_MultiReadReg
       24  AnBT_DMP_I2C_Write
             24 -> MPU6050_DMP_MultiWriteReg
        8  AnBT_Uart1_Send_Char
              8 -> LPLD_UART_PutChar
        8  AnBT_Uart1_Send_Num
              8 -> LPLD_UART_PutChar
       16  AnBT_Uart1_Send_String
             16 -> printf
        8  InitAnbtDMP
              8 -> AnBT_DMP_MPU6050_Init
        0  labs


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      12  AnBT_DMP_Delay_ms
      30  AnBT_DMP_I2C_Read
      30  AnBT_DMP_I2C_Write
      16  AnBT_Uart1_Send_Char
      16  AnBT_Uart1_Send_Num
      14  AnBT_Uart1_Send_String
       8  InitAnbtDMP
       8  labs

 
 138 bytes in section .text
 
 138 bytes of CODE memory

Errors: none
Warnings: none
