###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     07/Aug/2014  15:34:33 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\lib\ #
#                    LPLD\HW\HW_TSI.c                                         #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\lib\ #
#                    LPLD\HW\HW_TSI.c -D LPLD_K60 -lCN                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\HW_TSI.lst                                      #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\HW_TSI.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\lib\LPLD\HW\HW_TSI.c
      1          /**
      2           * @file HW_TSI.c
      3           * @version 3.0[By LPLD]
      4           * @date 2013-06-18
      5           * @brief TSI底层模块相关函数
      6           *
      7           * 更改建议:不建议修改
      8           *
      9           * 版权所有:北京拉普兰德电子技术有限公司
     10           * http://www.lpld.cn
     11           * mail:support@lpld.cn
     12           *
     13           * @par
     14           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     15           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     16           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     17           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     18           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     19           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     20           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     21           */
     22          
     23          #include "common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x0941             LSRS     R1,R0,#+5
   \   00000006   0x....             LDR.N    R2,??DataTable4  ;; 0xe000e180
   \   00000008   0x2301             MOVS     R3,#+1
   \   0000000A   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   0000000E   0x40A3             LSLS     R3,R3,R4
   \   00000010   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000014   0xBC10             POP      {R4}
   \   00000016   0x4770             BX       LR               ;; return
     24          #include "HW_TSI.h"
     25          
     26          
     27          //用户自定义中断服务函数数组

   \                                 In section .bss, align 4
     28          TSI_ISR_CALLBACK TSI_ISR[2];
   \                     TSI_ISR:
   \   00000000                      DS8 8
     29          
     30          //通道基准值

   \                                 In section .bss, align 4
     31          uint16 TSI_ChxBaseVal[16];
   \                     TSI_ChxBaseVal:
   \   00000000                      DS8 32
     32          

   \                                 In section .data, align 4
     33          const uint16* TSI_CNTR[16]={(uint16*)&TSI0->CNTR1, (uint16*)(&TSI0->CNTR1)+1,
   \                     TSI_CNTR:
   \   00000000   0x40045100         DC32 40045100H, 40045102H, 40045104H, 40045106H, 40045108H, 4004510AH
   \              0x40045102   
   \              0x40045104   
   \              0x40045106   
   \              0x40045108   
   \              0x4004510A   
   \   00000018   0x4004510C         DC32 4004510CH, 4004510EH, 40045110H, 40045112H, 40045114H, 40045116H
   \              0x4004510E   
   \              0x40045110   
   \              0x40045112   
   \              0x40045114   
   \              0x40045116   
   \   00000030   0x40045118         DC32 40045118H, 4004511AH, 4004511CH, 4004511EH
   \              0x4004511A   
   \              0x4004511C   
   \              0x4004511E   
     34                                      (uint16*)&TSI0->CNTR3, (uint16*)(&TSI0->CNTR3)+1,
     35                                      (uint16*)&TSI0->CNTR5, (uint16*)(&TSI0->CNTR5)+1,
     36                                      (uint16*)&TSI0->CNTR7, (uint16*)(&TSI0->CNTR7)+1,
     37                                      (uint16*)&TSI0->CNTR9, (uint16*)(&TSI0->CNTR9)+1,
     38                                      (uint16*)&TSI0->CNTR11, (uint16*)(&TSI0->CNTR11)+1,
     39                                      (uint16*)&TSI0->CNTR13, (uint16*)(&TSI0->CNTR13)+1,
     40                                      (uint16*)&TSI0->CNTR15, (uint16*)(&TSI0->CNTR15)+1}; 
     41           

   \                                 In section .data, align 4
     42          const uint32* TSI_PORT[32]={(uint32*)&PORTB->PCR[0], (uint32*)&PORTA->PCR[0], (uint32*)&PORTA->PCR[1], (uint32*)&PORTA->PCR[2],
   \                     TSI_PORT:
   \   00000000   0x4004A000         DC32 4004A000H, 40049000H, 40049004H, 40049008H, 4004900CH, 40049010H
   \              0x40049000   
   \              0x40049004   
   \              0x40049008   
   \              0x4004900C   
   \              0x40049010   
   \   00000018   0x4004A004         DC32 4004A004H, 4004A008H, 4004A00CH, 4004A040H, 4004A044H, 4004A048H
   \              0x4004A008   
   \              0x4004A00C   
   \              0x4004A040   
   \              0x4004A044   
   \              0x4004A048   
   \   00000030   0x4004A04C         DC32 4004A04CH, 4004B000H, 4004B004H, 4004B008H
   \              0x4004B000   
   \              0x4004B004   
   \              0x4004B008   
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000060   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000070   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     43                                      (uint32*)&PORTA->PCR[3], (uint32*)&PORTA->PCR[4], (uint32*)&PORTB->PCR[1], (uint32*)&PORTB->PCR[2], 
     44                                      (uint32*)&PORTB->PCR[3], (uint32*)&PORTB->PCR[16], (uint32*)&PORTB->PCR[17], (uint32*)&PORTB->PCR[18], 
     45                                      (uint32*)&PORTB->PCR[19], (uint32*)&PORTC->PCR[0], (uint32*)&PORTC->PCR[1], (uint32*)&PORTC->PCR[2]};
     46          
     47          /*
     48           * LPLD_TSI_Init
     49           * TSI通用初始化函数
     50           * 
     51           * 参数:
     52           *    tsi_init_struct--TSI初始化结构体，
     53           *                        具体定义见TSI_InitTypeDef
     54           *
     55           * 输出:
     56           *    0--配置错误
     57           *    1--配置成功
     58           */

   \                                 In section .text, align 4, keep-with-next
     59          uint8 LPLD_TSI_Init(TSI_InitTypeDef tsi_init_struct)
     60          {
   \                     LPLD_TSI_Init:
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB470             PUSH     {R4-R6}
     61            uint16 chs = tsi_init_struct.TSI_Chs;
   \   00000004   0xF8BD 0x100C      LDRH     R1,[SP, #+12]
     62            uint8 mode = tsi_init_struct.TSI_ScanTriggerMode;
   \   00000008   0xF89D 0x200E      LDRB     R2,[SP, #+14]
     63            uint8 esor = tsi_init_struct.TSI_EndScanOrOutRangeInt;
   \   0000000C   0xF89D 0x300F      LDRB     R3,[SP, #+15]
     64            boolean err = tsi_init_struct.TIS_ErrIntEnable;
   \   00000010   0xF89D 0x4010      LDRB     R4,[SP, #+16]
     65             
     66            //参数检查
     67            ASSERT( chs != 0);                  //判断通道
     68            ASSERT( mode <= TSI_SCAN_PERIOD);   //判断中断模式
     69            ASSERT( esor <= TSI_ENDOFDCAN_INT);//判断中断模式
     70            
     71            //开启TSI模块时钟
     72            SIM->SCGC5 |= (SIM_SCGC5_TSI_MASK); 
   \   00000014   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40048038
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000001C   0x....             LDR.N    R5,??DataTable4_1  ;; 0x40048038
   \   0000001E   0x6028             STR      R0,[R5, #+0]
     73            
     74            //这里使能相关通道的引脚复用功能
     75            for(uint8 i=0; i<16; i++)
   \   00000020   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_0:
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2810             CMP      R0,#+16
   \   00000026   0xD209             BCS.N    ??LPLD_TSI_Init_1
     76            {
     77              if((chs>>i)&0x1L)
   \   00000028   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002A   0xFA51 0xF500      ASRS     R5,R1,R0
   \   0000002E   0x07ED             LSLS     R5,R5,#+31
   \   00000030   0xD502             BPL.N    ??LPLD_TSI_Init_2
     78              {
     79                *((uint32 *)TSI_PORT) = PORT_PCR_MUX(0); 
   \   00000032   0x....             LDR.N    R5,??DataTable4_2
   \   00000034   0x2600             MOVS     R6,#+0
   \   00000036   0x602E             STR      R6,[R5, #+0]
     80              }
     81            }
   \                     ??LPLD_TSI_Init_2:
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0xE7F2             B.N      ??LPLD_TSI_Init_0
     82            
     83            //配置通用控制寄存器
     84            TSI0->GENCS = ((TSI_GENCS_NSCN(10))  //每个电极每次扫描(10)次、
     85                            |(TSI_GENCS_PS(3)));  //电极晶振(2^3)分频
   \                     ??LPLD_TSI_Init_1:
   \   0000003C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000003E   0xF45F 0x05A6      MOVS     R5,#+5439488
   \   00000042   0x6005             STR      R5,[R0, #+0]
     86            //配置扫描寄存器
     87            TSI0->SCANC = ((TSI_SCANC_EXTCHRG(3))        //0.8pF内部参考电容
     88                            |(TSI_SCANC_REFCHRG(31))      //32uA充电电流
     89                            |(TSI_SCANC_DELVOL(7))        //600mV间隔电压
     90                            |(TSI_SCANC_SMOD(0))          //扫描周期mod
     91                            |(TSI_SCANC_AMPSC(0)));       //输入时钟(2^0)分频
   \   00000044   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045004
   \   00000046   0x....             LDR.N    R5,??DataTable4_5  ;; 0xf81f0000
   \   00000048   0x6005             STR      R5,[R0, #+0]
     92            //使能通道
     93            TSI0->PEN = chs;
   \   0000004A   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40045008
   \   0000004C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000004E   0x6001             STR      R1,[R0, #+0]
     94            
     95            //使能相关中断
     96            //TSI_ENDOFDCAN_INT和TSI_OUTOFRANGE_INT只能选择其一
     97            if(tsi_init_struct.TSI_EndScanIsr!=NULL && esor==TSI_ENDOFDCAN_INT)
   \   00000050   0x9805             LDR      R0,[SP, #+20]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD012             BEQ.N    ??LPLD_TSI_Init_3
   \   00000056   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000058   0x2B01             CMP      R3,#+1
   \   0000005A   0xD10F             BNE.N    ??LPLD_TSI_Init_3
     98            {
     99              TSI0->GENCS |= TSI_GENCS_ESOR_MASK;
   \   0000005C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000064   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   00000066   0x6028             STR      R0,[R5, #+0]
    100              TSI_ISR[0] = tsi_init_struct.TSI_EndScanIsr;
   \   00000068   0x9805             LDR      R0,[SP, #+20]
   \   0000006A   0x....             LDR.N    R5,??DataTable4_7
   \   0000006C   0x6028             STR      R0,[R5, #+0]
    101              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;   
   \   0000006E   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000076   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   00000078   0x6028             STR      R0,[R5, #+0]
   \   0000007A   0xE014             B.N      ??LPLD_TSI_Init_4
    102            }
    103            else if(tsi_init_struct.TSI_OutRangeIsr!=NULL && esor==TSI_OUTOFRANGE_INT)
   \                     ??LPLD_TSI_Init_3:
   \   0000007C   0x9806             LDR      R0,[SP, #+24]
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD011             BEQ.N    ??LPLD_TSI_Init_4
   \   00000082   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000084   0x2B00             CMP      R3,#+0
   \   00000086   0xD10E             BNE.N    ??LPLD_TSI_Init_4
    104            {
    105              TSI0->GENCS &= ~(TSI_GENCS_ESOR_MASK);
   \   00000088   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0xF030 0x0010      BICS     R0,R0,#0x10
   \   00000090   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   00000092   0x6028             STR      R0,[R5, #+0]
    106              TSI_ISR[0] = tsi_init_struct.TSI_OutRangeIsr;
   \   00000094   0x9806             LDR      R0,[SP, #+24]
   \   00000096   0x....             LDR.N    R5,??DataTable4_7
   \   00000098   0x6028             STR      R0,[R5, #+0]
    107              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;  
   \   0000009A   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000A2   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   000000A4   0x6028             STR      R0,[R5, #+0]
    108            }
    109            if(tsi_init_struct.TSI_ErrIsr!=NULL && err==TRUE)
   \                     ??LPLD_TSI_Init_4:
   \   000000A6   0x9807             LDR      R0,[SP, #+28]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD011             BEQ.N    ??LPLD_TSI_Init_5
   \   000000AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   0x2C01             CMP      R4,#+1
   \   000000B0   0xD10E             BNE.N    ??LPLD_TSI_Init_5
    110            {
    111              TSI0->GENCS |= TSI_GENCS_ERIE_MASK;
   \   000000B2   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000BA   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   000000BC   0x6028             STR      R0,[R5, #+0]
    112              TSI_ISR[1] = tsi_init_struct.TSI_EndScanIsr;
   \   000000BE   0x....             LDR.N    R0,??DataTable4_7
   \   000000C0   0x9D05             LDR      R5,[SP, #+20]
   \   000000C2   0x6045             STR      R5,[R0, #+4]
    113              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;  
   \   000000C4   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000CC   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   000000CE   0x6028             STR      R0,[R5, #+0]
    114            }
    115              
    116            //使能TSI模块  
    117            TSI0->GENCS |= (TSI_GENCS_TSIEN_MASK); 
   \                     ??LPLD_TSI_Init_5:
   \   000000D0   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000000D8   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   000000DA   0x6028             STR      R0,[R5, #+0]
    118           
    119            //是否进行基准值校验
    120            if(tsi_init_struct.TSI_IsInitSelfCal == TRUE)
   \   000000DC   0xF89D 0x0020      LDRB     R0,[SP, #+32]
   \   000000E0   0x2801             CMP      R0,#+1
   \   000000E2   0xD136             BNE.N    ??LPLD_TSI_Init_6
    121            {
    122              //使能软件触发
    123              TSI0->GENCS |= TSI_GENCS_SWTS_MASK;
   \   000000E4   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000EC   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   000000EE   0x6028             STR      R0,[R5, #+0]
    124              //等待扫描结束
    125              while(!(TSI0->GENCS&TSI_GENCS_EOSF_MASK)){};
   \                     ??LPLD_TSI_Init_7:
   \   000000F0   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x0400             LSLS     R0,R0,#+16
   \   000000F6   0xD5FB             BPL.N    ??LPLD_TSI_Init_7
    126              for(uint16 i=0; i<5000; i++)
   \   000000F8   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_8:
   \   000000FA   0xF241 0x3588      MOVW     R5,#+5000
   \   000000FE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000100   0x42A8             CMP      R0,R5
   \   00000102   0xD208             BCS.N    ??LPLD_TSI_Init_9
    127              {
    128                for(uint8 j=0; j<200; j++)
   \   00000104   0x2500             MOVS     R5,#+0
   \                     ??LPLD_TSI_Init_10:
   \   00000106   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000108   0x2DC8             CMP      R5,#+200
   \   0000010A   0xD202             BCS.N    ??LPLD_TSI_Init_11
    129                {
    130                  asm("NOP");
   \   0000010C   0xBF00             NOP
    131                }
   \   0000010E   0x1C6D             ADDS     R5,R5,#+1
   \   00000110   0xE7F9             B.N      ??LPLD_TSI_Init_10
    132              }
   \                     ??LPLD_TSI_Init_11:
   \   00000112   0x1C40             ADDS     R0,R0,#+1
   \   00000114   0xE7F1             B.N      ??LPLD_TSI_Init_8
    133              //填充基准值数组、阈值寄存器
    134              for(uint8 i=0; i<16; i++)
   \                     ??LPLD_TSI_Init_9:
   \   00000116   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_12:
   \   00000118   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011A   0x2810             CMP      R0,#+16
   \   0000011C   0xD225             BCS.N    ??LPLD_TSI_Init_13
    135              {
    136                if((chs>>i)&0x1L)
   \   0000011E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000120   0xFA51 0xF500      ASRS     R5,R1,R0
   \   00000124   0x07ED             LSLS     R5,R5,#+31
   \   00000126   0xD512             BPL.N    ??LPLD_TSI_Init_14
    137                {
    138                  TSI_ChxBaseVal[i] = *((uint16 *)TSI_CNTR[i]);
   \   00000128   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012A   0x....             LDR.N    R5,??DataTable4_8
   \   0000012C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012E   0x....             LDR.N    R6,??DataTable4_9
   \   00000130   0xF856 0x6020      LDR      R6,[R6, R0, LSL #+2]
   \   00000134   0x8836             LDRH     R6,[R6, #+0]
   \   00000136   0xF825 0x6010      STRH     R6,[R5, R0, LSL #+1]
    139                  TSI0->THRESHLD[i] = TSI_ChxBaseVal[i] + TSI_OVERRUN_VAL;
   \   0000013A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013C   0x....             LDR.N    R5,??DataTable4_8
   \   0000013E   0xF835 0x5010      LDRH     R5,[R5, R0, LSL #+1]
   \   00000142   0xF515 0x3540      ADDS     R5,R5,#+196608
   \   00000146   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000148   0x....             LDR.N    R6,??DataTable4_10  ;; 0x40045120
   \   0000014A   0xF846 0x5020      STR      R5,[R6, R0, LSL #+2]
    140                }
    141              }
   \                     ??LPLD_TSI_Init_14:
   \   0000014E   0x1C40             ADDS     R0,R0,#+1
   \   00000150   0xE7E2             B.N      ??LPLD_TSI_Init_12
    142            }
    143            else
    144            {
    145              for(uint8 i=0; i<16; i++)
   \                     ??LPLD_TSI_Init_6:
   \   00000152   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_15:
   \   00000154   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000156   0x2810             CMP      R0,#+16
   \   00000158   0xD207             BCS.N    ??LPLD_TSI_Init_13
    146              {
    147                TSI_ChxBaseVal[i] = TSI_BASE_VAL;
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x....             LDR.N    R5,??DataTable4_8
   \   0000015E   0xF44F 0x6600      MOV      R6,#+2048
   \   00000162   0xF825 0x6010      STRH     R6,[R5, R0, LSL #+1]
    148              }
   \   00000166   0x1C40             ADDS     R0,R0,#+1
   \   00000168   0xE7F4             B.N      ??LPLD_TSI_Init_15
    149            }
    150            
    151            //周期扫描模式or软件触发模式
    152            if(mode == TSI_SCAN_PERIOD)
   \                     ??LPLD_TSI_Init_13:
   \   0000016A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000016C   0x2A01             CMP      R2,#+1
   \   0000016E   0xD106             BNE.N    ??LPLD_TSI_Init_16
    153            {
    154              TSI0->GENCS |= TSI_GENCS_STM_MASK;
   \   00000170   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000178   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   0000017A   0x6028             STR      R0,[R5, #+0]
   \   0000017C   0xE005             B.N      ??LPLD_TSI_Init_17
    155            }
    156            else
    157            {
    158              TSI0->GENCS &= ~(TSI_GENCS_STM_MASK);
   \                     ??LPLD_TSI_Init_16:
   \   0000017E   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   00000180   0x6800             LDR      R0,[R0, #+0]
   \   00000182   0xF030 0x0002      BICS     R0,R0,#0x2
   \   00000186   0x....             LDR.N    R5,??DataTable4_3  ;; 0x40045000
   \   00000188   0x6028             STR      R0,[R5, #+0]
    159            }
    160            
    161            return 1;
   \                     ??LPLD_TSI_Init_17:
   \   0000018A   0x2001             MOVS     R0,#+1
   \   0000018C   0xBC70             POP      {R4-R6}
   \   0000018E   0xB004             ADD      SP,SP,#+16
   \   00000190   0x4770             BX       LR               ;; return
    162          }
    163          
    164          /*
    165           * LPLD_TSI_Deinit
    166           * TSI反初始化函数
    167           * 
    168           * 参数:
    169           *    无
    170           *
    171           * 输出:
    172           *    无
    173           */

   \                                 In section .text, align 2, keep-with-next
    174          void LPLD_TSI_Deinit(void)
    175          {
   \                     LPLD_TSI_Deinit:
   \   00000000   0xB580             PUSH     {R7,LR}
    176            LPLD_TSI_DisableIrq();
   \   00000002   0x2053             MOVS     R0,#+83
   \   00000004   0x.... 0x....      BL       NVIC_DisableIRQ
    177            TSI0->STATUS = 0xFFFFFFFF;
   \   00000008   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004500c
   \   0000000A   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    178            TSI0->PEN = 0;
   \   00000010   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40045008
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x6001             STR      R1,[R0, #+0]
    179            TSI0->SCANC = 0;
   \   00000016   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045004
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x6001             STR      R1,[R0, #+0]
    180            TSI0->GENCS = 0;
   \   0000001C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x6001             STR      R1,[R0, #+0]
    181            //关闭TSI模块时钟
    182            SIM->SCGC5 &= ~(SIM_SCGC5_TSI_MASK); 
   \   00000022   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40048038
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF030 0x0020      BICS     R0,R0,#0x20
   \   0000002A   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40048038
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    183          }
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
    184          
    185          /*
    186           * LPLD_TSI_IsChxTouched
    187           * 通道x的电极是否被触摸
    188           * 
    189           * 参数:
    190           *    ch_num--通道x的数字
    191           *      |_0~15
    192           *
    193           * 输出:
    194           *    TRUE-有触摸
    195           *    FALSE-未触摸
    196           */

   \                                 In section .text, align 2, keep-with-next
    197          boolean LPLD_TSI_IsChxTouched(uint8 ch_num)
    198          { 
   \                     LPLD_TSI_IsChxTouched:
   \   00000000   0x0001             MOVS     R1,R0
    199            if(TSI_ChxBaseVal[ch_num]<*((uint16 *)TSI_CNTR[ch_num]))
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x....             LDR.N    R0,??DataTable4_8
   \   00000006   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x....             LDR.N    R2,??DataTable4_9
   \   0000000E   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   00000012   0x8812             LDRH     R2,[R2, #+0]
   \   00000014   0x4290             CMP      R0,R2
   \   00000016   0xD201             BCS.N    ??LPLD_TSI_IsChxTouched_0
    200              return TRUE;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0xE000             B.N      ??LPLD_TSI_IsChxTouched_1
    201            return FALSE;
   \                     ??LPLD_TSI_IsChxTouched_0:
   \   0000001C   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_IsChxTouched_1:
   \   0000001E   0x4770             BX       LR               ;; return
    202          }
    203          
    204          /*
    205           * TSI中断处理函数
    206           * 与启动文件startup_K60.s中的中断向量表关联
    207           * 用户无需修改，程序自动进入对应通道中断函数
    208           */

   \                                 In section .text, align 2, keep-with-next
    209          void TSI_IRQHandler(void)
    210          {
   \                     TSI_IRQHandler:
   \   00000000   0xB580             PUSH     {R7,LR}
    211          #if (UCOS_II > 0u)
    212            OS_CPU_SR  cpu_sr = 0u;
    213            OS_ENTER_CRITICAL(); //告知系统此时已经进入了中断服务子函数
    214            OSIntEnter();
    215            OS_EXIT_CRITICAL();
    216          #endif
    217            
    218            if(TSI0->GENCS&(TSI_GENCS_ESOR_MASK|TSI_GENCS_EOSF_MASK) &&
    219               TSI_ISR[0] != NULL)
   \   00000002   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF248 0x0110      MOVW     R1,#+32784
   \   0000000A   0x4208             TST      R0,R1
   \   0000000C   0xD017             BEQ.N    ??TSI_IRQHandler_0
   \   0000000E   0x....             LDR.N    R0,??DataTable4_7
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD013             BEQ.N    ??TSI_IRQHandler_0
    220            {
    221              TSI_ISR[0]();
   \   00000016   0x....             LDR.N    R0,??DataTable4_7
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x4780             BLX      R0
    222              TSI0->GENCS |= TSI_GENCS_OUTRGF_MASK;
   \   0000001C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   00000024   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40045000
   \   00000026   0x6008             STR      R0,[R1, #+0]
    223              TSI0->GENCS |= TSI_GENCS_EOSF_MASK;
   \   00000028   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40045000
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000030   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40045000
   \   00000032   0x6008             STR      R0,[R1, #+0]
    224              TSI0->STATUS = 0x0000FFFF;
   \   00000034   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004500c
   \   00000036   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000003A   0x6001             STR      R1,[R0, #+0]
   \   0000003C   0xE00D             B.N      ??TSI_IRQHandler_1
    225            }
    226            else if(TSI0->STATUS != 0 && TSI_ISR[1] != NULL)
   \                     ??TSI_IRQHandler_0:
   \   0000003E   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004500c
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD009             BEQ.N    ??TSI_IRQHandler_1
   \   00000046   0x....             LDR.N    R0,??DataTable4_7
   \   00000048   0x6840             LDR      R0,[R0, #+4]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD005             BEQ.N    ??TSI_IRQHandler_1
    227            {
    228              TSI_ISR[1]();
   \   0000004E   0x....             LDR.N    R0,??DataTable4_7
   \   00000050   0x6840             LDR      R0,[R0, #+4]
   \   00000052   0x4780             BLX      R0
    229              TSI0->STATUS = 0xFFFF0000;
   \   00000054   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004500c
   \   00000056   0x....             LDR.N    R1,??DataTable4_12  ;; 0xffff0000
   \   00000058   0x6001             STR      R1,[R0, #+0]
    230            }
    231              
    232          #if (UCOS_II > 0u)
    233            OSIntExit();          //告知系统此时即将离开中断服务子函数
    234          #endif
    235          }
   \                     ??TSI_IRQHandler_1:
   \   0000005A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     TSI_PORT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40045000         DC32     0x40045000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40045004         DC32     0x40045004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0xF81F0000         DC32     0xf81f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40045008         DC32     0x40045008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     TSI_ISR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     TSI_ChxBaseVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     TSI_CNTR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x40045120         DC32     0x40045120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x4004500C         DC32     0x4004500c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0xFFFF0000         DC32     0xffff0000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  LPLD_TSI_Deinit
             8 -> NVIC_DisableIRQ
       28  LPLD_TSI_Init
        0  LPLD_TSI_IsChxTouched
        4  NVIC_DisableIRQ
        8  TSI_IRQHandler
             8 -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      48  LPLD_TSI_Deinit
     402  LPLD_TSI_Init
      32  LPLD_TSI_IsChxTouched
      24  NVIC_DisableIRQ
      64  TSI_CNTR
      32  TSI_ChxBaseVal
      92  TSI_IRQHandler
       8  TSI_ISR
     128  TSI_PORT

 
  40 bytes in section .bss
 192 bytes in section .data
 650 bytes in section .text
 
 650 bytes of CODE memory
 232 bytes of DATA memory

Errors: none
Warnings: none
