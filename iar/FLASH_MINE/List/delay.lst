###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     07/Aug/2014  15:34:38 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\delay.c                                               #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\delay.c -D LPLD_K60 -lCN                              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\delay.lst                                       #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\delay.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\module\delay.c
      1          /****************************************************************************** 
      2           *       delay.c ----- The delay Functions          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  delay.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/3/30 19:50:56                                                       *
     10           ******************************************************************************/
     11          
     12          #include "delay.h"
     13          
     14          /*************************************************************************
     15          *                             野火嵌入式开发工作室
     16          *
     17          *  函数名称：delayms
     18          *  功能说明：延时函数（不准确），内核频率为100M时较为准确
     19          *  参数说明：无
     20          *  函数返回：无
     21          *  修改时间：2012-2-1    已测试
     22          *  备    注：
     23          *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     24          void  delayms(uint32  ms)
     25          {
   \                     delayms:
   \   00000000   0xB410             PUSH     {R4}
     26          
     27              uint32  i, j;
     28              for(i = 0; i < ms; i++)
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x0019             MOVS     R1,R3
   \                     ??delayms_0:
   \   00000006   0x4281             CMP      R1,R0
   \   00000008   0xD20D             BCS.N    ??delayms_1
     29              {
     30                  for(j = (g_bus_clock / 1000); j > 0; j--)
   \   0000000A   0x....             LDR.N    R3,??DataTable1
   \   0000000C   0x681B             LDR      R3,[R3, #+0]
   \   0000000E   0xF44F 0x747A      MOV      R4,#+1000
   \   00000012   0xFBB3 0xF3F4      UDIV     R3,R3,R4
   \   00000016   0x001A             MOVS     R2,R3
   \                     ??delayms_2:
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD002             BEQ.N    ??delayms_3
     31                  {
     32                      asm("nop");
   \   0000001C   0xBF00             nop
     33                  }
   \   0000001E   0x1E52             SUBS     R2,R2,#+1
   \   00000020   0xE7FA             B.N      ??delayms_2
     34              }
   \                     ??delayms_3:
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \   00000024   0xE7EF             B.N      ??delayms_0
     35          }
   \                     ??delayms_1:
   \   00000026   0xBC10             POP      {R4}
   \   00000028   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     36          void delayus(uint32 us)
     37          {
   \                     delayus:
   \   00000000   0xB410             PUSH     {R4}
     38              uint32  i, j;
     39              for(i = 0; i < us; i++)
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x0019             MOVS     R1,R3
   \                     ??delayus_0:
   \   00000006   0x4281             CMP      R1,R0
   \   00000008   0xD20C             BCS.N    ??delayus_1
     40              {
     41                  for(j = (g_bus_clock / 1000000); j > 0; j--)
   \   0000000A   0x....             LDR.N    R3,??DataTable1
   \   0000000C   0x681B             LDR      R3,[R3, #+0]
   \   0000000E   0x....             LDR.N    R4,??DataTable1_1  ;; 0xf4240
   \   00000010   0xFBB3 0xF3F4      UDIV     R3,R3,R4
   \   00000014   0x001A             MOVS     R2,R3
   \                     ??delayus_2:
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD002             BEQ.N    ??delayus_3
     42                  {
     43                      asm("nop");
   \   0000001A   0xBF00             nop
     44                  }
   \   0000001C   0x1E52             SUBS     R2,R2,#+1
   \   0000001E   0xE7FA             B.N      ??delayus_2
     45              }    
   \                     ??delayus_3:
   \   00000020   0x1C49             ADDS     R1,R1,#+1
   \   00000022   0xE7F0             B.N      ??delayus_0
     46          }
   \                     ??delayus_1:
   \   00000024   0xBC10             POP      {R4}
   \   00000026   0x4770             BX       LR               ;; return
     47          /*************************************************************************
     48          *                             野火嵌入式开发工作室
     49          *
     50          *  函数名称：Pause
     51          *  功能说明：延时，I2C读写后，需要延时一下
     52          *  参数说明：无
     53          *  函数返回：无
     54          *  修改时间：2012-1-20
     55          *  备    注：在官方基础上增大延时数
     56          *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     57          void Pause(void)
     58          {
     59              uint16 n;
     60              for(n = 1; n < 50000; n++)      //注意，这个数据太小，会导致读取错误。
   \                     Pause:
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0x0008             MOVS     R0,R1
   \                     ??Pause_0:
   \   00000004   0xF24C 0x3150      MOVW     R1,#+50000
   \   00000008   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD202             BCS.N    ??Pause_1
     61              {
     62                  asm("nop");
   \   0000000E   0xBF00             nop
     63              }
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0xE7F7             B.N      ??Pause_0
     64          }
   \                     ??Pause_1:
   \   00000014   0x4770             BX       LR               ;; return
     65          /*************************************************************************
     66          *
     67          *  函数名称：Delay5us
     68          *  功能说明：延时，I2C时序控制
     69          *  参数说明：无
     70          *  函数返回：无
     71          *  修改时间：2012-1-20
     72          *  备    注：在官方基础上增大延时数
     73          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     74          void Delay5us()
     75          {
     76              int i = 0;
   \                     Delay5us:
   \   00000000   0x2000             MOVS     R0,#+0
     77              for(i = 0; i < 500; i++)
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x0008             MOVS     R0,R1
   \                     ??Delay5us_0:
   \   00000006   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000000A   0xDA01             BGE.N    ??Delay5us_1
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0xE7FA             B.N      ??Delay5us_0
     78              {
     79          
     80              }
     81          }
   \                     ??Delay5us_1:
   \   00000010   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x000F4240         DC32     0xf4240

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  Delay5us
        0  Pause
        4  delayms
        4  delayus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      18  Delay5us
      22  Pause
      42  delayms
      40  delayus

 
 130 bytes in section .text
 
 130 bytes of CODE memory

Errors: none
Warnings: none
