###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     07/Aug/2014  15:34:42 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\switches.c                                            #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\modu #
#                    le\switches.c -D LPLD_K60 -lCN                           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\switches.lst                                    #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\switches.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\module\switches.c
      1          /****************************************************************************** 
      2           *       switches.c ----- The code of switches use          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  switches.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/3/23 16:37:57                                                       *
     10           ******************************************************************************/
     11          #include "switches.h"
     12          

   \                                 In section .text, align 2, keep-with-next
     13          void InitSwitches(void)
     14          {
   \                     InitSwitches:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     15              GPIO_InitTypeDef switch_init_struct = {0};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2114             MOVS     R1,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     16          
     17              switch_init_struct.GPIO_PTx     = SWITCH0_PORT;
   \   0000000C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000000E   0x9001             STR      R0,[SP, #+4]
     18              switch_init_struct.GPIO_Pins    = SWITCH0_GPIO_PIN;
   \   00000010   0x201C             MOVS     R0,#+28
   \   00000012   0x.... 0x....      BL       PinNum2GpioPin
   \   00000016   0x9002             STR      R0,[SP, #+8]
     19              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF88D 0x0010      STRB     R0,[SP, #+16]
     20              LPLD_GPIO_Init(switch_init_struct);
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Init
     21          
     22              switch_init_struct.GPIO_PTx     = SWITCH1_PORT;
   \   00000030   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000032   0x9001             STR      R0,[SP, #+4]
     23              switch_init_struct.GPIO_Pins    = SWITCH1_GPIO_PIN;
   \   00000034   0x201B             MOVS     R0,#+27
   \   00000036   0x.... 0x....      BL       PinNum2GpioPin
   \   0000003A   0x9002             STR      R0,[SP, #+8]
     24              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xF88D 0x0010      STRB     R0,[SP, #+16]
     25              LPLD_GPIO_Init(switch_init_struct);
   \   00000042   0xA901             ADD      R1,SP,#+4
   \   00000044   0xB084             SUB      SP,SP,#+16
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x2214             MOVS     R2,#+20
   \   0000004A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000004E   0xBC0F             POP      {R0-R3}
   \   00000050   0x.... 0x....      BL       LPLD_GPIO_Init
     26          
     27              switch_init_struct.GPIO_PTx     = SWITCH2_PORT;
   \   00000054   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000056   0x9001             STR      R0,[SP, #+4]
     28              switch_init_struct.GPIO_Pins    = SWITCH2_GPIO_PIN;
   \   00000058   0x201A             MOVS     R0,#+26
   \   0000005A   0x.... 0x....      BL       PinNum2GpioPin
   \   0000005E   0x9002             STR      R0,[SP, #+8]
     29              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0xF88D 0x0010      STRB     R0,[SP, #+16]
     30              LPLD_GPIO_Init(switch_init_struct);
   \   00000066   0xA901             ADD      R1,SP,#+4
   \   00000068   0xB084             SUB      SP,SP,#+16
   \   0000006A   0x4668             MOV      R0,SP
   \   0000006C   0x2214             MOVS     R2,#+20
   \   0000006E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000072   0xBC0F             POP      {R0-R3}
   \   00000074   0x.... 0x....      BL       LPLD_GPIO_Init
     31          
     32              switch_init_struct.GPIO_PTx     = SWITCH3_PORT;
   \   00000078   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000007A   0x9001             STR      R0,[SP, #+4]
     33              switch_init_struct.GPIO_Pins    = SWITCH3_GPIO_PIN;
   \   0000007C   0x200C             MOVS     R0,#+12
   \   0000007E   0x.... 0x....      BL       PinNum2GpioPin
   \   00000082   0x9002             STR      R0,[SP, #+8]
     34              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0xF88D 0x0010      STRB     R0,[SP, #+16]
     35              LPLD_GPIO_Init(switch_init_struct);
   \   0000008A   0xA901             ADD      R1,SP,#+4
   \   0000008C   0xB084             SUB      SP,SP,#+16
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x2214             MOVS     R2,#+20
   \   00000092   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000096   0xBC0F             POP      {R0-R3}
   \   00000098   0x.... 0x....      BL       LPLD_GPIO_Init
     36          
     37              switch_init_struct.GPIO_PTx     = SWITCH4_PORT;
   \   0000009C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000009E   0x9001             STR      R0,[SP, #+4]
     38              switch_init_struct.GPIO_Pins    = SWITCH4_GPIO_PIN;
   \   000000A0   0x200B             MOVS     R0,#+11
   \   000000A2   0x.... 0x....      BL       PinNum2GpioPin
   \   000000A6   0x9002             STR      R0,[SP, #+8]
     39              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0xF88D 0x0010      STRB     R0,[SP, #+16]
     40              LPLD_GPIO_Init(switch_init_struct);
   \   000000AE   0xA901             ADD      R1,SP,#+4
   \   000000B0   0xB084             SUB      SP,SP,#+16
   \   000000B2   0x4668             MOV      R0,SP
   \   000000B4   0x2214             MOVS     R2,#+20
   \   000000B6   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000BA   0xBC0F             POP      {R0-R3}
   \   000000BC   0x.... 0x....      BL       LPLD_GPIO_Init
     41          
     42              switch_init_struct.GPIO_PTx     = SWITCH5_PORT;
   \   000000C0   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   000000C2   0x9001             STR      R0,[SP, #+4]
     43              switch_init_struct.GPIO_Pins    = SWITCH5_GPIO_PIN;
   \   000000C4   0x200A             MOVS     R0,#+10
   \   000000C6   0x.... 0x....      BL       PinNum2GpioPin
   \   000000CA   0x9002             STR      R0,[SP, #+8]
     44              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0xF88D 0x0010      STRB     R0,[SP, #+16]
     45              LPLD_GPIO_Init(switch_init_struct);
   \   000000D2   0xA901             ADD      R1,SP,#+4
   \   000000D4   0xB084             SUB      SP,SP,#+16
   \   000000D6   0x4668             MOV      R0,SP
   \   000000D8   0x2214             MOVS     R2,#+20
   \   000000DA   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000DE   0xBC0F             POP      {R0-R3}
   \   000000E0   0x.... 0x....      BL       LPLD_GPIO_Init
     46          
     47              switch_init_struct.GPIO_PTx     = SWITCH6_PORT;
   \   000000E4   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   000000E6   0x9001             STR      R0,[SP, #+4]
     48              switch_init_struct.GPIO_Pins    = SWITCH6_GPIO_PIN;
   \   000000E8   0x2009             MOVS     R0,#+9
   \   000000EA   0x.... 0x....      BL       PinNum2GpioPin
   \   000000EE   0x9002             STR      R0,[SP, #+8]
     49              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0xF88D 0x0010      STRB     R0,[SP, #+16]
     50              LPLD_GPIO_Init(switch_init_struct);
   \   000000F6   0xA901             ADD      R1,SP,#+4
   \   000000F8   0xB084             SUB      SP,SP,#+16
   \   000000FA   0x4668             MOV      R0,SP
   \   000000FC   0x2214             MOVS     R2,#+20
   \   000000FE   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000102   0xBC0F             POP      {R0-R3}
   \   00000104   0x.... 0x....      BL       LPLD_GPIO_Init
     51          
     52              switch_init_struct.GPIO_PTx     = SWITCH7_PORT;
   \   00000108   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000010A   0x9001             STR      R0,[SP, #+4]
     53              switch_init_struct.GPIO_Pins    = SWITCH7_GPIO_PIN;
   \   0000010C   0x2008             MOVS     R0,#+8
   \   0000010E   0x.... 0x....      BL       PinNum2GpioPin
   \   00000112   0x9002             STR      R0,[SP, #+8]
     54              switch_init_struct.GPIO_Dir     = DIR_INPUT;
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0xF88D 0x0010      STRB     R0,[SP, #+16]
     55              LPLD_GPIO_Init(switch_init_struct);
   \   0000011A   0xA901             ADD      R1,SP,#+4
   \   0000011C   0xB084             SUB      SP,SP,#+16
   \   0000011E   0x4668             MOV      R0,SP
   \   00000120   0x2214             MOVS     R2,#+20
   \   00000122   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000126   0xBC0F             POP      {R0-R3}
   \   00000128   0x.... 0x....      BL       LPLD_GPIO_Init
     56          }
   \   0000012C   0xB007             ADD      SP,SP,#+28
   \   0000012E   0xBD00             POP      {PC}             ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          uint8 ReadSwitches(uint8 mask)
     59          {
   \                     ReadSwitches:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
     60              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     61              uint8 ret = 0x00;
   \   00000006   0x2600             MOVS     R6,#+0
     62              uint8 temp_bit_state = 0x00;
   \   00000008   0x2700             MOVS     R7,#+0
     63          
     64              for(i = 0; i < SWITCHES_AMOUNT; i++)
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x0005             MOVS     R5,R0
   \                     ??ReadSwitches_0:
   \   0000000E   0x2D08             CMP      R5,#+8
   \   00000010   0xDA47             BGE.N    ??ReadSwitches_1
     65              {
     66                  if(mask & 0x01)
   \   00000012   0x07E0             LSLS     R0,R4,#+31
   \   00000014   0xD541             BPL.N    ??ReadSwitches_2
     67                  {
     68                      switch(i)
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD00B             BEQ.N    ??ReadSwitches_3
   \   0000001A   0x2D02             CMP      R5,#+2
   \   0000001C   0xD015             BEQ.N    ??ReadSwitches_4
   \   0000001E   0xD30E             BCC.N    ??ReadSwitches_5
   \   00000020   0x2D04             CMP      R5,#+4
   \   00000022   0xD01E             BEQ.N    ??ReadSwitches_6
   \   00000024   0xD317             BCC.N    ??ReadSwitches_7
   \   00000026   0x2D06             CMP      R5,#+6
   \   00000028   0xD027             BEQ.N    ??ReadSwitches_8
   \   0000002A   0xD320             BCC.N    ??ReadSwitches_9
   \   0000002C   0x2D07             CMP      R5,#+7
   \   0000002E   0xD02A             BEQ.N    ??ReadSwitches_10
   \   00000030   0xE02F             B.N      ??ReadSwitches_11
     69                      {
     70                          case 0 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH0_PORT, SWITCH0_PIN_NUM);
   \                     ??ReadSwitches_3:
   \   00000032   0x211C             MOVS     R1,#+28
   \   00000034   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000003A   0x0007             MOVS     R7,R0
     71                                   break;
   \   0000003C   0xE029             B.N      ??ReadSwitches_12
     72                          case 1 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH1_PORT, SWITCH1_PIN_NUM);
   \                     ??ReadSwitches_5:
   \   0000003E   0x211B             MOVS     R1,#+27
   \   00000040   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000046   0x0007             MOVS     R7,R0
     73                                   break;
   \   00000048   0xE023             B.N      ??ReadSwitches_12
     74                          case 2 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH2_PORT, SWITCH2_PIN_NUM);
   \                     ??ReadSwitches_4:
   \   0000004A   0x211A             MOVS     R1,#+26
   \   0000004C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000052   0x0007             MOVS     R7,R0
     75                                   break;
   \   00000054   0xE01D             B.N      ??ReadSwitches_12
     76                          case 3 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH3_PORT, SWITCH3_PIN_NUM);
   \                     ??ReadSwitches_7:
   \   00000056   0x210C             MOVS     R1,#+12
   \   00000058   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000005E   0x0007             MOVS     R7,R0
     77                                   break;
   \   00000060   0xE017             B.N      ??ReadSwitches_12
     78                          case 4 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH4_PORT, SWITCH4_PIN_NUM);
   \                     ??ReadSwitches_6:
   \   00000062   0x210B             MOVS     R1,#+11
   \   00000064   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000066   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000006A   0x0007             MOVS     R7,R0
     79                                   break;
   \   0000006C   0xE011             B.N      ??ReadSwitches_12
     80                          case 5 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH5_PORT, SWITCH5_PIN_NUM);
   \                     ??ReadSwitches_9:
   \   0000006E   0x210A             MOVS     R1,#+10
   \   00000070   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000072   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000076   0x0007             MOVS     R7,R0
     81                                   break;
   \   00000078   0xE00B             B.N      ??ReadSwitches_12
     82                          case 6 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH6_PORT, SWITCH6_PIN_NUM);
   \                     ??ReadSwitches_8:
   \   0000007A   0x2109             MOVS     R1,#+9
   \   0000007C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000007E   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000082   0x0007             MOVS     R7,R0
     83                                   break;
   \   00000084   0xE005             B.N      ??ReadSwitches_12
     84                          case 7 : temp_bit_state = LPLD_GPIO_Input_b(SWITCH7_PORT, SWITCH7_PIN_NUM);
   \                     ??ReadSwitches_10:
   \   00000086   0x2108             MOVS     R1,#+8
   \   00000088   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   0000008A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000008E   0x0007             MOVS     R7,R0
     85                                   break;
   \   00000090   0xE7FF             B.N      ??ReadSwitches_12
     86                          default:
     87                                   break;
     88                      }
     89                      ret = ret | (temp_bit_state << i);
   \                     ??ReadSwitches_11:
   \                     ??ReadSwitches_12:
   \   00000092   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000094   0xFA17 0xF005      LSLS     R0,R7,R5
   \   00000098   0x4306             ORRS     R6,R0,R6
     90                  }
     91                  mask = mask >> 1;
   \                     ??ReadSwitches_2:
   \   0000009A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009C   0x0864             LSRS     R4,R4,#+1
     92              }
   \   0000009E   0x1C6D             ADDS     R5,R5,#+1
   \   000000A0   0xE7B5             B.N      ??ReadSwitches_0
     93          
     94              return ret;
   \                     ??ReadSwitches_1:
   \   000000A2   0x0030             MOVS     R0,R6
   \   000000A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A6   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     95          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       48  InitSwitches
             32 -> LPLD_GPIO_Init
             32 -> PinNum2GpioPin
             32 -> __aeabi_memclr4
             48 -> __aeabi_memcpy4
       24  ReadSwitches
             24 -> LPLD_GPIO_Input_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant {(GPIO_Type *)0}>
       4  ??DataTable1
     304  InitSwitches
     168  ReadSwitches

 
  20 bytes in section .rodata
 476 bytes in section .text
 
 476 bytes of CODE  memory
  20 bytes of CONST memory

Errors: none
Warnings: none
