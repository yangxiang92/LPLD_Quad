###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     08/Aug/2014  19:52:16 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    SignalProcess\AK8975Cdata.c                              #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    SignalProcess\AK8975Cdata.c -D LPLD_K60 -lCN             #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\AK8975Cdata.lst                                 #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\AK8975Cdata.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\SignalProcess\AK8975Cdata.c
      1          /****************************************************************************** 
      2           *       AK8975Cdata.c ----- The data processsing of AK8975C          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  AK8975Cdata.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/8 18:57:16                                                       *
     10           ******************************************************************************/
     11          #include "AK8975Cdata.h"
     12          

   \                                 In section .bss, align 4
     13          AK8975C_RawDataType g_sAK8975CRawData;
   \                     g_sAK8975CRawData:
   \   00000000                      DS8 8

   \                                 In section .data, align 4
     14          float g_f32MagGain[3] = {3E-7f, 3E-7f, 3E-7f};
   \                     g_f32MagGain:
   \   00000000   0x34A10FB0         DC32 34A10FB0H, 34A10FB0H, 34A10FB0H
   \              0x34A10FB0   
   \              0x34A10FB0   
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void AK8975C_InitRawData(void)
     17          {
   \                     AK8975C_InitRawData:
   \   00000000   0xB510             PUSH     {R4,LR}
     18              int i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     19          
     20              for(i = 0; i < 3; i++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0004             MOVS     R4,R0
   \                     ??AK8975C_InitRawData_0:
   \   00000008   0x2C03             CMP      R4,#+3
   \   0000000A   0xDA05             BGE.N    ??AK8975C_InitRawData_1
     21              {
     22                  g_sAK8975CRawData.mag[i] = 0;
   \   0000000C   0x....             LDR.N    R0,??DataTable2
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0xF820 0x1014      STRH     R1,[R0, R4, LSL #+1]
     23              }
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \   00000016   0xE7F7             B.N      ??AK8975C_InitRawData_0
     24          
     25              AK8975C_StartMeasure();
   \                     ??AK8975C_InitRawData_1:
   \   00000018   0x.... 0x....      BL       AK8975C_StartMeasure
     26          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void AK8975C_RefreshRawData(void)
     29          {
   \                     AK8975C_RefreshRawData:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     30              static uint32 convert_time_cnt = 0;
     31              convert_time_cnt ++;
   \   00000002   0x....             LDR.N    R0,??DataTable2_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable2_1
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     32          
     33              if(convert_time_cnt > (AK8975C_SAMPLE_PERIOD_MS / PROGRAM_PERIOD_MS))
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2806             CMP      R0,#+6
   \   00000012   0xD316             BCC.N    ??AK8975C_RefreshRawData_0
     34              {
     35                  AK8975C_WaitMeasureComplete();
   \   00000014   0x.... 0x....      BL       AK8975C_WaitMeasureComplete
     36                  int16 buf[3];
     37                  int i = 0;
   \   00000018   0x2400             MOVS     R4,#+0
     38                  AK8975C_GetRawData(buf);
   \   0000001A   0xA800             ADD      R0,SP,#+0
   \   0000001C   0x.... 0x....      BL       AK8975C_GetRawData
     39                  for(i = 0; i < 3; i++)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x0004             MOVS     R4,R0
   \                     ??AK8975C_RefreshRawData_1:
   \   00000024   0x2C03             CMP      R4,#+3
   \   00000026   0xDA07             BGE.N    ??AK8975C_RefreshRawData_2
     40                  {
     41                      g_sAK8975CRawData.mag[i] = buf[i];
   \   00000028   0x....             LDR.N    R0,??DataTable2
   \   0000002A   0xA900             ADD      R1,SP,#+0
   \   0000002C   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000030   0xF820 0x1014      STRH     R1,[R0, R4, LSL #+1]
     42                  }
   \   00000034   0x1C64             ADDS     R4,R4,#+1
   \   00000036   0xE7F5             B.N      ??AK8975C_RefreshRawData_1
     43                  /* 
     44                  g_sAK8975CRawData.mag[0] = AK8975C_GetData(AK8975C_HXL);
     45                  g_sAK8975CRawData.mag[1] = AK8975C_GetData(AK8975C_HYL);
     46                  g_sAK8975CRawData.mag[2] = AK8975C_GetData(AK8975C_HZL);
     47                  */
     48                  AK8975C_StartMeasure();
   \                     ??AK8975C_RefreshRawData_2:
   \   00000038   0x.... 0x....      BL       AK8975C_StartMeasure
     49                  convert_time_cnt = 0;
   \   0000003C   0x....             LDR.N    R0,??DataTable2_1
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x6001             STR      R1,[R0, #+0]
     50              }
     51          }
   \                     ??AK8975C_RefreshRawData_0:
   \   00000042   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??convert_time_cnt:
   \   00000000                      DS8 4
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void AK8975C_GetCalibratedMag(float * mag)
     54          {
   \                     AK8975C_GetCalibratedMag:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     55              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     56          
     57              for(i = 0; i < 3; i++)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x0005             MOVS     R5,R0
   \                     ??AK8975C_GetCalibratedMag_0:
   \   0000000A   0x2D03             CMP      R5,#+3
   \   0000000C   0xDA11             BGE.N    ??AK8975C_GetCalibratedMag_1
     58              {
     59                  mag[i] = (float)(g_sAK8975CRawData.mag[i] - g_i16MagOffset[i]) * g_f32MagGain[i];
   \   0000000E   0x....             LDR.N    R0,??DataTable2
   \   00000010   0xF930 0x0015      LDRSH    R0,[R0, R5, LSL #+1]
   \   00000014   0x....             LDR.N    R1,??DataTable2_2
   \   00000016   0xF931 0x1015      LDRSH    R1,[R1, R5, LSL #+1]
   \   0000001A   0x1A40             SUBS     R0,R0,R1
   \   0000001C   0x.... 0x....      BL       __aeabi_i2f
   \   00000020   0x....             LDR.N    R1,??DataTable2_3
   \   00000022   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   00000026   0x.... 0x....      BL       __aeabi_fmul
   \   0000002A   0xF844 0x0025      STR      R0,[R4, R5, LSL #+2]
     60              }
   \   0000002E   0x1C6D             ADDS     R5,R5,#+1
   \   00000030   0xE7EB             B.N      ??AK8975C_GetCalibratedMag_0
     61          }
   \                     ??AK8975C_GetCalibratedMag_1:
   \   00000032   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     g_sAK8975CRawData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ??convert_time_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     g_i16MagOffset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     g_f32MagGain

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       12  AK8975C_GetCalibratedMag
             12 -> __aeabi_fmul
             12 -> __aeabi_i2f
        8  AK8975C_InitRawData
              8 -> AK8975C_StartMeasure
       16  AK8975C_RefreshRawData
             16 -> AK8975C_GetRawData
             16 -> AK8975C_StartMeasure
             16 -> AK8975C_WaitMeasureComplete


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      52  AK8975C_GetCalibratedMag
      30  AK8975C_InitRawData
      68  AK8975C_RefreshRawData
       4  convert_time_cnt
      12  g_f32MagGain
       8  g_sAK8975CRawData

 
  12 bytes in section .bss
  12 bytes in section .data
 166 bytes in section .text
 
 166 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
