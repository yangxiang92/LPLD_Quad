###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     07/Aug/2014  15:34:25 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    SignalProcess\accfilter.c                                #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    SignalProcess\accfilter.c -D LPLD_K60 -lCN               #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\accfilter.lst                                   #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\accfilter.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\SignalProcess\accfilter.c
      1          /****************************************************************************** 
      2           *       accfilter.c ----- The acc data filter          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  accfilter.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/7 10:36:23                                                       *
     10           ******************************************************************************/
     11          #include "accfilter.h"
     12          

   \                                 In section .bss, align 4
     13          static float s_fAccFilterHistory[ACCFILTER_AVG_NUM][3]; //@保存采样16次的三轴加速度
   \                     s_fAccFilterHistory:
   \   00000000                      DS8 96

   \                                 In section .bss, align 4
     14          static float s_fAccFilterCurrent[3];//@滤波后的加速度
   \                     s_fAccFilterCurrent:
   \   00000000                      DS8 12

   \                                 In section .bss, align 1
     15          static uint8 s_u8AccFilterIndex;	//@单次采样的加速度，accfilter_index为具体的次数，总数为16，大于16时即清0
   \                     s_u8AccFilterIndex:
   \   00000000                      DS8 1
     16          

   \                                 In section .text, align 2, keep-with-next
     17          void InitAccFilter(void)
     18          {
     19              int i = 0;
   \                     InitAccFilter:
   \   00000000   0x2000             MOVS     R0,#+0
     20              int j = 0;
   \   00000002   0x2100             MOVS     R1,#+0
     21          
     22              for(i = 0; i < ACCFILTER_AVG_NUM; i ++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x0010             MOVS     R0,R2
   \                     ??InitAccFilter_0:
   \   00000008   0x2808             CMP      R0,#+8
   \   0000000A   0xDA0E             BGE.N    ??InitAccFilter_1
     23              {
     24                  for(j = 0; j < 3; j++)
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x0011             MOVS     R1,R2
   \                     ??InitAccFilter_2:
   \   00000010   0x2903             CMP      R1,#+3
   \   00000012   0xDA08             BGE.N    ??InitAccFilter_3
     25                  {
     26                      s_fAccFilterHistory[i][j] = 0;
   \   00000014   0x220C             MOVS     R2,#+12
   \   00000016   0x....             LDR.N    R3,??DataTable2
   \   00000018   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000001C   0x2300             MOVS     R3,#+0
   \   0000001E   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
     27                  }
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \   00000024   0xE7F4             B.N      ??InitAccFilter_2
     28              }
   \                     ??InitAccFilter_3:
   \   00000026   0x1C40             ADDS     R0,R0,#+1
   \   00000028   0xE7EE             B.N      ??InitAccFilter_0
     29          
     30              for(i = 0; i < 3; i++)
   \                     ??InitAccFilter_1:
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x0010             MOVS     R0,R2
   \                     ??InitAccFilter_4:
   \   0000002E   0x2803             CMP      R0,#+3
   \   00000030   0xDA05             BGE.N    ??InitAccFilter_5
     31              {
     32                  s_fAccFilterCurrent[i] = 0;
   \   00000032   0x....             LDR.N    R2,??DataTable2_1
   \   00000034   0x2300             MOVS     R3,#+0
   \   00000036   0xF842 0x3020      STR      R3,[R2, R0, LSL #+2]
     33              }
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \   0000003C   0xE7F7             B.N      ??InitAccFilter_4
     34          }
   \                     ??InitAccFilter_5:
   \   0000003E   0x4770             BX       LR               ;; return
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void AccFilterInput(float acc[3])
     37          {
   \                     AccFilterInput:
   \   00000000   0xB57E             PUSH     {R1-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     38              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     39              int j = 0;
   \   00000006   0x2600             MOVS     R6,#+0
     40          
     41              for(i = 0; i < 3; i++)
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x0005             MOVS     R5,R0
   \                     ??AccFilterInput_0:
   \   0000000C   0x2D03             CMP      R5,#+3
   \   0000000E   0xDA0B             BGE.N    ??AccFilterInput_1
     42              {
     43                  s_fAccFilterHistory[s_u8AccFilterIndex][i] = acc[i];
   \   00000010   0x....             LDR.N    R0,??DataTable2_2
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x210C             MOVS     R1,#+12
   \   00000016   0x....             LDR.N    R2,??DataTable2
   \   00000018   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000001C   0xF854 0x1025      LDR      R1,[R4, R5, LSL #+2]
   \   00000020   0xF840 0x1025      STR      R1,[R0, R5, LSL #+2]
     44              }
   \   00000024   0x1C6D             ADDS     R5,R5,#+1
   \   00000026   0xE7F1             B.N      ??AccFilterInput_0
     45          
     46              if(s_u8AccFilterIndex >= ACCFILTER_AVG_NUM)
   \                     ??AccFilterInput_1:
   \   00000028   0x....             LDR.N    R0,??DataTable2_2
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x2808             CMP      R0,#+8
   \   0000002E   0xD302             BCC.N    ??AccFilterInput_2
     47              {
     48                  s_u8AccFilterIndex = 0;
   \   00000030   0x....             LDR.N    R0,??DataTable2_2
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x7001             STRB     R1,[R0, #+0]
     49              }
     50          
     51              float sum[3] = {0,0,0};
   \                     ??AccFilterInput_2:
   \   00000036   0xA800             ADD      R0,SP,#+0
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2300             MOVS     R3,#+0
   \   0000003E   0xC00E             STM      R0!,{R1-R3}
   \   00000040   0x380C             SUBS     R0,R0,#+12
     52              for(i = 0; i < ACCFILTER_AVG_NUM; i++)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x0005             MOVS     R5,R0
   \                     ??AccFilterInput_3:
   \   00000046   0x2D08             CMP      R5,#+8
   \   00000048   0xDA15             BGE.N    ??AccFilterInput_4
     53              {
     54                  for(j = 0; j < 3; j ++)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x0006             MOVS     R6,R0
   \                     ??AccFilterInput_5:
   \   0000004E   0x2E03             CMP      R6,#+3
   \   00000050   0xDA0F             BGE.N    ??AccFilterInput_6
     55                  {
     56                      sum[j] += s_fAccFilterHistory[i][j];
   \   00000052   0xA800             ADD      R0,SP,#+0
   \   00000054   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   00000058   0x210C             MOVS     R1,#+12
   \   0000005A   0x....             LDR.N    R2,??DataTable2
   \   0000005C   0xFB01 0x2105      MLA      R1,R1,R5,R2
   \   00000060   0xF851 0x1026      LDR      R1,[R1, R6, LSL #+2]
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0xA900             ADD      R1,SP,#+0
   \   0000006A   0xF841 0x0026      STR      R0,[R1, R6, LSL #+2]
     57                  }
   \   0000006E   0x1C76             ADDS     R6,R6,#+1
   \   00000070   0xE7ED             B.N      ??AccFilterInput_5
     58              }
   \                     ??AccFilterInput_6:
   \   00000072   0x1C6D             ADDS     R5,R5,#+1
   \   00000074   0xE7E7             B.N      ??AccFilterInput_3
     59          
     60              for(i = 0; i < 3; i++)
   \                     ??AccFilterInput_4:
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x0005             MOVS     R5,R0
   \                     ??AccFilterInput_7:
   \   0000007A   0x2D03             CMP      R5,#+3
   \   0000007C   0xDA0B             BGE.N    ??AccFilterInput_8
     61              {
     62                  s_fAccFilterCurrent[i] = sum[i] * (1.0f/ACCFILTER_AVG_NUM);
   \   0000007E   0xA800             ADD      R0,SP,#+0
   \   00000080   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000084   0xF05F 0x5078      MOVS     R0,#+1040187392
   \   00000088   0x.... 0x....      BL       __aeabi_fmul
   \   0000008C   0x....             LDR.N    R1,??DataTable2_1
   \   0000008E   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
     63              }
   \   00000092   0x1C6D             ADDS     R5,R5,#+1
   \   00000094   0xE7F1             B.N      ??AccFilterInput_7
     64          }
   \                     ??AccFilterInput_8:
   \   00000096   0xBD77             POP      {R0-R2,R4-R6,PC}  ;; return
     65          

   \                                 In section .text, align 2, keep-with-next
     66          float * AccFilterGetCurrent(void)
     67          {
     68              return s_fAccFilterCurrent;
   \                     AccFilterGetCurrent:
   \   00000000   0x....             LDR.N    R0,??DataTable2_1
   \   00000002   0x4770             BX       LR               ;; return
     69          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     s_fAccFilterHistory

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     s_fAccFilterCurrent

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     s_u8AccFilterIndex

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  AccFilterGetCurrent
       28  AccFilterInput
             28 -> __aeabi_fadd
             28 -> __aeabi_fmul
        0  InitAccFilter


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant {(0.0F), (0.0F), (0.0F)}>
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  AccFilterGetCurrent
     152  AccFilterInput
      64  InitAccFilter
      12  s_fAccFilterCurrent
      96  s_fAccFilterHistory
       1  s_u8AccFilterIndex

 
 109 bytes in section .bss
  12 bytes in section .rodata
 232 bytes in section .text
 
 232 bytes of CODE  memory
  12 bytes of CONST memory
 109 bytes of DATA  memory

Errors: none
Warnings: none
