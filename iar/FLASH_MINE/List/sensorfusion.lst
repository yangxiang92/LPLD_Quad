###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     08/Aug/2014  19:52:21 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Algorithm\sensorfusion.c                                 #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Algorithm\sensorfusion.c -D LPLD_K60 -lCN                #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\sensorfusion.lst                                #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\sensorfusion.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\Algorithm\sensorfusion.c
      1          /****************************************************************************** 
      2           *       sensorfusion.c ----- The code to fuse sensor information          *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  sensorfusion.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/8 9:26:02                                                       *
     10           ******************************************************************************/
     11          #include "sensorfusion.h"
     12          

   \                                 In section .rodata, align 4
     13          const static float MIX_MAG_Y = 0.743144f;/*cos(42)*/
   \                     MIX_MAG_Y:
   \   00000000   0x3F3E3EAF         DC32 3F3E3EAFH

   \                                 In section .rodata, align 4
     14          const static float MIX_MAG_Z = -0.669130f;/*sin42*/
   \                     MIX_MAG_Z:
   \   00000000   0xBF2B4C1B         DC32 0BF2B4C1BH

   \                                 In section .rodata, align 4
     15          const static float MIX_MAG_VECTOR[] = {0,0.743144f/*cos(42)*/,-0.669130f/*sin42*/};
   \                     MIX_MAG_VECTOR:
   \   00000000   0x00000000         DC32 0H, 3F3E3EAFH, 0BF2B4C1BH
   \              0x3F3E3EAF   
   \              0xBF2B4C1B   

   \                                 In section .rodata, align 4
     16          const static float MIX_ACC_VECTOR[] = {0,0,1};
   \                     MIX_ACC_VECTOR:
   \   00000000   0x00000000         DC32 0H, 0H, 3F800000H
   \              0x00000000   
   \              0x3F800000   

   \                                 In section .rodata, align 4
     17          const static float MIX_LONGTREM_FACTOR = 0.005;
   \                     MIX_LONGTREM_FACTOR:
   \   00000000   0x3BA3D70A         DC32 3BA3D70AH
     18          //const static float MIX_GRAVITY = 9.7883;
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void FuseInit(void)
     21          {
     22          
     23          }
   \                     FuseInit:
   \   00000000   0x4770             BX       LR               ;; return
     24          

   \                                 In section .text, align 2, keep-with-next
     25          void FuseGyr(quaternion * attitude, float gyr[3],float interval)
     26          {
   \                     FuseGyr:
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
     27              //
     28              // 构造增量旋转。
     29              float delta_x = gyr[0] * interval / 2;
   \   00000006   0x9801             LDR      R0,[SP, #+4]
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0x9802             LDR      R0,[SP, #+8]
   \   0000000C   0x.... 0x....      BL       __aeabi_fmul
   \   00000010   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000014   0x.... 0x....      BL       __aeabi_fdiv
   \   00000018   0x0005             MOVS     R5,R0
     30              float delta_y = gyr[1] * interval / 2;
   \   0000001A   0x9801             LDR      R0,[SP, #+4]
   \   0000001C   0x6841             LDR      R1,[R0, #+4]
   \   0000001E   0x9802             LDR      R0,[SP, #+8]
   \   00000020   0x.... 0x....      BL       __aeabi_fmul
   \   00000024   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000028   0x.... 0x....      BL       __aeabi_fdiv
   \   0000002C   0x0006             MOVS     R6,R0
     31              float delta_z = gyr[2] * interval / 2;
   \   0000002E   0x9801             LDR      R0,[SP, #+4]
   \   00000030   0x6881             LDR      R1,[R0, #+8]
   \   00000032   0x9802             LDR      R0,[SP, #+8]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \   00000038   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000003C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000040   0x0007             MOVS     R7,R0
     32              //
     33              float q_w = attitude->w;
   \   00000042   0xF8D4 0x8000      LDR      R8,[R4, #+0]
     34              float q_x = attitude->x;
   \   00000046   0xF8D4 0x9004      LDR      R9,[R4, #+4]
     35              float q_y = attitude->y;
   \   0000004A   0xF8D4 0xA008      LDR      R10,[R4, #+8]
     36              float q_z = attitude->z;
   \   0000004E   0xF8D4 0xB00C      LDR      R11,[R4, #+12]
     37              //
     38              // 融合，四元数乘法。
     39              attitude->w = q_w         - q_x*delta_x - q_y*delta_y - q_z*delta_z;
   \   00000052   0x4648             MOV      R0,R9
   \   00000054   0x0029             MOVS     R1,R5
   \   00000056   0x.... 0x....      BL       __aeabi_fmul
   \   0000005A   0x0001             MOVS     R1,R0
   \   0000005C   0x4640             MOV      R0,R8
   \   0000005E   0x.... 0x....      BL       __aeabi_fsub
   \   00000062   0x9000             STR      R0,[SP, #+0]
   \   00000064   0x4650             MOV      R0,R10
   \   00000066   0x0031             MOVS     R1,R6
   \   00000068   0x.... 0x....      BL       __aeabi_fmul
   \   0000006C   0x0001             MOVS     R1,R0
   \   0000006E   0x9800             LDR      R0,[SP, #+0]
   \   00000070   0x.... 0x....      BL       __aeabi_fsub
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x4658             MOV      R0,R11
   \   00000078   0x0039             MOVS     R1,R7
   \   0000007A   0x.... 0x....      BL       __aeabi_fmul
   \   0000007E   0x0001             MOVS     R1,R0
   \   00000080   0x9800             LDR      R0,[SP, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fsub
   \   00000086   0x6020             STR      R0,[R4, #+0]
     40              attitude->x = q_w*delta_x + q_x         + q_y*delta_z - q_z*delta_y;
   \   00000088   0x4640             MOV      R0,R8
   \   0000008A   0x0029             MOVS     R1,R5
   \   0000008C   0x.... 0x....      BL       __aeabi_fmul
   \   00000090   0x4649             MOV      R1,R9
   \   00000092   0x.... 0x....      BL       __aeabi_fadd
   \   00000096   0x9000             STR      R0,[SP, #+0]
   \   00000098   0x4650             MOV      R0,R10
   \   0000009A   0x0039             MOVS     R1,R7
   \   0000009C   0x.... 0x....      BL       __aeabi_fmul
   \   000000A0   0x9900             LDR      R1,[SP, #+0]
   \   000000A2   0x.... 0x....      BL       __aeabi_fadd
   \   000000A6   0x9000             STR      R0,[SP, #+0]
   \   000000A8   0x4658             MOV      R0,R11
   \   000000AA   0x0031             MOVS     R1,R6
   \   000000AC   0x.... 0x....      BL       __aeabi_fmul
   \   000000B0   0x0001             MOVS     R1,R0
   \   000000B2   0x9800             LDR      R0,[SP, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_fsub
   \   000000B8   0x6060             STR      R0,[R4, #+4]
     41              attitude->y = q_w*delta_y - q_x*delta_z + q_y         + q_z*delta_x;
   \   000000BA   0x4640             MOV      R0,R8
   \   000000BC   0x0031             MOVS     R1,R6
   \   000000BE   0x.... 0x....      BL       __aeabi_fmul
   \   000000C2   0x9000             STR      R0,[SP, #+0]
   \   000000C4   0x4648             MOV      R0,R9
   \   000000C6   0x0039             MOVS     R1,R7
   \   000000C8   0x.... 0x....      BL       __aeabi_fmul
   \   000000CC   0x0001             MOVS     R1,R0
   \   000000CE   0x9800             LDR      R0,[SP, #+0]
   \   000000D0   0x.... 0x....      BL       __aeabi_fsub
   \   000000D4   0x4651             MOV      R1,R10
   \   000000D6   0x.... 0x....      BL       __aeabi_fadd
   \   000000DA   0x9000             STR      R0,[SP, #+0]
   \   000000DC   0x4658             MOV      R0,R11
   \   000000DE   0x0029             MOVS     R1,R5
   \   000000E0   0x.... 0x....      BL       __aeabi_fmul
   \   000000E4   0x9900             LDR      R1,[SP, #+0]
   \   000000E6   0x.... 0x....      BL       __aeabi_fadd
   \   000000EA   0x60A0             STR      R0,[R4, #+8]
     42              attitude->z = q_w*delta_z + q_x*delta_y - q_y*delta_x + q_z;
   \   000000EC   0x4640             MOV      R0,R8
   \   000000EE   0x0039             MOVS     R1,R7
   \   000000F0   0x.... 0x....      BL       __aeabi_fmul
   \   000000F4   0x9000             STR      R0,[SP, #+0]
   \   000000F6   0x4648             MOV      R0,R9
   \   000000F8   0x0031             MOVS     R1,R6
   \   000000FA   0x.... 0x....      BL       __aeabi_fmul
   \   000000FE   0x9900             LDR      R1,[SP, #+0]
   \   00000100   0x.... 0x....      BL       __aeabi_fadd
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x4650             MOV      R0,R10
   \   00000108   0x0029             MOVS     R1,R5
   \   0000010A   0x.... 0x....      BL       __aeabi_fmul
   \   0000010E   0x0001             MOVS     R1,R0
   \   00000110   0x9800             LDR      R0,[SP, #+0]
   \   00000112   0x.... 0x....      BL       __aeabi_fsub
   \   00000116   0x4659             MOV      R1,R11
   \   00000118   0x.... 0x....      BL       __aeabi_fadd
   \   0000011C   0x60E0             STR      R0,[R4, #+12]
     43              quaternion_normalize(attitude);    
   \   0000011E   0x0020             MOVS     R0,R4
   \   00000120   0x.... 0x....      BL       quaternion_normalize
     44          }
   \   00000124   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void FuseAccMag(quaternion * attitude, float acc[3], float mag[3])
     47          {
   \                     FuseAccMag:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     48              FuseAccMagRotateMethod(attitude,acc,mag);
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       FuseAccMagRotateMethod
     49          }
   \   00000012   0xBD70             POP      {R4-R6,PC}       ;; return
     50          

   \                                 In section .text, align 2, keep-with-next
     51          void FuseAccMagSteepsetDescentMethod(quaternion * attitude, float acc[3], float mag[3])
     52          {
   \                     FuseAccMagSteepsetDescentMethod:
   \   00000000   0xE92D 0x4FF6      PUSH     {R1,R2,R4-R11,LR}
   \   00000004   0xB093             SUB      SP,SP,#+76
   \   00000006   0x0004             MOVS     R4,R0
     53              //
     54              // 单位化加速度和磁场方向。
     55              float a_rsqrt = math_rsqrt(acc[0]*acc[0]+acc[1]*acc[1]+acc[2]*acc[2]);
   \   00000008   0x9813             LDR      R0,[SP, #+76]
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x9813             LDR      R0,[SP, #+76]
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       __aeabi_fmul
   \   00000014   0x0005             MOVS     R5,R0
   \   00000016   0x9813             LDR      R0,[SP, #+76]
   \   00000018   0x6841             LDR      R1,[R0, #+4]
   \   0000001A   0x9813             LDR      R0,[SP, #+76]
   \   0000001C   0x6840             LDR      R0,[R0, #+4]
   \   0000001E   0x.... 0x....      BL       __aeabi_fmul
   \   00000022   0x0029             MOVS     R1,R5
   \   00000024   0x.... 0x....      BL       __aeabi_fadd
   \   00000028   0x0005             MOVS     R5,R0
   \   0000002A   0x9813             LDR      R0,[SP, #+76]
   \   0000002C   0x6881             LDR      R1,[R0, #+8]
   \   0000002E   0x9813             LDR      R0,[SP, #+76]
   \   00000030   0x6880             LDR      R0,[R0, #+8]
   \   00000032   0x.... 0x....      BL       __aeabi_fmul
   \   00000036   0x0029             MOVS     R1,R5
   \   00000038   0x.... 0x....      BL       __aeabi_fadd
   \   0000003C   0x.... 0x....      BL       math_rsqrt
   \   00000040   0x9008             STR      R0,[SP, #+32]
     56              float x_a = acc[0] * a_rsqrt;
   \   00000042   0x9813             LDR      R0,[SP, #+76]
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x9808             LDR      R0,[SP, #+32]
   \   00000048   0x.... 0x....      BL       __aeabi_fmul
   \   0000004C   0x9012             STR      R0,[SP, #+72]
     57              float y_a = acc[1] * a_rsqrt;
   \   0000004E   0x9813             LDR      R0,[SP, #+76]
   \   00000050   0x6841             LDR      R1,[R0, #+4]
   \   00000052   0x9808             LDR      R0,[SP, #+32]
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x9011             STR      R0,[SP, #+68]
     58              float z_a = acc[2] * a_rsqrt;
   \   0000005A   0x9813             LDR      R0,[SP, #+76]
   \   0000005C   0x6881             LDR      R1,[R0, #+8]
   \   0000005E   0x9808             LDR      R0,[SP, #+32]
   \   00000060   0x.... 0x....      BL       __aeabi_fmul
   \   00000064   0x9010             STR      R0,[SP, #+64]
     59              //
     60              float h_rsqrt = math_rsqrt(mag[0]*mag[0]+mag[1]*mag[1]+mag[2]*mag[2]);
   \   00000066   0x9814             LDR      R0,[SP, #+80]
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x9814             LDR      R0,[SP, #+80]
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x0005             MOVS     R5,R0
   \   00000074   0x9814             LDR      R0,[SP, #+80]
   \   00000076   0x6841             LDR      R1,[R0, #+4]
   \   00000078   0x9814             LDR      R0,[SP, #+80]
   \   0000007A   0x6840             LDR      R0,[R0, #+4]
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x0029             MOVS     R1,R5
   \   00000082   0x.... 0x....      BL       __aeabi_fadd
   \   00000086   0x0005             MOVS     R5,R0
   \   00000088   0x9814             LDR      R0,[SP, #+80]
   \   0000008A   0x6881             LDR      R1,[R0, #+8]
   \   0000008C   0x9814             LDR      R0,[SP, #+80]
   \   0000008E   0x6880             LDR      R0,[R0, #+8]
   \   00000090   0x.... 0x....      BL       __aeabi_fmul
   \   00000094   0x0029             MOVS     R1,R5
   \   00000096   0x.... 0x....      BL       __aeabi_fadd
   \   0000009A   0x.... 0x....      BL       math_rsqrt
   \   0000009E   0x9007             STR      R0,[SP, #+28]
     61              float x_h = mag[0] * h_rsqrt;
   \   000000A0   0x9814             LDR      R0,[SP, #+80]
   \   000000A2   0x6801             LDR      R1,[R0, #+0]
   \   000000A4   0x9807             LDR      R0,[SP, #+28]
   \   000000A6   0x.... 0x....      BL       __aeabi_fmul
   \   000000AA   0x900F             STR      R0,[SP, #+60]
     62              float y_h = mag[1] * h_rsqrt;
   \   000000AC   0x9814             LDR      R0,[SP, #+80]
   \   000000AE   0x6841             LDR      R1,[R0, #+4]
   \   000000B0   0x9807             LDR      R0,[SP, #+28]
   \   000000B2   0x.... 0x....      BL       __aeabi_fmul
   \   000000B6   0x900E             STR      R0,[SP, #+56]
     63              float z_h = mag[2] * h_rsqrt;
   \   000000B8   0x9814             LDR      R0,[SP, #+80]
   \   000000BA   0x6881             LDR      R1,[R0, #+8]
   \   000000BC   0x9807             LDR      R0,[SP, #+28]
   \   000000BE   0x.... 0x....      BL       __aeabi_fmul
   \   000000C2   0x900D             STR      R0,[SP, #+52]
     64              //
     65              float w_q = attitude->w;
   \   000000C4   0x6825             LDR      R5,[R4, #+0]
     66              float x_q = attitude->x;
   \   000000C6   0x6866             LDR      R6,[R4, #+4]
     67              float y_q = attitude->y;
   \   000000C8   0x68A7             LDR      R7,[R4, #+8]
     68              float z_q = attitude->z;
   \   000000CA   0xF8D4 0x800C      LDR      R8,[R4, #+12]
     69              //
     70              float x_q_2 = x_q * 2;
   \   000000CE   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000D2   0x0031             MOVS     R1,R6
   \   000000D4   0x.... 0x....      BL       __aeabi_fmul
   \   000000D8   0x4681             MOV      R9,R0
     71              float y_q_2 = y_q * 2;
   \   000000DA   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000DE   0x0039             MOVS     R1,R7
   \   000000E0   0x.... 0x....      BL       __aeabi_fmul
   \   000000E4   0x4682             MOV      R10,R0
     72              float z_q_2 = z_q * 2;
   \   000000E6   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000EA   0x4641             MOV      R1,R8
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x4683             MOV      R11,R0
     73              //
     74              float x_da = x_q*z_q_2 - w_q*y_q_2     - x_a;
   \   000000F2   0x0030             MOVS     R0,R6
   \   000000F4   0x4659             MOV      R1,R11
   \   000000F6   0x.... 0x....      BL       __aeabi_fmul
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0x0028             MOVS     R0,R5
   \   000000FE   0x4651             MOV      R1,R10
   \   00000100   0x.... 0x....      BL       __aeabi_fmul
   \   00000104   0x0001             MOVS     R1,R0
   \   00000106   0x9800             LDR      R0,[SP, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_fsub
   \   0000010C   0x9912             LDR      R1,[SP, #+72]
   \   0000010E   0x.... 0x....      BL       __aeabi_fsub
   \   00000112   0x9006             STR      R0,[SP, #+24]
     75              float y_da = y_q*z_q_2 + w_q*x_q_2     - y_a;
   \   00000114   0x0038             MOVS     R0,R7
   \   00000116   0x4659             MOV      R1,R11
   \   00000118   0x.... 0x....      BL       __aeabi_fmul
   \   0000011C   0x9000             STR      R0,[SP, #+0]
   \   0000011E   0x0028             MOVS     R0,R5
   \   00000120   0x4649             MOV      R1,R9
   \   00000122   0x.... 0x....      BL       __aeabi_fmul
   \   00000126   0x9900             LDR      R1,[SP, #+0]
   \   00000128   0x.... 0x....      BL       __aeabi_fadd
   \   0000012C   0x9911             LDR      R1,[SP, #+68]
   \   0000012E   0x.... 0x....      BL       __aeabi_fsub
   \   00000132   0x9005             STR      R0,[SP, #+20]
     76              float z_da = 1 - x_q*x_q_2 - y_q*y_q_2 - z_a;
   \   00000134   0x0030             MOVS     R0,R6
   \   00000136   0x4649             MOV      R1,R9
   \   00000138   0x.... 0x....      BL       __aeabi_fmul
   \   0000013C   0x0001             MOVS     R1,R0
   \   0000013E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000142   0x.... 0x....      BL       __aeabi_fsub
   \   00000146   0x9000             STR      R0,[SP, #+0]
   \   00000148   0x0038             MOVS     R0,R7
   \   0000014A   0x4651             MOV      R1,R10
   \   0000014C   0x.... 0x....      BL       __aeabi_fmul
   \   00000150   0x0001             MOVS     R1,R0
   \   00000152   0x9800             LDR      R0,[SP, #+0]
   \   00000154   0x.... 0x....      BL       __aeabi_fsub
   \   00000158   0x9910             LDR      R1,[SP, #+64]
   \   0000015A   0x.... 0x....      BL       __aeabi_fsub
   \   0000015E   0x9009             STR      R0,[SP, #+36]
     77              //
     78              float x_dh = MIX_MAG_Y*(x_q*y_q_2 + w_q*z_q_2)     + MIX_MAG_Z*(x_q*z_q_2 - w_q*y_q_2)     - x_h;
   \   00000160   0x0030             MOVS     R0,R6
   \   00000162   0x4651             MOV      R1,R10
   \   00000164   0x.... 0x....      BL       __aeabi_fmul
   \   00000168   0x9000             STR      R0,[SP, #+0]
   \   0000016A   0x0028             MOVS     R0,R5
   \   0000016C   0x4659             MOV      R1,R11
   \   0000016E   0x.... 0x....      BL       __aeabi_fmul
   \   00000172   0x9900             LDR      R1,[SP, #+0]
   \   00000174   0x.... 0x....      BL       __aeabi_fadd
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable4
   \   0000017C   0x6809             LDR      R1,[R1, #+0]
   \   0000017E   0x.... 0x....      BL       __aeabi_fmul
   \   00000182   0x9001             STR      R0,[SP, #+4]
   \   00000184   0x0030             MOVS     R0,R6
   \   00000186   0x4659             MOV      R1,R11
   \   00000188   0x.... 0x....      BL       __aeabi_fmul
   \   0000018C   0x9000             STR      R0,[SP, #+0]
   \   0000018E   0x0028             MOVS     R0,R5
   \   00000190   0x4651             MOV      R1,R10
   \   00000192   0x.... 0x....      BL       __aeabi_fmul
   \   00000196   0x0001             MOVS     R1,R0
   \   00000198   0x9800             LDR      R0,[SP, #+0]
   \   0000019A   0x.... 0x....      BL       __aeabi_fsub
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   000001A2   0x6809             LDR      R1,[R1, #+0]
   \   000001A4   0x.... 0x....      BL       __aeabi_fmul
   \   000001A8   0x9901             LDR      R1,[SP, #+4]
   \   000001AA   0x.... 0x....      BL       __aeabi_fadd
   \   000001AE   0x990F             LDR      R1,[SP, #+60]
   \   000001B0   0x.... 0x....      BL       __aeabi_fsub
   \   000001B4   0x9004             STR      R0,[SP, #+16]
     79              float y_dh = MIX_MAG_Y*(1 - x_q*x_q_2 - z_q*z_q_2) + MIX_MAG_Z*(y_q*z_q_2 + w_q*x_q_2)     - y_h;
   \   000001B6   0x0030             MOVS     R0,R6
   \   000001B8   0x4649             MOV      R1,R9
   \   000001BA   0x.... 0x....      BL       __aeabi_fmul
   \   000001BE   0x0001             MOVS     R1,R0
   \   000001C0   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000001C4   0x.... 0x....      BL       __aeabi_fsub
   \   000001C8   0x9000             STR      R0,[SP, #+0]
   \   000001CA   0x4640             MOV      R0,R8
   \   000001CC   0x4659             MOV      R1,R11
   \   000001CE   0x.... 0x....      BL       __aeabi_fmul
   \   000001D2   0x0001             MOVS     R1,R0
   \   000001D4   0x9800             LDR      R0,[SP, #+0]
   \   000001D6   0x.... 0x....      BL       __aeabi_fsub
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable4
   \   000001DE   0x6809             LDR      R1,[R1, #+0]
   \   000001E0   0x.... 0x....      BL       __aeabi_fmul
   \   000001E4   0x9001             STR      R0,[SP, #+4]
   \   000001E6   0x0038             MOVS     R0,R7
   \   000001E8   0x4659             MOV      R1,R11
   \   000001EA   0x.... 0x....      BL       __aeabi_fmul
   \   000001EE   0x9000             STR      R0,[SP, #+0]
   \   000001F0   0x0028             MOVS     R0,R5
   \   000001F2   0x4649             MOV      R1,R9
   \   000001F4   0x.... 0x....      BL       __aeabi_fmul
   \   000001F8   0x9900             LDR      R1,[SP, #+0]
   \   000001FA   0x.... 0x....      BL       __aeabi_fadd
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000202   0x6809             LDR      R1,[R1, #+0]
   \   00000204   0x.... 0x....      BL       __aeabi_fmul
   \   00000208   0x9901             LDR      R1,[SP, #+4]
   \   0000020A   0x.... 0x....      BL       __aeabi_fadd
   \   0000020E   0x990E             LDR      R1,[SP, #+56]
   \   00000210   0x.... 0x....      BL       __aeabi_fsub
   \   00000214   0x9003             STR      R0,[SP, #+12]
     80              float z_dh = MIX_MAG_Y*(y_q*z_q_2 - w_q*x_q_2)     + MIX_MAG_Z*(1 - x_q*x_q_2 - y_q*y_q_2) - z_h;
   \   00000216   0x0038             MOVS     R0,R7
   \   00000218   0x4659             MOV      R1,R11
   \   0000021A   0x.... 0x....      BL       __aeabi_fmul
   \   0000021E   0x9000             STR      R0,[SP, #+0]
   \   00000220   0x0028             MOVS     R0,R5
   \   00000222   0x4649             MOV      R1,R9
   \   00000224   0x.... 0x....      BL       __aeabi_fmul
   \   00000228   0x0001             MOVS     R1,R0
   \   0000022A   0x9800             LDR      R0,[SP, #+0]
   \   0000022C   0x.... 0x....      BL       __aeabi_fsub
   \   00000230   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000234   0x6809             LDR      R1,[R1, #+0]
   \   00000236   0x.... 0x....      BL       __aeabi_fmul
   \   0000023A   0x9001             STR      R0,[SP, #+4]
   \   0000023C   0x0030             MOVS     R0,R6
   \   0000023E   0x4649             MOV      R1,R9
   \   00000240   0x.... 0x....      BL       __aeabi_fmul
   \   00000244   0x0001             MOVS     R1,R0
   \   00000246   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000024A   0x.... 0x....      BL       __aeabi_fsub
   \   0000024E   0x9000             STR      R0,[SP, #+0]
   \   00000250   0x0038             MOVS     R0,R7
   \   00000252   0x4651             MOV      R1,R10
   \   00000254   0x.... 0x....      BL       __aeabi_fmul
   \   00000258   0x0001             MOVS     R1,R0
   \   0000025A   0x9800             LDR      R0,[SP, #+0]
   \   0000025C   0x.... 0x....      BL       __aeabi_fsub
   \   00000260   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000264   0x6809             LDR      R1,[R1, #+0]
   \   00000266   0x.... 0x....      BL       __aeabi_fmul
   \   0000026A   0x9901             LDR      R1,[SP, #+4]
   \   0000026C   0x.... 0x....      BL       __aeabi_fadd
   \   00000270   0x990D             LDR      R1,[SP, #+52]
   \   00000272   0x.... 0x....      BL       __aeabi_fsub
   \   00000276   0x9002             STR      R0,[SP, #+8]
     81              //
     82              float w_pf =  - x_da*y_q + y_da*x_q + x_dh*(MIX_MAG_Y*z_q - MIX_MAG_Z*y_q) \
     83                      + y_dh*MIX_MAG_Z*x_q - z_dh*MIX_MAG_Y*x_q;
   \   00000278   0x9806             LDR      R0,[SP, #+24]
   \   0000027A   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000027E   0x0039             MOVS     R1,R7
   \   00000280   0x.... 0x....      BL       __aeabi_fmul
   \   00000284   0x9000             STR      R0,[SP, #+0]
   \   00000286   0x9805             LDR      R0,[SP, #+20]
   \   00000288   0x0031             MOVS     R1,R6
   \   0000028A   0x.... 0x....      BL       __aeabi_fmul
   \   0000028E   0x9900             LDR      R1,[SP, #+0]
   \   00000290   0x.... 0x....      BL       __aeabi_fadd
   \   00000294   0x9001             STR      R0,[SP, #+4]
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000029A   0x6800             LDR      R0,[R0, #+0]
   \   0000029C   0x4641             MOV      R1,R8
   \   0000029E   0x.... 0x....      BL       __aeabi_fmul
   \   000002A2   0x9000             STR      R0,[SP, #+0]
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000002A8   0x6800             LDR      R0,[R0, #+0]
   \   000002AA   0x0039             MOVS     R1,R7
   \   000002AC   0x.... 0x....      BL       __aeabi_fmul
   \   000002B0   0x0001             MOVS     R1,R0
   \   000002B2   0x9800             LDR      R0,[SP, #+0]
   \   000002B4   0x.... 0x....      BL       __aeabi_fsub
   \   000002B8   0x9904             LDR      R1,[SP, #+16]
   \   000002BA   0x.... 0x....      BL       __aeabi_fmul
   \   000002BE   0x9901             LDR      R1,[SP, #+4]
   \   000002C0   0x.... 0x....      BL       __aeabi_fadd
   \   000002C4   0x9000             STR      R0,[SP, #+0]
   \   000002C6   0x9903             LDR      R1,[SP, #+12]
   \   000002C8   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000002CC   0x6800             LDR      R0,[R0, #+0]
   \   000002CE   0x.... 0x....      BL       __aeabi_fmul
   \   000002D2   0x0031             MOVS     R1,R6
   \   000002D4   0x.... 0x....      BL       __aeabi_fmul
   \   000002D8   0x9900             LDR      R1,[SP, #+0]
   \   000002DA   0x.... 0x....      BL       __aeabi_fadd
   \   000002DE   0x9000             STR      R0,[SP, #+0]
   \   000002E0   0x9902             LDR      R1,[SP, #+8]
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable4
   \   000002E6   0x6800             LDR      R0,[R0, #+0]
   \   000002E8   0x.... 0x....      BL       __aeabi_fmul
   \   000002EC   0x0031             MOVS     R1,R6
   \   000002EE   0x.... 0x....      BL       __aeabi_fmul
   \   000002F2   0x0001             MOVS     R1,R0
   \   000002F4   0x9800             LDR      R0,[SP, #+0]
   \   000002F6   0x.... 0x....      BL       __aeabi_fsub
   \   000002FA   0x900C             STR      R0,[SP, #+48]
     84              float x_pf = x_da*z_q + y_da*w_q - z_da*x_q + x_dh*(MIX_MAG_Y*y_q + MIX_MAG_Z*z_q) \
     85                      + y_dh*(MIX_MAG_Z*w_q - MIX_MAG_Y*x_q) - z_dh*(MIX_MAG_Y*w_q + MIX_MAG_Z*x_q);
   \   000002FC   0x9806             LDR      R0,[SP, #+24]
   \   000002FE   0x4641             MOV      R1,R8
   \   00000300   0x.... 0x....      BL       __aeabi_fmul
   \   00000304   0x9000             STR      R0,[SP, #+0]
   \   00000306   0x9805             LDR      R0,[SP, #+20]
   \   00000308   0x0029             MOVS     R1,R5
   \   0000030A   0x.... 0x....      BL       __aeabi_fmul
   \   0000030E   0x9900             LDR      R1,[SP, #+0]
   \   00000310   0x.... 0x....      BL       __aeabi_fadd
   \   00000314   0x9000             STR      R0,[SP, #+0]
   \   00000316   0x9809             LDR      R0,[SP, #+36]
   \   00000318   0x0031             MOVS     R1,R6
   \   0000031A   0x.... 0x....      BL       __aeabi_fmul
   \   0000031E   0x0001             MOVS     R1,R0
   \   00000320   0x9800             LDR      R0,[SP, #+0]
   \   00000322   0x.... 0x....      BL       __aeabi_fsub
   \   00000326   0x9001             STR      R0,[SP, #+4]
   \   00000328   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000032C   0x6800             LDR      R0,[R0, #+0]
   \   0000032E   0x0039             MOVS     R1,R7
   \   00000330   0x.... 0x....      BL       __aeabi_fmul
   \   00000334   0x9000             STR      R0,[SP, #+0]
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000033A   0x6800             LDR      R0,[R0, #+0]
   \   0000033C   0x4641             MOV      R1,R8
   \   0000033E   0x.... 0x....      BL       __aeabi_fmul
   \   00000342   0x9900             LDR      R1,[SP, #+0]
   \   00000344   0x.... 0x....      BL       __aeabi_fadd
   \   00000348   0x9904             LDR      R1,[SP, #+16]
   \   0000034A   0x.... 0x....      BL       __aeabi_fmul
   \   0000034E   0x9901             LDR      R1,[SP, #+4]
   \   00000350   0x.... 0x....      BL       __aeabi_fadd
   \   00000354   0x9001             STR      R0,[SP, #+4]
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000035A   0x6800             LDR      R0,[R0, #+0]
   \   0000035C   0x0029             MOVS     R1,R5
   \   0000035E   0x.... 0x....      BL       __aeabi_fmul
   \   00000362   0x9000             STR      R0,[SP, #+0]
   \   00000364   0x.... 0x....      LDR.W    R0,??DataTable4
   \   00000368   0x6800             LDR      R0,[R0, #+0]
   \   0000036A   0x0031             MOVS     R1,R6
   \   0000036C   0x.... 0x....      BL       __aeabi_fmul
   \   00000370   0x0001             MOVS     R1,R0
   \   00000372   0x9800             LDR      R0,[SP, #+0]
   \   00000374   0x.... 0x....      BL       __aeabi_fsub
   \   00000378   0x9903             LDR      R1,[SP, #+12]
   \   0000037A   0x.... 0x....      BL       __aeabi_fmul
   \   0000037E   0x9901             LDR      R1,[SP, #+4]
   \   00000380   0x.... 0x....      BL       __aeabi_fadd
   \   00000384   0x9001             STR      R0,[SP, #+4]
   \   00000386   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000038A   0x6800             LDR      R0,[R0, #+0]
   \   0000038C   0x0029             MOVS     R1,R5
   \   0000038E   0x.... 0x....      BL       __aeabi_fmul
   \   00000392   0x9000             STR      R0,[SP, #+0]
   \   00000394   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000398   0x6800             LDR      R0,[R0, #+0]
   \   0000039A   0x0031             MOVS     R1,R6
   \   0000039C   0x.... 0x....      BL       __aeabi_fmul
   \   000003A0   0x9900             LDR      R1,[SP, #+0]
   \   000003A2   0x.... 0x....      BL       __aeabi_fadd
   \   000003A6   0x9902             LDR      R1,[SP, #+8]
   \   000003A8   0x.... 0x....      BL       __aeabi_fmul
   \   000003AC   0x0001             MOVS     R1,R0
   \   000003AE   0x9801             LDR      R0,[SP, #+4]
   \   000003B0   0x.... 0x....      BL       __aeabi_fsub
   \   000003B4   0x900B             STR      R0,[SP, #+44]
     86              float y_pf = - x_da*w_q + y_da*z_q - z_da*y_q + x_dh*(MIX_MAG_Y*x_q - MIX_MAG_Z*w_q) \
     87                      + y_dh*MIX_MAG_Z*z_q + z_dh*(MIX_MAG_Y*z_q - MIX_MAG_Z*y_q);
   \   000003B6   0x9806             LDR      R0,[SP, #+24]
   \   000003B8   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000003BC   0x0029             MOVS     R1,R5
   \   000003BE   0x.... 0x....      BL       __aeabi_fmul
   \   000003C2   0x9000             STR      R0,[SP, #+0]
   \   000003C4   0x9805             LDR      R0,[SP, #+20]
   \   000003C6   0x4641             MOV      R1,R8
   \   000003C8   0x.... 0x....      BL       __aeabi_fmul
   \   000003CC   0x9900             LDR      R1,[SP, #+0]
   \   000003CE   0x.... 0x....      BL       __aeabi_fadd
   \   000003D2   0x9000             STR      R0,[SP, #+0]
   \   000003D4   0x9809             LDR      R0,[SP, #+36]
   \   000003D6   0x0039             MOVS     R1,R7
   \   000003D8   0x.... 0x....      BL       __aeabi_fmul
   \   000003DC   0x0001             MOVS     R1,R0
   \   000003DE   0x9800             LDR      R0,[SP, #+0]
   \   000003E0   0x.... 0x....      BL       __aeabi_fsub
   \   000003E4   0x9001             STR      R0,[SP, #+4]
   \   000003E6   0x.... 0x....      LDR.W    R0,??DataTable4
   \   000003EA   0x6800             LDR      R0,[R0, #+0]
   \   000003EC   0x0031             MOVS     R1,R6
   \   000003EE   0x.... 0x....      BL       __aeabi_fmul
   \   000003F2   0x9000             STR      R0,[SP, #+0]
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000003F8   0x6800             LDR      R0,[R0, #+0]
   \   000003FA   0x0029             MOVS     R1,R5
   \   000003FC   0x.... 0x....      BL       __aeabi_fmul
   \   00000400   0x0001             MOVS     R1,R0
   \   00000402   0x9800             LDR      R0,[SP, #+0]
   \   00000404   0x.... 0x....      BL       __aeabi_fsub
   \   00000408   0x9904             LDR      R1,[SP, #+16]
   \   0000040A   0x.... 0x....      BL       __aeabi_fmul
   \   0000040E   0x9901             LDR      R1,[SP, #+4]
   \   00000410   0x.... 0x....      BL       __aeabi_fadd
   \   00000414   0x9000             STR      R0,[SP, #+0]
   \   00000416   0x9903             LDR      R1,[SP, #+12]
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000041C   0x6800             LDR      R0,[R0, #+0]
   \   0000041E   0x.... 0x....      BL       __aeabi_fmul
   \   00000422   0x4641             MOV      R1,R8
   \   00000424   0x.... 0x....      BL       __aeabi_fmul
   \   00000428   0x9900             LDR      R1,[SP, #+0]
   \   0000042A   0x.... 0x....      BL       __aeabi_fadd
   \   0000042E   0x9001             STR      R0,[SP, #+4]
   \   00000430   0x.... 0x....      LDR.W    R0,??DataTable4
   \   00000434   0x6800             LDR      R0,[R0, #+0]
   \   00000436   0x4641             MOV      R1,R8
   \   00000438   0x.... 0x....      BL       __aeabi_fmul
   \   0000043C   0x9000             STR      R0,[SP, #+0]
   \   0000043E   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000442   0x6800             LDR      R0,[R0, #+0]
   \   00000444   0x0039             MOVS     R1,R7
   \   00000446   0x.... 0x....      BL       __aeabi_fmul
   \   0000044A   0x0001             MOVS     R1,R0
   \   0000044C   0x9800             LDR      R0,[SP, #+0]
   \   0000044E   0x.... 0x....      BL       __aeabi_fsub
   \   00000452   0x9902             LDR      R1,[SP, #+8]
   \   00000454   0x.... 0x....      BL       __aeabi_fmul
   \   00000458   0x9901             LDR      R1,[SP, #+4]
   \   0000045A   0x.... 0x....      BL       __aeabi_fadd
   \   0000045E   0x900A             STR      R0,[SP, #+40]
     88              float z_pf = x_da*x_q + y_da*y_q + x_dh*(MIX_MAG_Y*w_q + MIX_MAG_Z*x_q) \
     89                      + y_dh *(MIX_MAG_Z*y_q - MIX_MAG_Y*z_q) + z_dh*MIX_MAG_Y*y_q;
   \   00000460   0x9806             LDR      R0,[SP, #+24]
   \   00000462   0x0031             MOVS     R1,R6
   \   00000464   0x.... 0x....      BL       __aeabi_fmul
   \   00000468   0x9000             STR      R0,[SP, #+0]
   \   0000046A   0x9805             LDR      R0,[SP, #+20]
   \   0000046C   0x0039             MOVS     R1,R7
   \   0000046E   0x.... 0x....      BL       __aeabi_fmul
   \   00000472   0x9900             LDR      R1,[SP, #+0]
   \   00000474   0x.... 0x....      BL       __aeabi_fadd
   \   00000478   0x9001             STR      R0,[SP, #+4]
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000047E   0x6800             LDR      R0,[R0, #+0]
   \   00000480   0x0029             MOVS     R1,R5
   \   00000482   0x.... 0x....      BL       __aeabi_fmul
   \   00000486   0x9000             STR      R0,[SP, #+0]
   \   00000488   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000048C   0x6800             LDR      R0,[R0, #+0]
   \   0000048E   0x0031             MOVS     R1,R6
   \   00000490   0x.... 0x....      BL       __aeabi_fmul
   \   00000494   0x9900             LDR      R1,[SP, #+0]
   \   00000496   0x.... 0x....      BL       __aeabi_fadd
   \   0000049A   0x9904             LDR      R1,[SP, #+16]
   \   0000049C   0x.... 0x....      BL       __aeabi_fmul
   \   000004A0   0x9901             LDR      R1,[SP, #+4]
   \   000004A2   0x.... 0x....      BL       __aeabi_fadd
   \   000004A6   0x9001             STR      R0,[SP, #+4]
   \   000004A8   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000004AC   0x6800             LDR      R0,[R0, #+0]
   \   000004AE   0x0039             MOVS     R1,R7
   \   000004B0   0x.... 0x....      BL       __aeabi_fmul
   \   000004B4   0x9000             STR      R0,[SP, #+0]
   \   000004B6   0x.... 0x....      LDR.W    R0,??DataTable4
   \   000004BA   0x6800             LDR      R0,[R0, #+0]
   \   000004BC   0x4641             MOV      R1,R8
   \   000004BE   0x.... 0x....      BL       __aeabi_fmul
   \   000004C2   0x0001             MOVS     R1,R0
   \   000004C4   0x9800             LDR      R0,[SP, #+0]
   \   000004C6   0x.... 0x....      BL       __aeabi_fsub
   \   000004CA   0x9903             LDR      R1,[SP, #+12]
   \   000004CC   0x.... 0x....      BL       __aeabi_fmul
   \   000004D0   0x9901             LDR      R1,[SP, #+4]
   \   000004D2   0x.... 0x....      BL       __aeabi_fadd
   \   000004D6   0x9000             STR      R0,[SP, #+0]
   \   000004D8   0x9902             LDR      R1,[SP, #+8]
   \   000004DA   0x.... 0x....      LDR.W    R0,??DataTable4
   \   000004DE   0x6800             LDR      R0,[R0, #+0]
   \   000004E0   0x.... 0x....      BL       __aeabi_fmul
   \   000004E4   0x0039             MOVS     R1,R7
   \   000004E6   0x.... 0x....      BL       __aeabi_fmul
   \   000004EA   0x9900             LDR      R1,[SP, #+0]
   \   000004EC   0x.... 0x....      BL       __aeabi_fadd
   \   000004F0   0x9000             STR      R0,[SP, #+0]
     90              //
     91              attitude->w -= w_pf * MIX_LONGTREM_FACTOR;
   \   000004F2   0x990C             LDR      R1,[SP, #+48]
   \   000004F4   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000004F8   0x6800             LDR      R0,[R0, #+0]
   \   000004FA   0x.... 0x....      BL       __aeabi_fmul
   \   000004FE   0x0001             MOVS     R1,R0
   \   00000500   0x6820             LDR      R0,[R4, #+0]
   \   00000502   0x.... 0x....      BL       __aeabi_fsub
   \   00000506   0x6020             STR      R0,[R4, #+0]
     92              attitude->x -= x_pf * MIX_LONGTREM_FACTOR;
   \   00000508   0x990B             LDR      R1,[SP, #+44]
   \   0000050A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000050E   0x6800             LDR      R0,[R0, #+0]
   \   00000510   0x.... 0x....      BL       __aeabi_fmul
   \   00000514   0x0001             MOVS     R1,R0
   \   00000516   0x6860             LDR      R0,[R4, #+4]
   \   00000518   0x.... 0x....      BL       __aeabi_fsub
   \   0000051C   0x6060             STR      R0,[R4, #+4]
     93              attitude->y -= y_pf * MIX_LONGTREM_FACTOR;
   \   0000051E   0x990A             LDR      R1,[SP, #+40]
   \   00000520   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000524   0x6800             LDR      R0,[R0, #+0]
   \   00000526   0x.... 0x....      BL       __aeabi_fmul
   \   0000052A   0x0001             MOVS     R1,R0
   \   0000052C   0x68A0             LDR      R0,[R4, #+8]
   \   0000052E   0x.... 0x....      BL       __aeabi_fsub
   \   00000532   0x60A0             STR      R0,[R4, #+8]
     94              attitude->z -= z_pf * MIX_LONGTREM_FACTOR;
   \   00000534   0x9900             LDR      R1,[SP, #+0]
   \   00000536   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000053A   0x6800             LDR      R0,[R0, #+0]
   \   0000053C   0x.... 0x....      BL       __aeabi_fmul
   \   00000540   0x0001             MOVS     R1,R0
   \   00000542   0x68E0             LDR      R0,[R4, #+12]
   \   00000544   0x.... 0x....      BL       __aeabi_fsub
   \   00000548   0x60E0             STR      R0,[R4, #+12]
     95              quaternion_normalize(attitude);    
   \   0000054A   0x0020             MOVS     R0,R4
   \   0000054C   0x.... 0x....      BL       quaternion_normalize
     96          }
   \   00000550   0xB015             ADD      SP,SP,#+84
   \   00000552   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
     97          

   \                                 In section .text, align 2, keep-with-next
     98          void FuseAccMagRotateMethod(quaternion * attitude, float acc[3], float mag[3])
     99          {
   \                     FuseAccMagRotateMethod:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    100              quaternion_fromFourVectorRotation(attitude,acc,MIX_ACC_VECTOR,mag,MIX_MAG_VECTOR);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x0033             MOVS     R3,R6
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable5_2
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       quaternion_fromFourVectorRotation
    101              //
    102              //quaternion_fromTwoVectorRotation(attitude,acc,MIX_ACC_VECTOR);
    103              //quaternion_fromTwoVectorRotation(attitude,mag,MIX_MAG_VECTOR);    
    104          }
   \   0000001E   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    105          

   \                                 In section .text, align 2, keep-with-next
    106          void FuseAccSteepestDescentMethod(quaternion * attitude, float acc[3])
    107          {
   \                     FuseAccSteepestDescentMethod:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB08D             SUB      SP,SP,#+52
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    108              //
    109              // 单位化加速度和磁场方向。
    110              float a_rsqrt = math_rsqrt(acc[0]*acc[0]+acc[1]*acc[1]+acc[2]*acc[2]);
   \   0000000A   0x6829             LDR      R1,[R5, #+0]
   \   0000000C   0x6828             LDR      R0,[R5, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fmul
   \   00000012   0x0006             MOVS     R6,R0
   \   00000014   0x6869             LDR      R1,[R5, #+4]
   \   00000016   0x6868             LDR      R0,[R5, #+4]
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x0031             MOVS     R1,R6
   \   0000001E   0x.... 0x....      BL       __aeabi_fadd
   \   00000022   0x0006             MOVS     R6,R0
   \   00000024   0x68A9             LDR      R1,[R5, #+8]
   \   00000026   0x68A8             LDR      R0,[R5, #+8]
   \   00000028   0x.... 0x....      BL       __aeabi_fmul
   \   0000002C   0x0031             MOVS     R1,R6
   \   0000002E   0x.... 0x....      BL       __aeabi_fadd
   \   00000032   0x.... 0x....      BL       math_rsqrt
   \   00000036   0x0006             MOVS     R6,R0
    111              float x_a = acc[0] * a_rsqrt;
   \   00000038   0x6828             LDR      R0,[R5, #+0]
   \   0000003A   0x0031             MOVS     R1,R6
   \   0000003C   0x.... 0x....      BL       __aeabi_fmul
   \   00000040   0x900C             STR      R0,[SP, #+48]
    112              float y_a = acc[1] * a_rsqrt;
   \   00000042   0x6868             LDR      R0,[R5, #+4]
   \   00000044   0x0031             MOVS     R1,R6
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x900B             STR      R0,[SP, #+44]
    113              float z_a = acc[2] * a_rsqrt;
   \   0000004C   0x68A8             LDR      R0,[R5, #+8]
   \   0000004E   0x0031             MOVS     R1,R6
   \   00000050   0x.... 0x....      BL       __aeabi_fmul
   \   00000054   0x900A             STR      R0,[SP, #+40]
    114              //
    115              float w_q = attitude->w;
   \   00000056   0x6820             LDR      R0,[R4, #+0]
   \   00000058   0x9003             STR      R0,[SP, #+12]
    116              float x_q = attitude->x;
   \   0000005A   0x6860             LDR      R0,[R4, #+4]
   \   0000005C   0x9002             STR      R0,[SP, #+8]
    117              float y_q = attitude->y;
   \   0000005E   0x68A0             LDR      R0,[R4, #+8]
   \   00000060   0x9001             STR      R0,[SP, #+4]
    118              float z_q = attitude->z;
   \   00000062   0x68E0             LDR      R0,[R4, #+12]
   \   00000064   0x9004             STR      R0,[SP, #+16]
    119              //
    120              float x_q_2 = x_q * 2;
   \   00000066   0x9902             LDR      R1,[SP, #+8]
   \   00000068   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000006C   0x.... 0x....      BL       __aeabi_fmul
   \   00000070   0x9005             STR      R0,[SP, #+20]
    121              float y_q_2 = y_q * 2;
   \   00000072   0x9901             LDR      R1,[SP, #+4]
   \   00000074   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000078   0x.... 0x....      BL       __aeabi_fmul
   \   0000007C   0x0007             MOVS     R7,R0
    122              float z_q_2 = z_q * 2;
   \   0000007E   0x9904             LDR      R1,[SP, #+16]
   \   00000080   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000084   0x.... 0x....      BL       __aeabi_fmul
   \   00000088   0x4680             MOV      R8,R0
    123              //
    124              float x_da = x_q*z_q_2 - w_q*y_q_2     - x_a;
   \   0000008A   0x9802             LDR      R0,[SP, #+8]
   \   0000008C   0x4641             MOV      R1,R8
   \   0000008E   0x.... 0x....      BL       __aeabi_fmul
   \   00000092   0x4681             MOV      R9,R0
   \   00000094   0x9803             LDR      R0,[SP, #+12]
   \   00000096   0x0039             MOVS     R1,R7
   \   00000098   0x.... 0x....      BL       __aeabi_fmul
   \   0000009C   0x0001             MOVS     R1,R0
   \   0000009E   0x4648             MOV      R0,R9
   \   000000A0   0x.... 0x....      BL       __aeabi_fsub
   \   000000A4   0x990C             LDR      R1,[SP, #+48]
   \   000000A6   0x.... 0x....      BL       __aeabi_fsub
   \   000000AA   0x4681             MOV      R9,R0
    125              float y_da = y_q*z_q_2 + w_q*x_q_2     - y_a;
   \   000000AC   0x9801             LDR      R0,[SP, #+4]
   \   000000AE   0x4641             MOV      R1,R8
   \   000000B0   0x.... 0x....      BL       __aeabi_fmul
   \   000000B4   0x4682             MOV      R10,R0
   \   000000B6   0x9903             LDR      R1,[SP, #+12]
   \   000000B8   0x9805             LDR      R0,[SP, #+20]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x4651             MOV      R1,R10
   \   000000C0   0x.... 0x....      BL       __aeabi_fadd
   \   000000C4   0x990B             LDR      R1,[SP, #+44]
   \   000000C6   0x.... 0x....      BL       __aeabi_fsub
   \   000000CA   0x4682             MOV      R10,R0
    126              float z_da = 1 - x_q*x_q_2 - y_q*y_q_2 - z_a;
   \   000000CC   0x9902             LDR      R1,[SP, #+8]
   \   000000CE   0x9805             LDR      R0,[SP, #+20]
   \   000000D0   0x.... 0x....      BL       __aeabi_fmul
   \   000000D4   0x0001             MOVS     R1,R0
   \   000000D6   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000DA   0x.... 0x....      BL       __aeabi_fsub
   \   000000DE   0x4683             MOV      R11,R0
   \   000000E0   0x9801             LDR      R0,[SP, #+4]
   \   000000E2   0x0039             MOVS     R1,R7
   \   000000E4   0x.... 0x....      BL       __aeabi_fmul
   \   000000E8   0x0001             MOVS     R1,R0
   \   000000EA   0x4658             MOV      R0,R11
   \   000000EC   0x.... 0x....      BL       __aeabi_fsub
   \   000000F0   0x990A             LDR      R1,[SP, #+40]
   \   000000F2   0x.... 0x....      BL       __aeabi_fsub
   \   000000F6   0x4683             MOV      R11,R0
    127              //
    128              float w_pf =  - x_da*y_q + y_da*x_q;
   \   000000F8   0x4649             MOV      R1,R9
   \   000000FA   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000FE   0x9801             LDR      R0,[SP, #+4]
   \   00000100   0x.... 0x....      BL       __aeabi_fmul
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x9802             LDR      R0,[SP, #+8]
   \   00000108   0x4651             MOV      R1,R10
   \   0000010A   0x.... 0x....      BL       __aeabi_fmul
   \   0000010E   0x9900             LDR      R1,[SP, #+0]
   \   00000110   0x.... 0x....      BL       __aeabi_fadd
   \   00000114   0x9009             STR      R0,[SP, #+36]
    129              float x_pf = x_da*z_q + y_da*w_q - z_da*x_q;
   \   00000116   0x9804             LDR      R0,[SP, #+16]
   \   00000118   0x4649             MOV      R1,R9
   \   0000011A   0x.... 0x....      BL       __aeabi_fmul
   \   0000011E   0x9000             STR      R0,[SP, #+0]
   \   00000120   0x9803             LDR      R0,[SP, #+12]
   \   00000122   0x4651             MOV      R1,R10
   \   00000124   0x.... 0x....      BL       __aeabi_fmul
   \   00000128   0x9900             LDR      R1,[SP, #+0]
   \   0000012A   0x.... 0x....      BL       __aeabi_fadd
   \   0000012E   0x9000             STR      R0,[SP, #+0]
   \   00000130   0x9802             LDR      R0,[SP, #+8]
   \   00000132   0x4659             MOV      R1,R11
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x0001             MOVS     R1,R0
   \   0000013A   0x9800             LDR      R0,[SP, #+0]
   \   0000013C   0x.... 0x....      BL       __aeabi_fsub
   \   00000140   0x9008             STR      R0,[SP, #+32]
    130              float y_pf = - x_da*w_q + y_da*z_q - z_da*y_q;
   \   00000142   0x4649             MOV      R1,R9
   \   00000144   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000148   0x9803             LDR      R0,[SP, #+12]
   \   0000014A   0x.... 0x....      BL       __aeabi_fmul
   \   0000014E   0x9000             STR      R0,[SP, #+0]
   \   00000150   0x9804             LDR      R0,[SP, #+16]
   \   00000152   0x4651             MOV      R1,R10
   \   00000154   0x.... 0x....      BL       __aeabi_fmul
   \   00000158   0x9900             LDR      R1,[SP, #+0]
   \   0000015A   0x.... 0x....      BL       __aeabi_fadd
   \   0000015E   0x9000             STR      R0,[SP, #+0]
   \   00000160   0x9801             LDR      R0,[SP, #+4]
   \   00000162   0x4659             MOV      R1,R11
   \   00000164   0x.... 0x....      BL       __aeabi_fmul
   \   00000168   0x0001             MOVS     R1,R0
   \   0000016A   0x9800             LDR      R0,[SP, #+0]
   \   0000016C   0x.... 0x....      BL       __aeabi_fsub
   \   00000170   0x9007             STR      R0,[SP, #+28]
    131              float z_pf = x_da*x_q + y_da*y_q;
   \   00000172   0x9802             LDR      R0,[SP, #+8]
   \   00000174   0x4649             MOV      R1,R9
   \   00000176   0x.... 0x....      BL       __aeabi_fmul
   \   0000017A   0x9000             STR      R0,[SP, #+0]
   \   0000017C   0x9801             LDR      R0,[SP, #+4]
   \   0000017E   0x4651             MOV      R1,R10
   \   00000180   0x.... 0x....      BL       __aeabi_fmul
   \   00000184   0x9900             LDR      R1,[SP, #+0]
   \   00000186   0x.... 0x....      BL       __aeabi_fadd
   \   0000018A   0x9006             STR      R0,[SP, #+24]
    132              //
    133              const float factor = 0.005;
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable5_3  ;; 0x3ba3d70a
   \   00000190   0x9000             STR      R0,[SP, #+0]
    134              attitude->w -= w_pf * factor;
   \   00000192   0x9909             LDR      R1,[SP, #+36]
   \   00000194   0x9800             LDR      R0,[SP, #+0]
   \   00000196   0x.... 0x....      BL       __aeabi_fmul
   \   0000019A   0x0001             MOVS     R1,R0
   \   0000019C   0x6820             LDR      R0,[R4, #+0]
   \   0000019E   0x.... 0x....      BL       __aeabi_fsub
   \   000001A2   0x6020             STR      R0,[R4, #+0]
    135              attitude->x -= x_pf * factor;
   \   000001A4   0x9908             LDR      R1,[SP, #+32]
   \   000001A6   0x9800             LDR      R0,[SP, #+0]
   \   000001A8   0x.... 0x....      BL       __aeabi_fmul
   \   000001AC   0x0001             MOVS     R1,R0
   \   000001AE   0x6860             LDR      R0,[R4, #+4]
   \   000001B0   0x.... 0x....      BL       __aeabi_fsub
   \   000001B4   0x6060             STR      R0,[R4, #+4]
    136              attitude->y -= y_pf * factor;
   \   000001B6   0x9907             LDR      R1,[SP, #+28]
   \   000001B8   0x9800             LDR      R0,[SP, #+0]
   \   000001BA   0x.... 0x....      BL       __aeabi_fmul
   \   000001BE   0x0001             MOVS     R1,R0
   \   000001C0   0x68A0             LDR      R0,[R4, #+8]
   \   000001C2   0x.... 0x....      BL       __aeabi_fsub
   \   000001C6   0x60A0             STR      R0,[R4, #+8]
    137              attitude->z -= z_pf * factor;
   \   000001C8   0x9906             LDR      R1,[SP, #+24]
   \   000001CA   0x9800             LDR      R0,[SP, #+0]
   \   000001CC   0x.... 0x....      BL       __aeabi_fmul
   \   000001D0   0x0001             MOVS     R1,R0
   \   000001D2   0x68E0             LDR      R0,[R4, #+12]
   \   000001D4   0x.... 0x....      BL       __aeabi_fsub
   \   000001D8   0x60E0             STR      R0,[R4, #+12]
    138              quaternion_normalize(attitude);    
   \   000001DA   0x0020             MOVS     R0,R4
   \   000001DC   0x.... 0x....      BL       quaternion_normalize
    139          }
   \   000001E0   0xB00D             ADD      SP,SP,#+52
   \   000001E2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    140          

   \                                 In section .text, align 2, keep-with-next
    141          void FuseGyrAccCrossMethod(quaternion * attitude, float gyr[3], float acc[3], float interval)
    142          {
   \                     FuseGyrAccCrossMethod:
   \   00000000   0xE92D 0x4FFA      PUSH     {R1,R3-R11,LR}
   \   00000004   0xB091             SUB      SP,SP,#+68
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x0015             MOVS     R5,R2
    143              float FACTOR = 0.001;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable5_4  ;; 0x3a83126f
   \   0000000E   0x9003             STR      R0,[SP, #+12]
    144          
    145              float w_q = attitude->w;
   \   00000010   0x6820             LDR      R0,[R4, #+0]
   \   00000012   0x9001             STR      R0,[SP, #+4]
    146              float x_q = attitude->x;
   \   00000014   0x6866             LDR      R6,[R4, #+4]
    147              float y_q = attitude->y;
   \   00000016   0x68A7             LDR      R7,[R4, #+8]
    148              float z_q = attitude->z;
   \   00000018   0x68E0             LDR      R0,[R4, #+12]
   \   0000001A   0x9002             STR      R0,[SP, #+8]
    149              float x_q_2 = x_q * 2;
   \   0000001C   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000020   0x0031             MOVS     R1,R6
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x900C             STR      R0,[SP, #+48]
    150              float y_q_2 = y_q * 2;
   \   00000028   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000002C   0x0039             MOVS     R1,R7
   \   0000002E   0x.... 0x....      BL       __aeabi_fmul
   \   00000032   0x900B             STR      R0,[SP, #+44]
    151              float z_q_2 = z_q * 2;
   \   00000034   0x9902             LDR      R1,[SP, #+8]
   \   00000036   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000003A   0x.... 0x....      BL       __aeabi_fmul
   \   0000003E   0x900A             STR      R0,[SP, #+40]
    152              //
    153              // 加速度计的读数，单位化。@加速度测量值,地球表面三轴向量和即为重力加速度
    154              float a_rsqrt = math_rsqrt(acc[0]*acc[0]+acc[1]*acc[1]+acc[2]*acc[2]);
   \   00000040   0x6829             LDR      R1,[R5, #+0]
   \   00000042   0x6828             LDR      R0,[R5, #+0]
   \   00000044   0x.... 0x....      BL       __aeabi_fmul
   \   00000048   0x4680             MOV      R8,R0
   \   0000004A   0x6869             LDR      R1,[R5, #+4]
   \   0000004C   0x6868             LDR      R0,[R5, #+4]
   \   0000004E   0x.... 0x....      BL       __aeabi_fmul
   \   00000052   0x4641             MOV      R1,R8
   \   00000054   0x.... 0x....      BL       __aeabi_fadd
   \   00000058   0x4680             MOV      R8,R0
   \   0000005A   0x68A9             LDR      R1,[R5, #+8]
   \   0000005C   0x68A8             LDR      R0,[R5, #+8]
   \   0000005E   0x.... 0x....      BL       __aeabi_fmul
   \   00000062   0x4641             MOV      R1,R8
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0x.... 0x....      BL       math_rsqrt
   \   0000006C   0x4680             MOV      R8,R0
    155              float x_aa = acc[0] * a_rsqrt;
   \   0000006E   0x6828             LDR      R0,[R5, #+0]
   \   00000070   0x4641             MOV      R1,R8
   \   00000072   0x.... 0x....      BL       __aeabi_fmul
   \   00000076   0x9009             STR      R0,[SP, #+36]
    156              float y_aa = acc[1] * a_rsqrt;
   \   00000078   0x6868             LDR      R0,[R5, #+4]
   \   0000007A   0x4641             MOV      R1,R8
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x9008             STR      R0,[SP, #+32]
    157              float z_aa = acc[2] * a_rsqrt;
   \   00000082   0x68A8             LDR      R0,[R5, #+8]
   \   00000084   0x4641             MOV      R1,R8
   \   00000086   0x.... 0x....      BL       __aeabi_fmul
   \   0000008A   0x9007             STR      R0,[SP, #+28]
    158              //
    159              // 载体坐标下的重力加速度常量，单位化。@姿态矩阵最后一行
    160              float x_ac = x_q*z_q_2 - w_q*y_q_2;
   \   0000008C   0x980A             LDR      R0,[SP, #+40]
   \   0000008E   0x0031             MOVS     R1,R6
   \   00000090   0x.... 0x....      BL       __aeabi_fmul
   \   00000094   0x4681             MOV      R9,R0
   \   00000096   0x9901             LDR      R1,[SP, #+4]
   \   00000098   0x980B             LDR      R0,[SP, #+44]
   \   0000009A   0x.... 0x....      BL       __aeabi_fmul
   \   0000009E   0x0001             MOVS     R1,R0
   \   000000A0   0x4648             MOV      R0,R9
   \   000000A2   0x.... 0x....      BL       __aeabi_fsub
   \   000000A6   0x9006             STR      R0,[SP, #+24]
    161              float y_ac = y_q*z_q_2 + w_q*x_q_2;
   \   000000A8   0x980A             LDR      R0,[SP, #+40]
   \   000000AA   0x0039             MOVS     R1,R7
   \   000000AC   0x.... 0x....      BL       __aeabi_fmul
   \   000000B0   0x4681             MOV      R9,R0
   \   000000B2   0x9901             LDR      R1,[SP, #+4]
   \   000000B4   0x980C             LDR      R0,[SP, #+48]
   \   000000B6   0x.... 0x....      BL       __aeabi_fmul
   \   000000BA   0x4649             MOV      R1,R9
   \   000000BC   0x.... 0x....      BL       __aeabi_fadd
   \   000000C0   0x9005             STR      R0,[SP, #+20]
    162              float z_ac = 1 - x_q*x_q_2 - y_q*y_q_2;
   \   000000C2   0x980C             LDR      R0,[SP, #+48]
   \   000000C4   0x0031             MOVS     R1,R6
   \   000000C6   0x.... 0x....      BL       __aeabi_fmul
   \   000000CA   0x0001             MOVS     R1,R0
   \   000000CC   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000D0   0x.... 0x....      BL       __aeabi_fsub
   \   000000D4   0x4681             MOV      R9,R0
   \   000000D6   0x980B             LDR      R0,[SP, #+44]
   \   000000D8   0x0039             MOVS     R1,R7
   \   000000DA   0x.... 0x....      BL       __aeabi_fmul
   \   000000DE   0x0001             MOVS     R1,R0
   \   000000E0   0x4648             MOV      R0,R9
   \   000000E2   0x.... 0x....      BL       __aeabi_fsub
   \   000000E6   0x9004             STR      R0,[SP, #+16]
    163              //
    164              // 测量值与常量的叉积。@求得的值即为陀螺仪偏移误差
    165          	//@陀螺仪与加速度计测量姿态的误差
    166              float x_ca = y_aa * z_ac - z_aa * y_ac;
   \   000000E8   0x9908             LDR      R1,[SP, #+32]
   \   000000EA   0x9804             LDR      R0,[SP, #+16]
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x4681             MOV      R9,R0
   \   000000F2   0x9907             LDR      R1,[SP, #+28]
   \   000000F4   0x9805             LDR      R0,[SP, #+20]
   \   000000F6   0x.... 0x....      BL       __aeabi_fmul
   \   000000FA   0x0001             MOVS     R1,R0
   \   000000FC   0x4648             MOV      R0,R9
   \   000000FE   0x.... 0x....      BL       __aeabi_fsub
   \   00000102   0x900F             STR      R0,[SP, #+60]
    167              float y_ca = z_aa * x_ac - x_aa * z_ac;
   \   00000104   0x9907             LDR      R1,[SP, #+28]
   \   00000106   0x9806             LDR      R0,[SP, #+24]
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x4681             MOV      R9,R0
   \   0000010E   0x9909             LDR      R1,[SP, #+36]
   \   00000110   0x9804             LDR      R0,[SP, #+16]
   \   00000112   0x.... 0x....      BL       __aeabi_fmul
   \   00000116   0x0001             MOVS     R1,R0
   \   00000118   0x4648             MOV      R0,R9
   \   0000011A   0x.... 0x....      BL       __aeabi_fsub
   \   0000011E   0x900E             STR      R0,[SP, #+56]
    168              float z_ca = x_aa * y_ac - y_aa * x_ac;
   \   00000120   0x9909             LDR      R1,[SP, #+36]
   \   00000122   0x9805             LDR      R0,[SP, #+20]
   \   00000124   0x.... 0x....      BL       __aeabi_fmul
   \   00000128   0x4681             MOV      R9,R0
   \   0000012A   0x9908             LDR      R1,[SP, #+32]
   \   0000012C   0x9806             LDR      R0,[SP, #+24]
   \   0000012E   0x.... 0x....      BL       __aeabi_fmul
   \   00000132   0x0001             MOVS     R1,R0
   \   00000134   0x4648             MOV      R0,R9
   \   00000136   0x.... 0x....      BL       __aeabi_fsub
   \   0000013A   0x900D             STR      R0,[SP, #+52]
    169              //
    170              // 构造增量旋转。@数据融合得到的角度增量
    171              float delta_x = (gyr[0] * interval / 2 + x_ca * FACTOR);
   \   0000013C   0x9811             LDR      R0,[SP, #+68]
   \   0000013E   0x6801             LDR      R1,[R0, #+0]
   \   00000140   0x9812             LDR      R0,[SP, #+72]
   \   00000142   0x.... 0x....      BL       __aeabi_fmul
   \   00000146   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000014A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000014E   0x4681             MOV      R9,R0
   \   00000150   0x990F             LDR      R1,[SP, #+60]
   \   00000152   0x9803             LDR      R0,[SP, #+12]
   \   00000154   0x.... 0x....      BL       __aeabi_fmul
   \   00000158   0x4649             MOV      R1,R9
   \   0000015A   0x.... 0x....      BL       __aeabi_fadd
   \   0000015E   0x4681             MOV      R9,R0
    172              float delta_y = (gyr[1] * interval / 2 + y_ca * FACTOR);
   \   00000160   0x9811             LDR      R0,[SP, #+68]
   \   00000162   0x6841             LDR      R1,[R0, #+4]
   \   00000164   0x9812             LDR      R0,[SP, #+72]
   \   00000166   0x.... 0x....      BL       __aeabi_fmul
   \   0000016A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000016E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000172   0x4682             MOV      R10,R0
   \   00000174   0x990E             LDR      R1,[SP, #+56]
   \   00000176   0x9803             LDR      R0,[SP, #+12]
   \   00000178   0x.... 0x....      BL       __aeabi_fmul
   \   0000017C   0x4651             MOV      R1,R10
   \   0000017E   0x.... 0x....      BL       __aeabi_fadd
   \   00000182   0x4682             MOV      R10,R0
    173              float delta_z = (gyr[2] * interval / 2 + z_ca * FACTOR);
   \   00000184   0x9811             LDR      R0,[SP, #+68]
   \   00000186   0x6881             LDR      R1,[R0, #+8]
   \   00000188   0x9812             LDR      R0,[SP, #+72]
   \   0000018A   0x.... 0x....      BL       __aeabi_fmul
   \   0000018E   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000192   0x.... 0x....      BL       __aeabi_fdiv
   \   00000196   0x4683             MOV      R11,R0
   \   00000198   0x990D             LDR      R1,[SP, #+52]
   \   0000019A   0x9803             LDR      R0,[SP, #+12]
   \   0000019C   0x.... 0x....      BL       __aeabi_fmul
   \   000001A0   0x4659             MOV      R1,R11
   \   000001A2   0x.... 0x....      BL       __aeabi_fadd
   \   000001A6   0x4683             MOV      R11,R0
    174              //
    175              // 融合，四元数乘法。@更新姿态
    176              attitude->w = w_q         - x_q*delta_x - y_q*delta_y - z_q*delta_z;
   \   000001A8   0x0030             MOVS     R0,R6
   \   000001AA   0x4649             MOV      R1,R9
   \   000001AC   0x.... 0x....      BL       __aeabi_fmul
   \   000001B0   0x0001             MOVS     R1,R0
   \   000001B2   0x9801             LDR      R0,[SP, #+4]
   \   000001B4   0x.... 0x....      BL       __aeabi_fsub
   \   000001B8   0x9000             STR      R0,[SP, #+0]
   \   000001BA   0x0038             MOVS     R0,R7
   \   000001BC   0x4651             MOV      R1,R10
   \   000001BE   0x.... 0x....      BL       __aeabi_fmul
   \   000001C2   0x0001             MOVS     R1,R0
   \   000001C4   0x9800             LDR      R0,[SP, #+0]
   \   000001C6   0x.... 0x....      BL       __aeabi_fsub
   \   000001CA   0x9000             STR      R0,[SP, #+0]
   \   000001CC   0x9802             LDR      R0,[SP, #+8]
   \   000001CE   0x4659             MOV      R1,R11
   \   000001D0   0x.... 0x....      BL       __aeabi_fmul
   \   000001D4   0x0001             MOVS     R1,R0
   \   000001D6   0x9800             LDR      R0,[SP, #+0]
   \   000001D8   0x.... 0x....      BL       __aeabi_fsub
   \   000001DC   0x6020             STR      R0,[R4, #+0]
    177              attitude->x = w_q*delta_x + x_q         + y_q*delta_z - z_q*delta_y;
   \   000001DE   0x9801             LDR      R0,[SP, #+4]
   \   000001E0   0x4649             MOV      R1,R9
   \   000001E2   0x.... 0x....      BL       __aeabi_fmul
   \   000001E6   0x0031             MOVS     R1,R6
   \   000001E8   0x.... 0x....      BL       __aeabi_fadd
   \   000001EC   0x9000             STR      R0,[SP, #+0]
   \   000001EE   0x0038             MOVS     R0,R7
   \   000001F0   0x4659             MOV      R1,R11
   \   000001F2   0x.... 0x....      BL       __aeabi_fmul
   \   000001F6   0x9900             LDR      R1,[SP, #+0]
   \   000001F8   0x.... 0x....      BL       __aeabi_fadd
   \   000001FC   0x9000             STR      R0,[SP, #+0]
   \   000001FE   0x9802             LDR      R0,[SP, #+8]
   \   00000200   0x4651             MOV      R1,R10
   \   00000202   0x.... 0x....      BL       __aeabi_fmul
   \   00000206   0x0001             MOVS     R1,R0
   \   00000208   0x9800             LDR      R0,[SP, #+0]
   \   0000020A   0x.... 0x....      BL       __aeabi_fsub
   \   0000020E   0x6060             STR      R0,[R4, #+4]
    178              attitude->y = w_q*delta_y - x_q*delta_z + y_q         + z_q*delta_x;
   \   00000210   0x9801             LDR      R0,[SP, #+4]
   \   00000212   0x4651             MOV      R1,R10
   \   00000214   0x.... 0x....      BL       __aeabi_fmul
   \   00000218   0x9000             STR      R0,[SP, #+0]
   \   0000021A   0x0030             MOVS     R0,R6
   \   0000021C   0x4659             MOV      R1,R11
   \   0000021E   0x.... 0x....      BL       __aeabi_fmul
   \   00000222   0x0001             MOVS     R1,R0
   \   00000224   0x9800             LDR      R0,[SP, #+0]
   \   00000226   0x.... 0x....      BL       __aeabi_fsub
   \   0000022A   0x0039             MOVS     R1,R7
   \   0000022C   0x.... 0x....      BL       __aeabi_fadd
   \   00000230   0x9000             STR      R0,[SP, #+0]
   \   00000232   0x9802             LDR      R0,[SP, #+8]
   \   00000234   0x4649             MOV      R1,R9
   \   00000236   0x.... 0x....      BL       __aeabi_fmul
   \   0000023A   0x9900             LDR      R1,[SP, #+0]
   \   0000023C   0x.... 0x....      BL       __aeabi_fadd
   \   00000240   0x60A0             STR      R0,[R4, #+8]
    179              attitude->z = w_q*delta_z + x_q*delta_y - y_q*delta_x + z_q;
   \   00000242   0x9801             LDR      R0,[SP, #+4]
   \   00000244   0x4659             MOV      R1,R11
   \   00000246   0x.... 0x....      BL       __aeabi_fmul
   \   0000024A   0x9000             STR      R0,[SP, #+0]
   \   0000024C   0x0030             MOVS     R0,R6
   \   0000024E   0x4651             MOV      R1,R10
   \   00000250   0x.... 0x....      BL       __aeabi_fmul
   \   00000254   0x9900             LDR      R1,[SP, #+0]
   \   00000256   0x.... 0x....      BL       __aeabi_fadd
   \   0000025A   0x9000             STR      R0,[SP, #+0]
   \   0000025C   0x0038             MOVS     R0,R7
   \   0000025E   0x4649             MOV      R1,R9
   \   00000260   0x.... 0x....      BL       __aeabi_fmul
   \   00000264   0x0001             MOVS     R1,R0
   \   00000266   0x9800             LDR      R0,[SP, #+0]
   \   00000268   0x.... 0x....      BL       __aeabi_fsub
   \   0000026C   0x9902             LDR      R1,[SP, #+8]
   \   0000026E   0x.... 0x....      BL       __aeabi_fadd
   \   00000272   0x60E0             STR      R0,[R4, #+12]
    180          
    181              quaternion_normalize(attitude);	 //@四元数单位化，该函数无返回值
   \   00000274   0x0020             MOVS     R0,R4
   \   00000276   0x.... 0x....      BL       quaternion_normalize
    182          }
   \   0000027A   0xB013             ADD      SP,SP,#+76
   \   0000027C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void FuseGyrAccMagCrossMethod(quaternion * attitude, float gyr[3], float acc[3], float mag[3], float interval)
    185          {
   \                     FuseGyrAccMagCrossMethod:
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB098             SUB      SP,SP,#+96
   \   00000006   0x001C             MOVS     R4,R3
    186              static float FACTOR = 0.001;
    187              //
    188              float w_q = attitude->w;
   \   00000008   0x9818             LDR      R0,[SP, #+96]
   \   0000000A   0x6805             LDR      R5,[R0, #+0]
    189              float x_q = attitude->x;
   \   0000000C   0x9818             LDR      R0,[SP, #+96]
   \   0000000E   0x6846             LDR      R6,[R0, #+4]
    190              float y_q = attitude->y;
   \   00000010   0x9818             LDR      R0,[SP, #+96]
   \   00000012   0x6887             LDR      R7,[R0, #+8]
    191              float z_q = attitude->z;
   \   00000014   0x9818             LDR      R0,[SP, #+96]
   \   00000016   0x68C0             LDR      R0,[R0, #+12]
   \   00000018   0x9001             STR      R0,[SP, #+4]
    192              float x_q_2 = x_q * 2;
   \   0000001A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000001E   0x0031             MOVS     R1,R6
   \   00000020   0x.... 0x....      BL       __aeabi_fmul
   \   00000024   0x4680             MOV      R8,R0
    193              float y_q_2 = y_q * 2;
   \   00000026   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000002A   0x0039             MOVS     R1,R7
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x4681             MOV      R9,R0
    194              float z_q_2 = z_q * 2;
   \   00000032   0x9901             LDR      R1,[SP, #+4]
   \   00000034   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000038   0x.... 0x....      BL       __aeabi_fmul
   \   0000003C   0x4682             MOV      R10,R0
    195              //
    196              // 单位化加速度计的读数。
    197              float a_rsqrt = math_rsqrt(acc[0]*acc[0]+acc[1]*acc[1]+acc[2]*acc[2]);
   \   0000003E   0x981A             LDR      R0,[SP, #+104]
   \   00000040   0x6801             LDR      R1,[R0, #+0]
   \   00000042   0x981A             LDR      R0,[SP, #+104]
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x4683             MOV      R11,R0
   \   0000004C   0x981A             LDR      R0,[SP, #+104]
   \   0000004E   0x6841             LDR      R1,[R0, #+4]
   \   00000050   0x981A             LDR      R0,[SP, #+104]
   \   00000052   0x6840             LDR      R0,[R0, #+4]
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x4659             MOV      R1,R11
   \   0000005A   0x.... 0x....      BL       __aeabi_fadd
   \   0000005E   0x4683             MOV      R11,R0
   \   00000060   0x981A             LDR      R0,[SP, #+104]
   \   00000062   0x6881             LDR      R1,[R0, #+8]
   \   00000064   0x981A             LDR      R0,[SP, #+104]
   \   00000066   0x6880             LDR      R0,[R0, #+8]
   \   00000068   0x.... 0x....      BL       __aeabi_fmul
   \   0000006C   0x4659             MOV      R1,R11
   \   0000006E   0x.... 0x....      BL       __aeabi_fadd
   \   00000072   0x.... 0x....      BL       math_rsqrt
   \   00000076   0x9006             STR      R0,[SP, #+24]
    198              float x_aa = acc[0] * a_rsqrt;
   \   00000078   0x981A             LDR      R0,[SP, #+104]
   \   0000007A   0x6801             LDR      R1,[R0, #+0]
   \   0000007C   0x9806             LDR      R0,[SP, #+24]
   \   0000007E   0x.... 0x....      BL       __aeabi_fmul
   \   00000082   0x9014             STR      R0,[SP, #+80]
    199              float y_aa = acc[1] * a_rsqrt;
   \   00000084   0x981A             LDR      R0,[SP, #+104]
   \   00000086   0x6841             LDR      R1,[R0, #+4]
   \   00000088   0x9806             LDR      R0,[SP, #+24]
   \   0000008A   0x.... 0x....      BL       __aeabi_fmul
   \   0000008E   0x9013             STR      R0,[SP, #+76]
    200              float z_aa = acc[2] * a_rsqrt;
   \   00000090   0x981A             LDR      R0,[SP, #+104]
   \   00000092   0x6881             LDR      R1,[R0, #+8]
   \   00000094   0x9806             LDR      R0,[SP, #+24]
   \   00000096   0x.... 0x....      BL       __aeabi_fmul
   \   0000009A   0x9012             STR      R0,[SP, #+72]
    201              //
    202              // 单位化罗盘的读数。
    203              float h_rsqrt = math_rsqrt(mag[0]*mag[0]+mag[1]*mag[1]+mag[2]*mag[2]);
   \   0000009C   0x6821             LDR      R1,[R4, #+0]
   \   0000009E   0x6820             LDR      R0,[R4, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_fmul
   \   000000A4   0x4683             MOV      R11,R0
   \   000000A6   0x6861             LDR      R1,[R4, #+4]
   \   000000A8   0x6860             LDR      R0,[R4, #+4]
   \   000000AA   0x.... 0x....      BL       __aeabi_fmul
   \   000000AE   0x4659             MOV      R1,R11
   \   000000B0   0x.... 0x....      BL       __aeabi_fadd
   \   000000B4   0x4683             MOV      R11,R0
   \   000000B6   0x68A1             LDR      R1,[R4, #+8]
   \   000000B8   0x68A0             LDR      R0,[R4, #+8]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x4659             MOV      R1,R11
   \   000000C0   0x.... 0x....      BL       __aeabi_fadd
   \   000000C4   0x.... 0x....      BL       math_rsqrt
   \   000000C8   0x9005             STR      R0,[SP, #+20]
    204              float x_hh = mag[0] * h_rsqrt;
   \   000000CA   0x6821             LDR      R1,[R4, #+0]
   \   000000CC   0x9805             LDR      R0,[SP, #+20]
   \   000000CE   0x.... 0x....      BL       __aeabi_fmul
   \   000000D2   0x9011             STR      R0,[SP, #+68]
    205              float y_hh = mag[1] * h_rsqrt;
   \   000000D4   0x6861             LDR      R1,[R4, #+4]
   \   000000D6   0x9805             LDR      R0,[SP, #+20]
   \   000000D8   0x.... 0x....      BL       __aeabi_fmul
   \   000000DC   0x9010             STR      R0,[SP, #+64]
    206              float z_hh = mag[2] * h_rsqrt;
   \   000000DE   0x68A1             LDR      R1,[R4, #+8]
   \   000000E0   0x9805             LDR      R0,[SP, #+20]
   \   000000E2   0x.... 0x....      BL       __aeabi_fmul
   \   000000E6   0x900F             STR      R0,[SP, #+60]
    207              //
    208              // 载体坐标下的重力加速度常量，已单位化。
    209              float x_ac = x_q*z_q_2 - w_q*y_q_2;
   \   000000E8   0x0030             MOVS     R0,R6
   \   000000EA   0x4651             MOV      R1,R10
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x4683             MOV      R11,R0
   \   000000F2   0x0028             MOVS     R0,R5
   \   000000F4   0x4649             MOV      R1,R9
   \   000000F6   0x.... 0x....      BL       __aeabi_fmul
   \   000000FA   0x0001             MOVS     R1,R0
   \   000000FC   0x4658             MOV      R0,R11
   \   000000FE   0x.... 0x....      BL       __aeabi_fsub
   \   00000102   0x900E             STR      R0,[SP, #+56]
    210              float y_ac = y_q*z_q_2 + w_q*x_q_2;
   \   00000104   0x0038             MOVS     R0,R7
   \   00000106   0x4651             MOV      R1,R10
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x4683             MOV      R11,R0
   \   0000010E   0x0028             MOVS     R0,R5
   \   00000110   0x4641             MOV      R1,R8
   \   00000112   0x.... 0x....      BL       __aeabi_fmul
   \   00000116   0x4659             MOV      R1,R11
   \   00000118   0x.... 0x....      BL       __aeabi_fadd
   \   0000011C   0x900D             STR      R0,[SP, #+52]
    211              float z_ac = 1 - x_q*x_q_2 - y_q*y_q_2;
   \   0000011E   0x0030             MOVS     R0,R6
   \   00000120   0x4641             MOV      R1,R8
   \   00000122   0x.... 0x....      BL       __aeabi_fmul
   \   00000126   0x0001             MOVS     R1,R0
   \   00000128   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000012C   0x.... 0x....      BL       __aeabi_fsub
   \   00000130   0x4683             MOV      R11,R0
   \   00000132   0x0038             MOVS     R0,R7
   \   00000134   0x4649             MOV      R1,R9
   \   00000136   0x.... 0x....      BL       __aeabi_fmul
   \   0000013A   0x0001             MOVS     R1,R0
   \   0000013C   0x4658             MOV      R0,R11
   \   0000013E   0x.... 0x....      BL       __aeabi_fsub
   \   00000142   0x900C             STR      R0,[SP, #+48]
    212              //
    213              // 载体坐标下的地磁场常量，已单位化。
    214              float x_hc = MIX_MAG_Y*(x_q*y_q_2 + w_q*z_q_2)     + MIX_MAG_Z*(x_q*z_q_2 - w_q*y_q_2)    ;
   \   00000144   0x0030             MOVS     R0,R6
   \   00000146   0x4649             MOV      R1,R9
   \   00000148   0x.... 0x....      BL       __aeabi_fmul
   \   0000014C   0x4683             MOV      R11,R0
   \   0000014E   0x0028             MOVS     R0,R5
   \   00000150   0x4651             MOV      R1,R10
   \   00000152   0x.... 0x....      BL       __aeabi_fmul
   \   00000156   0x4659             MOV      R1,R11
   \   00000158   0x.... 0x....      BL       __aeabi_fadd
   \   0000015C   0x....             LDR.N    R1,??DataTable4
   \   0000015E   0x6809             LDR      R1,[R1, #+0]
   \   00000160   0x.... 0x....      BL       __aeabi_fmul
   \   00000164   0x9000             STR      R0,[SP, #+0]
   \   00000166   0x0030             MOVS     R0,R6
   \   00000168   0x4651             MOV      R1,R10
   \   0000016A   0x.... 0x....      BL       __aeabi_fmul
   \   0000016E   0x4683             MOV      R11,R0
   \   00000170   0x0028             MOVS     R0,R5
   \   00000172   0x4649             MOV      R1,R9
   \   00000174   0x.... 0x....      BL       __aeabi_fmul
   \   00000178   0x0001             MOVS     R1,R0
   \   0000017A   0x4658             MOV      R0,R11
   \   0000017C   0x.... 0x....      BL       __aeabi_fsub
   \   00000180   0x....             LDR.N    R1,??DataTable4_1
   \   00000182   0x6809             LDR      R1,[R1, #+0]
   \   00000184   0x.... 0x....      BL       __aeabi_fmul
   \   00000188   0x9900             LDR      R1,[SP, #+0]
   \   0000018A   0x.... 0x....      BL       __aeabi_fadd
   \   0000018E   0x900B             STR      R0,[SP, #+44]
    215              float y_hc = MIX_MAG_Y*(1 - x_q*x_q_2 - z_q*z_q_2) + MIX_MAG_Z*(y_q*z_q_2 + w_q*x_q_2)    ;
   \   00000190   0x0030             MOVS     R0,R6
   \   00000192   0x4641             MOV      R1,R8
   \   00000194   0x.... 0x....      BL       __aeabi_fmul
   \   00000198   0x0001             MOVS     R1,R0
   \   0000019A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000019E   0x.... 0x....      BL       __aeabi_fsub
   \   000001A2   0x4683             MOV      R11,R0
   \   000001A4   0x9801             LDR      R0,[SP, #+4]
   \   000001A6   0x4651             MOV      R1,R10
   \   000001A8   0x.... 0x....      BL       __aeabi_fmul
   \   000001AC   0x0001             MOVS     R1,R0
   \   000001AE   0x4658             MOV      R0,R11
   \   000001B0   0x.... 0x....      BL       __aeabi_fsub
   \   000001B4   0x....             LDR.N    R1,??DataTable4
   \   000001B6   0x6809             LDR      R1,[R1, #+0]
   \   000001B8   0x.... 0x....      BL       __aeabi_fmul
   \   000001BC   0x9000             STR      R0,[SP, #+0]
   \   000001BE   0x0038             MOVS     R0,R7
   \   000001C0   0x4651             MOV      R1,R10
   \   000001C2   0x.... 0x....      BL       __aeabi_fmul
   \   000001C6   0x4683             MOV      R11,R0
   \   000001C8   0x0028             MOVS     R0,R5
   \   000001CA   0x4641             MOV      R1,R8
   \   000001CC   0x.... 0x....      BL       __aeabi_fmul
   \   000001D0   0x4659             MOV      R1,R11
   \   000001D2   0x.... 0x....      BL       __aeabi_fadd
   \   000001D6   0x....             LDR.N    R1,??DataTable4_1
   \   000001D8   0x6809             LDR      R1,[R1, #+0]
   \   000001DA   0x.... 0x....      BL       __aeabi_fmul
   \   000001DE   0x9900             LDR      R1,[SP, #+0]
   \   000001E0   0x.... 0x....      BL       __aeabi_fadd
   \   000001E4   0x900A             STR      R0,[SP, #+40]
    216              float z_hc = MIX_MAG_Y*(y_q*z_q_2 - w_q*x_q_2)     + MIX_MAG_Z*(1 - x_q*x_q_2 - y_q*y_q_2);
   \   000001E6   0x0038             MOVS     R0,R7
   \   000001E8   0x4651             MOV      R1,R10
   \   000001EA   0x.... 0x....      BL       __aeabi_fmul
   \   000001EE   0x4683             MOV      R11,R0
   \   000001F0   0x0028             MOVS     R0,R5
   \   000001F2   0x4641             MOV      R1,R8
   \   000001F4   0x.... 0x....      BL       __aeabi_fmul
   \   000001F8   0x0001             MOVS     R1,R0
   \   000001FA   0x4658             MOV      R0,R11
   \   000001FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000200   0x....             LDR.N    R1,??DataTable4
   \   00000202   0x6809             LDR      R1,[R1, #+0]
   \   00000204   0x.... 0x....      BL       __aeabi_fmul
   \   00000208   0x9000             STR      R0,[SP, #+0]
   \   0000020A   0x0030             MOVS     R0,R6
   \   0000020C   0x4641             MOV      R1,R8
   \   0000020E   0x.... 0x....      BL       __aeabi_fmul
   \   00000212   0x0001             MOVS     R1,R0
   \   00000214   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000218   0x.... 0x....      BL       __aeabi_fsub
   \   0000021C   0x4683             MOV      R11,R0
   \   0000021E   0x0038             MOVS     R0,R7
   \   00000220   0x4649             MOV      R1,R9
   \   00000222   0x.... 0x....      BL       __aeabi_fmul
   \   00000226   0x0001             MOVS     R1,R0
   \   00000228   0x4658             MOV      R0,R11
   \   0000022A   0x.... 0x....      BL       __aeabi_fsub
   \   0000022E   0x....             LDR.N    R1,??DataTable4_1
   \   00000230   0x6809             LDR      R1,[R1, #+0]
   \   00000232   0x.... 0x....      BL       __aeabi_fmul
   \   00000236   0x9900             LDR      R1,[SP, #+0]
   \   00000238   0x.... 0x....      BL       __aeabi_fadd
   \   0000023C   0x9009             STR      R0,[SP, #+36]
    217              //
    218              // 测量值与常量的叉积。@求得的值即为陀螺仪偏移误差
    219          	//@陀螺仪与加速度计测量姿态的误差
    220              float x_ca = y_aa * z_ac - z_aa * y_ac;
   \   0000023E   0x9913             LDR      R1,[SP, #+76]
   \   00000240   0x980C             LDR      R0,[SP, #+48]
   \   00000242   0x.... 0x....      BL       __aeabi_fmul
   \   00000246   0x4683             MOV      R11,R0
   \   00000248   0x9912             LDR      R1,[SP, #+72]
   \   0000024A   0x980D             LDR      R0,[SP, #+52]
   \   0000024C   0x.... 0x....      BL       __aeabi_fmul
   \   00000250   0x0001             MOVS     R1,R0
   \   00000252   0x4658             MOV      R0,R11
   \   00000254   0x.... 0x....      BL       __aeabi_fsub
   \   00000258   0x9017             STR      R0,[SP, #+92]
    221              float y_ca = z_aa * x_ac - x_aa * z_ac;
   \   0000025A   0x9912             LDR      R1,[SP, #+72]
   \   0000025C   0x980E             LDR      R0,[SP, #+56]
   \   0000025E   0x.... 0x....      BL       __aeabi_fmul
   \   00000262   0x4683             MOV      R11,R0
   \   00000264   0x9914             LDR      R1,[SP, #+80]
   \   00000266   0x980C             LDR      R0,[SP, #+48]
   \   00000268   0x.... 0x....      BL       __aeabi_fmul
   \   0000026C   0x0001             MOVS     R1,R0
   \   0000026E   0x4658             MOV      R0,R11
   \   00000270   0x.... 0x....      BL       __aeabi_fsub
   \   00000274   0x9016             STR      R0,[SP, #+88]
    222              float z_ca = x_aa * y_ac - y_aa * x_ac;
   \   00000276   0x9914             LDR      R1,[SP, #+80]
   \   00000278   0x980D             LDR      R0,[SP, #+52]
   \   0000027A   0x.... 0x....      BL       __aeabi_fmul
   \   0000027E   0x4683             MOV      R11,R0
   \   00000280   0x9913             LDR      R1,[SP, #+76]
   \   00000282   0x980E             LDR      R0,[SP, #+56]
   \   00000284   0x.... 0x....      BL       __aeabi_fmul
   \   00000288   0x0001             MOVS     R1,R0
   \   0000028A   0x4658             MOV      R0,R11
   \   0000028C   0x.... 0x....      BL       __aeabi_fsub
   \   00000290   0x9015             STR      R0,[SP, #+84]
    223          	//@陀螺仪与罗盘测量姿态的误差
    224              float x_ch = y_hh * z_hc - z_hh * y_hc;
   \   00000292   0x9910             LDR      R1,[SP, #+64]
   \   00000294   0x9809             LDR      R0,[SP, #+36]
   \   00000296   0x.... 0x....      BL       __aeabi_fmul
   \   0000029A   0x4683             MOV      R11,R0
   \   0000029C   0x990F             LDR      R1,[SP, #+60]
   \   0000029E   0x980A             LDR      R0,[SP, #+40]
   \   000002A0   0x.... 0x....      BL       __aeabi_fmul
   \   000002A4   0x0001             MOVS     R1,R0
   \   000002A6   0x4658             MOV      R0,R11
   \   000002A8   0x.... 0x....      BL       __aeabi_fsub
   \   000002AC   0x9008             STR      R0,[SP, #+32]
    225              float y_ch = z_hh * x_hc - x_hh * z_hc;
   \   000002AE   0x990F             LDR      R1,[SP, #+60]
   \   000002B0   0x980B             LDR      R0,[SP, #+44]
   \   000002B2   0x.... 0x....      BL       __aeabi_fmul
   \   000002B6   0x4683             MOV      R11,R0
   \   000002B8   0x9911             LDR      R1,[SP, #+68]
   \   000002BA   0x9809             LDR      R0,[SP, #+36]
   \   000002BC   0x.... 0x....      BL       __aeabi_fmul
   \   000002C0   0x0001             MOVS     R1,R0
   \   000002C2   0x4658             MOV      R0,R11
   \   000002C4   0x.... 0x....      BL       __aeabi_fsub
   \   000002C8   0x9007             STR      R0,[SP, #+28]
    226              float z_ch = x_hh * y_hc - y_hh * x_hc;
   \   000002CA   0x9911             LDR      R1,[SP, #+68]
   \   000002CC   0x980A             LDR      R0,[SP, #+40]
   \   000002CE   0x.... 0x....      BL       __aeabi_fmul
   \   000002D2   0x4683             MOV      R11,R0
   \   000002D4   0x9910             LDR      R1,[SP, #+64]
   \   000002D6   0x980B             LDR      R0,[SP, #+44]
   \   000002D8   0x.... 0x....      BL       __aeabi_fmul
   \   000002DC   0x0001             MOVS     R1,R0
   \   000002DE   0x4658             MOV      R0,R11
   \   000002E0   0x.... 0x....      BL       __aeabi_fsub
   \   000002E4   0x4683             MOV      R11,R0
    227              /////////////////////////////////////////////
    228              x_ch = 0;
   \   000002E6   0x2000             MOVS     R0,#+0
   \   000002E8   0x9008             STR      R0,[SP, #+32]
    229              y_ch = 0;
   \   000002EA   0x2000             MOVS     R0,#+0
   \   000002EC   0x9007             STR      R0,[SP, #+28]
    230              z_ch = z_ch;                                 // 舍弃X轴和Y轴的旋转，只对Z轴的旋转积分
    231              /////////////////////////////////////////////
    232              //
    233              // 构造增量旋转。 @数据融合得到角度增量
    234              float delta_x = gyr[0] * interval / 2 + (x_ca + x_ch) * FACTOR;
   \   000002EE   0x9819             LDR      R0,[SP, #+100]
   \   000002F0   0x6801             LDR      R1,[R0, #+0]
   \   000002F2   0x9824             LDR      R0,[SP, #+144]
   \   000002F4   0x.... 0x....      BL       __aeabi_fmul
   \   000002F8   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000002FC   0x.... 0x....      BL       __aeabi_fdiv
   \   00000300   0x9000             STR      R0,[SP, #+0]
   \   00000302   0x9917             LDR      R1,[SP, #+92]
   \   00000304   0x9808             LDR      R0,[SP, #+32]
   \   00000306   0x.... 0x....      BL       __aeabi_fadd
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000030E   0x6809             LDR      R1,[R1, #+0]
   \   00000310   0x.... 0x....      BL       __aeabi_fmul
   \   00000314   0x9900             LDR      R1,[SP, #+0]
   \   00000316   0x.... 0x....      BL       __aeabi_fadd
   \   0000031A   0x9004             STR      R0,[SP, #+16]
    235              float delta_y = gyr[1] * interval / 2 + (y_ca + y_ch) * FACTOR;
   \   0000031C   0x9819             LDR      R0,[SP, #+100]
   \   0000031E   0x6841             LDR      R1,[R0, #+4]
   \   00000320   0x9824             LDR      R0,[SP, #+144]
   \   00000322   0x.... 0x....      BL       __aeabi_fmul
   \   00000326   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000032A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000032E   0x9000             STR      R0,[SP, #+0]
   \   00000330   0x9916             LDR      R1,[SP, #+88]
   \   00000332   0x9807             LDR      R0,[SP, #+28]
   \   00000334   0x.... 0x....      BL       __aeabi_fadd
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000033C   0x6809             LDR      R1,[R1, #+0]
   \   0000033E   0x.... 0x....      BL       __aeabi_fmul
   \   00000342   0x9900             LDR      R1,[SP, #+0]
   \   00000344   0x.... 0x....      BL       __aeabi_fadd
   \   00000348   0x9003             STR      R0,[SP, #+12]
    236              float delta_z = gyr[2] * interval / 2 + (z_ca + z_ch) * FACTOR;
   \   0000034A   0x9819             LDR      R0,[SP, #+100]
   \   0000034C   0x6881             LDR      R1,[R0, #+8]
   \   0000034E   0x9824             LDR      R0,[SP, #+144]
   \   00000350   0x.... 0x....      BL       __aeabi_fmul
   \   00000354   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000358   0x.... 0x....      BL       __aeabi_fdiv
   \   0000035C   0x9000             STR      R0,[SP, #+0]
   \   0000035E   0x9815             LDR      R0,[SP, #+84]
   \   00000360   0x4659             MOV      R1,R11
   \   00000362   0x.... 0x....      BL       __aeabi_fadd
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000036A   0x6809             LDR      R1,[R1, #+0]
   \   0000036C   0x.... 0x....      BL       __aeabi_fmul
   \   00000370   0x9900             LDR      R1,[SP, #+0]
   \   00000372   0x.... 0x....      BL       __aeabi_fadd
   \   00000376   0x9002             STR      R0,[SP, #+8]
    237              //
    238              // 融合，四元数乘法。  @更新姿态
    239              attitude->w = w_q         - x_q*delta_x - y_q*delta_y - z_q*delta_z;
   \   00000378   0x9804             LDR      R0,[SP, #+16]
   \   0000037A   0x0031             MOVS     R1,R6
   \   0000037C   0x.... 0x....      BL       __aeabi_fmul
   \   00000380   0x0001             MOVS     R1,R0
   \   00000382   0x0028             MOVS     R0,R5
   \   00000384   0x.... 0x....      BL       __aeabi_fsub
   \   00000388   0x9000             STR      R0,[SP, #+0]
   \   0000038A   0x9803             LDR      R0,[SP, #+12]
   \   0000038C   0x0039             MOVS     R1,R7
   \   0000038E   0x.... 0x....      BL       __aeabi_fmul
   \   00000392   0x0001             MOVS     R1,R0
   \   00000394   0x9800             LDR      R0,[SP, #+0]
   \   00000396   0x.... 0x....      BL       __aeabi_fsub
   \   0000039A   0x9000             STR      R0,[SP, #+0]
   \   0000039C   0x9901             LDR      R1,[SP, #+4]
   \   0000039E   0x9802             LDR      R0,[SP, #+8]
   \   000003A0   0x.... 0x....      BL       __aeabi_fmul
   \   000003A4   0x0001             MOVS     R1,R0
   \   000003A6   0x9800             LDR      R0,[SP, #+0]
   \   000003A8   0x.... 0x....      BL       __aeabi_fsub
   \   000003AC   0x9918             LDR      R1,[SP, #+96]
   \   000003AE   0x6008             STR      R0,[R1, #+0]
    240              attitude->x = w_q*delta_x + x_q         + y_q*delta_z - z_q*delta_y;
   \   000003B0   0x9804             LDR      R0,[SP, #+16]
   \   000003B2   0x0029             MOVS     R1,R5
   \   000003B4   0x.... 0x....      BL       __aeabi_fmul
   \   000003B8   0x0031             MOVS     R1,R6
   \   000003BA   0x.... 0x....      BL       __aeabi_fadd
   \   000003BE   0x9000             STR      R0,[SP, #+0]
   \   000003C0   0x9802             LDR      R0,[SP, #+8]
   \   000003C2   0x0039             MOVS     R1,R7
   \   000003C4   0x.... 0x....      BL       __aeabi_fmul
   \   000003C8   0x9900             LDR      R1,[SP, #+0]
   \   000003CA   0x.... 0x....      BL       __aeabi_fadd
   \   000003CE   0x9000             STR      R0,[SP, #+0]
   \   000003D0   0x9901             LDR      R1,[SP, #+4]
   \   000003D2   0x9803             LDR      R0,[SP, #+12]
   \   000003D4   0x.... 0x....      BL       __aeabi_fmul
   \   000003D8   0x0001             MOVS     R1,R0
   \   000003DA   0x9800             LDR      R0,[SP, #+0]
   \   000003DC   0x.... 0x....      BL       __aeabi_fsub
   \   000003E0   0x9918             LDR      R1,[SP, #+96]
   \   000003E2   0x6048             STR      R0,[R1, #+4]
    241              attitude->y = w_q*delta_y - x_q*delta_z + y_q         + z_q*delta_x;
   \   000003E4   0x9803             LDR      R0,[SP, #+12]
   \   000003E6   0x0029             MOVS     R1,R5
   \   000003E8   0x.... 0x....      BL       __aeabi_fmul
   \   000003EC   0x9000             STR      R0,[SP, #+0]
   \   000003EE   0x9802             LDR      R0,[SP, #+8]
   \   000003F0   0x0031             MOVS     R1,R6
   \   000003F2   0x.... 0x....      BL       __aeabi_fmul
   \   000003F6   0x0001             MOVS     R1,R0
   \   000003F8   0x9800             LDR      R0,[SP, #+0]
   \   000003FA   0x.... 0x....      BL       __aeabi_fsub
   \   000003FE   0x0039             MOVS     R1,R7
   \   00000400   0x.... 0x....      BL       __aeabi_fadd
   \   00000404   0x9000             STR      R0,[SP, #+0]
   \   00000406   0x9901             LDR      R1,[SP, #+4]
   \   00000408   0x9804             LDR      R0,[SP, #+16]
   \   0000040A   0x.... 0x....      BL       __aeabi_fmul
   \   0000040E   0x9900             LDR      R1,[SP, #+0]
   \   00000410   0x.... 0x....      BL       __aeabi_fadd
   \   00000414   0x9918             LDR      R1,[SP, #+96]
   \   00000416   0x6088             STR      R0,[R1, #+8]
    242              attitude->z = w_q*delta_z + x_q*delta_y - y_q*delta_x + z_q;
   \   00000418   0x9802             LDR      R0,[SP, #+8]
   \   0000041A   0x0029             MOVS     R1,R5
   \   0000041C   0x.... 0x....      BL       __aeabi_fmul
   \   00000420   0x9000             STR      R0,[SP, #+0]
   \   00000422   0x9803             LDR      R0,[SP, #+12]
   \   00000424   0x0031             MOVS     R1,R6
   \   00000426   0x.... 0x....      BL       __aeabi_fmul
   \   0000042A   0x9900             LDR      R1,[SP, #+0]
   \   0000042C   0x.... 0x....      BL       __aeabi_fadd
   \   00000430   0x9000             STR      R0,[SP, #+0]
   \   00000432   0x9804             LDR      R0,[SP, #+16]
   \   00000434   0x0039             MOVS     R1,R7
   \   00000436   0x.... 0x....      BL       __aeabi_fmul
   \   0000043A   0x0001             MOVS     R1,R0
   \   0000043C   0x9800             LDR      R0,[SP, #+0]
   \   0000043E   0x.... 0x....      BL       __aeabi_fsub
   \   00000442   0x9901             LDR      R1,[SP, #+4]
   \   00000444   0x.... 0x....      BL       __aeabi_fadd
   \   00000448   0x9918             LDR      R1,[SP, #+96]
   \   0000044A   0x60C8             STR      R0,[R1, #+12]
    243              quaternion_normalize(attitude);	//@四元数单位化，该函数无返回值    
   \   0000044C   0x9818             LDR      R0,[SP, #+96]
   \   0000044E   0x.... 0x....      BL       quaternion_normalize
    244          }
   \   00000452   0xB01B             ADD      SP,SP,#+108
   \   00000454   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .data, align 4
   \                     ??FACTOR:
   \   00000000   0x3A83126F         DC32 3A83126FH
    245          
    246          ////////////////////////////////////////////////////////////////////////////////
    247          #define Kp 10.0f                        // proportional gain governs rate of convergence to accelerometer/magnetometer
    248          #define Ki 0.008f                          // integral gain governs rate of convergence of gyroscope biases
    249          

   \                                 In section .data, align 4
    250          float q0 = 1, q1 = 0, q2 = 0, q3 = 0;    // quaternion elements representing the estimated orientation
   \                     q0:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     q1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    251          float exInt = 0, eyInt = 0, ezInt = 0;    // scaled integral error
   \                     exInt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     eyInt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ezInt:
   \   00000000                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    252          void IMUupdate(quaternion * attitude, float gyr[3], float acc[3], float interval)
    253          {
   \                     IMUupdate:
   \   00000000   0xE92D 0x4FFF      PUSH     {R0-R11,LR}
   \   00000004   0xB08F             SUB      SP,SP,#+60
    254            float gx, gy, gz;
    255            float ax, ay, az;
    256            float halfT;
    257            gx = gyr[0];
   \   00000006   0x9810             LDR      R0,[SP, #+64]
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0004             MOVS     R4,R0
    258            gy = gyr[1];
   \   0000000C   0x9810             LDR      R0,[SP, #+64]
   \   0000000E   0x6840             LDR      R0,[R0, #+4]
   \   00000010   0x0005             MOVS     R5,R0
    259            gz = gyr[2];
   \   00000012   0x9810             LDR      R0,[SP, #+64]
   \   00000014   0x6880             LDR      R0,[R0, #+8]
   \   00000016   0x0006             MOVS     R6,R0
    260            ax = acc[0];
   \   00000018   0x9811             LDR      R0,[SP, #+68]
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x0007             MOVS     R7,R0
    261            ay = acc[1];
   \   0000001E   0x9811             LDR      R0,[SP, #+68]
   \   00000020   0x6840             LDR      R0,[R0, #+4]
   \   00000022   0x4680             MOV      R8,R0
    262            az = acc[2];
   \   00000024   0x9811             LDR      R0,[SP, #+68]
   \   00000026   0x6880             LDR      R0,[R0, #+8]
   \   00000028   0x4681             MOV      R9,R0
    263            halfT = interval / 2;
   \   0000002A   0x9812             LDR      R0,[SP, #+72]
   \   0000002C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000030   0x.... 0x....      BL       __aeabi_fdiv
   \   00000034   0x9001             STR      R0,[SP, #+4]
    264            
    265            float norm;
    266            //float hx, hy, hz, bx, bz;
    267            float vx, vy, vz;// wx, wy, wz;
    268            float ex, ey, ez;
    269          
    270            // 把需要使用的值事先计算好
    271            float q0q0 = q0*q0;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   0000003A   0x6801             LDR      R1,[R0, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x.... 0x....      BL       __aeabi_fmul
   \   00000046   0x900E             STR      R0,[SP, #+56]
    272            float q0q1 = q0*q1;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   0000004C   0x6801             LDR      R1,[R0, #+0]
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x900D             STR      R0,[SP, #+52]
    273            float q0q2 = q0*q2;
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   0000005E   0x6801             LDR      R1,[R0, #+0]
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x.... 0x....      BL       __aeabi_fmul
   \   0000006A   0x900C             STR      R0,[SP, #+48]
    274            //float q0q3 = q0*q3;
    275            float q1q1 = q1*q1;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000070   0x6801             LDR      R1,[R0, #+0]
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fmul
   \   0000007C   0x900B             STR      R0,[SP, #+44]
    276            //float q1q2 = q1*q2;
    277            float q1q3 = q1*q3;
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000082   0x6801             LDR      R1,[R0, #+0]
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      BL       __aeabi_fmul
   \   0000008E   0x900A             STR      R0,[SP, #+40]
    278            float q2q2 = q2*q2;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000094   0x6801             LDR      R1,[R0, #+0]
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x.... 0x....      BL       __aeabi_fmul
   \   000000A0   0x9009             STR      R0,[SP, #+36]
    279            float q2q3 = q2*q3;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000000A6   0x6801             LDR      R1,[R0, #+0]
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x.... 0x....      BL       __aeabi_fmul
   \   000000B2   0x9008             STR      R0,[SP, #+32]
    280            float q3q3 = q3*q3;
   \   000000B4   0x....             LDR.N    R0,??DataTable5_9
   \   000000B6   0x6801             LDR      R1,[R0, #+0]
   \   000000B8   0x....             LDR.N    R0,??DataTable5_9
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x.... 0x....      BL       __aeabi_fmul
   \   000000C0   0x4683             MOV      R11,R0
    281          	
    282            if(ax*ay*az==0)
   \   000000C2   0x0038             MOVS     R0,R7
   \   000000C4   0x4641             MOV      R1,R8
   \   000000C6   0x.... 0x....      BL       __aeabi_fmul
   \   000000CA   0x4649             MOV      R1,R9
   \   000000CC   0x.... 0x....      BL       __aeabi_fmul
   \   000000D0   0x2100             MOVS     R1,#+0
   \   000000D2   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   000000D6   0xF000 0x8191      BEQ.W    ??IMUupdate_0
    283              return;
    284          		
    285            norm = sqrt(ax*ax + ay*ay + az*az);       //accêy?Y1éò??ˉ
   \                     ??IMUupdate_1:
   \   000000DA   0x0038             MOVS     R0,R7
   \   000000DC   0x0039             MOVS     R1,R7
   \   000000DE   0x.... 0x....      BL       __aeabi_fmul
   \   000000E2   0x9000             STR      R0,[SP, #+0]
   \   000000E4   0x4640             MOV      R0,R8
   \   000000E6   0x4641             MOV      R1,R8
   \   000000E8   0x.... 0x....      BL       __aeabi_fmul
   \   000000EC   0x9900             LDR      R1,[SP, #+0]
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x9000             STR      R0,[SP, #+0]
   \   000000F4   0x4648             MOV      R0,R9
   \   000000F6   0x4649             MOV      R1,R9
   \   000000F8   0x.... 0x....      BL       __aeabi_fmul
   \   000000FC   0x9900             LDR      R1,[SP, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_fadd
   \   00000102   0x.... 0x....      BL       __aeabi_f2d
   \   00000106   0x.... 0x....      BL       sqrt
   \   0000010A   0x.... 0x....      BL       __aeabi_d2f
   \   0000010E   0x4682             MOV      R10,R0
    286            ax = ax /norm;
   \   00000110   0x0038             MOVS     R0,R7
   \   00000112   0x4651             MOV      R1,R10
   \   00000114   0x.... 0x....      BL       __aeabi_fdiv
   \   00000118   0x0007             MOVS     R7,R0
    287            ay = ay / norm;
   \   0000011A   0x4640             MOV      R0,R8
   \   0000011C   0x4651             MOV      R1,R10
   \   0000011E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000122   0x4680             MOV      R8,R0
    288            az = az / norm;
   \   00000124   0x4648             MOV      R0,R9
   \   00000126   0x4651             MOV      R1,R10
   \   00000128   0x.... 0x....      BL       __aeabi_fdiv
   \   0000012C   0x4681             MOV      R9,R0
    289          
    290            // estimated direction of gravity and flux (v and w)              1à????á|・??òoíá÷á?/±??¨
    291            vx = 2*(q1q3 - q0q2);												//???a???Dxyzμ?±íê?
   \   0000012E   0x980A             LDR      R0,[SP, #+40]
   \   00000130   0x990C             LDR      R1,[SP, #+48]
   \   00000132   0x.... 0x....      BL       __aeabi_fsub
   \   00000136   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000013A   0x.... 0x....      BL       __aeabi_fmul
   \   0000013E   0x9007             STR      R0,[SP, #+28]
    292            vy = 2*(q0q1 + q2q3);
   \   00000140   0x990D             LDR      R1,[SP, #+52]
   \   00000142   0x9808             LDR      R0,[SP, #+32]
   \   00000144   0x.... 0x....      BL       __aeabi_fadd
   \   00000148   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000014C   0x.... 0x....      BL       __aeabi_fmul
   \   00000150   0x9006             STR      R0,[SP, #+24]
    293            vz = q0q0 - q1q1 - q2q2 + q3q3 ;
   \   00000152   0x980E             LDR      R0,[SP, #+56]
   \   00000154   0x990B             LDR      R1,[SP, #+44]
   \   00000156   0x.... 0x....      BL       __aeabi_fsub
   \   0000015A   0x9909             LDR      R1,[SP, #+36]
   \   0000015C   0x.... 0x....      BL       __aeabi_fsub
   \   00000160   0x4659             MOV      R1,R11
   \   00000162   0x.... 0x....      BL       __aeabi_fadd
   \   00000166   0x9005             STR      R0,[SP, #+20]
    294          
    295            // error is sum of cross product between reference direction of fields and direction measured by sensors
    296            ex = (ay*vz - az*vy) ;                           					 //?òá?ía?y?ú?à??μ?μ?2?・??íê??ó2?
   \   00000168   0x9805             LDR      R0,[SP, #+20]
   \   0000016A   0x4641             MOV      R1,R8
   \   0000016C   0x.... 0x....      BL       __aeabi_fmul
   \   00000170   0x9000             STR      R0,[SP, #+0]
   \   00000172   0x9806             LDR      R0,[SP, #+24]
   \   00000174   0x4649             MOV      R1,R9
   \   00000176   0x.... 0x....      BL       __aeabi_fmul
   \   0000017A   0x0001             MOVS     R1,R0
   \   0000017C   0x9800             LDR      R0,[SP, #+0]
   \   0000017E   0x.... 0x....      BL       __aeabi_fsub
   \   00000182   0x9004             STR      R0,[SP, #+16]
    297            ey = (az*vx - ax*vz) ;
   \   00000184   0x9807             LDR      R0,[SP, #+28]
   \   00000186   0x4649             MOV      R1,R9
   \   00000188   0x.... 0x....      BL       __aeabi_fmul
   \   0000018C   0x9000             STR      R0,[SP, #+0]
   \   0000018E   0x9805             LDR      R0,[SP, #+20]
   \   00000190   0x0039             MOVS     R1,R7
   \   00000192   0x.... 0x....      BL       __aeabi_fmul
   \   00000196   0x0001             MOVS     R1,R0
   \   00000198   0x9800             LDR      R0,[SP, #+0]
   \   0000019A   0x.... 0x....      BL       __aeabi_fsub
   \   0000019E   0x9003             STR      R0,[SP, #+12]
    298            ez = (ax*vy - ay*vx) ;
   \   000001A0   0x9806             LDR      R0,[SP, #+24]
   \   000001A2   0x0039             MOVS     R1,R7
   \   000001A4   0x.... 0x....      BL       __aeabi_fmul
   \   000001A8   0x9000             STR      R0,[SP, #+0]
   \   000001AA   0x9807             LDR      R0,[SP, #+28]
   \   000001AC   0x4641             MOV      R1,R8
   \   000001AE   0x.... 0x....      BL       __aeabi_fmul
   \   000001B2   0x0001             MOVS     R1,R0
   \   000001B4   0x9800             LDR      R0,[SP, #+0]
   \   000001B6   0x.... 0x....      BL       __aeabi_fsub
   \   000001BA   0x9002             STR      R0,[SP, #+8]
    299          
    300            exInt = exInt + ex * Ki;								  //???ó2???DD?y・?
   \   000001BC   0x9904             LDR      R1,[SP, #+16]
   \   000001BE   0x....             LDR.N    R0,??DataTable5_10  ;; 0x3c03126f
   \   000001C0   0x.... 0x....      BL       __aeabi_fmul
   \   000001C4   0x....             LDR.N    R1,??DataTable5_11
   \   000001C6   0x6809             LDR      R1,[R1, #+0]
   \   000001C8   0x.... 0x....      BL       __aeabi_fadd
   \   000001CC   0x....             LDR.N    R1,??DataTable5_11
   \   000001CE   0x6008             STR      R0,[R1, #+0]
    301            eyInt = eyInt + ey * Ki;
   \   000001D0   0x9903             LDR      R1,[SP, #+12]
   \   000001D2   0x....             LDR.N    R0,??DataTable5_10  ;; 0x3c03126f
   \   000001D4   0x.... 0x....      BL       __aeabi_fmul
   \   000001D8   0x....             LDR.N    R1,??DataTable5_12
   \   000001DA   0x6809             LDR      R1,[R1, #+0]
   \   000001DC   0x.... 0x....      BL       __aeabi_fadd
   \   000001E0   0x....             LDR.N    R1,??DataTable5_12
   \   000001E2   0x6008             STR      R0,[R1, #+0]
    302            ezInt = ezInt + ez * Ki;
   \   000001E4   0x9902             LDR      R1,[SP, #+8]
   \   000001E6   0x....             LDR.N    R0,??DataTable5_10  ;; 0x3c03126f
   \   000001E8   0x.... 0x....      BL       __aeabi_fmul
   \   000001EC   0x....             LDR.N    R1,??DataTable5_13
   \   000001EE   0x6809             LDR      R1,[R1, #+0]
   \   000001F0   0x.... 0x....      BL       __aeabi_fadd
   \   000001F4   0x....             LDR.N    R1,??DataTable5_13
   \   000001F6   0x6008             STR      R0,[R1, #+0]
    303          
    304            // adjusted gyroscope measurements
    305            gx = gx + Kp*ex + exInt;					   							//???ó2?PIoó213￥μ?íó?Yò?￡??′213￥á?μ??ˉò?
   \   000001F8   0x9904             LDR      R1,[SP, #+16]
   \   000001FA   0x....             LDR.N    R0,??DataTable5_14  ;; 0x41200000
   \   000001FC   0x.... 0x....      BL       __aeabi_fmul
   \   00000200   0x0021             MOVS     R1,R4
   \   00000202   0x.... 0x....      BL       __aeabi_fadd
   \   00000206   0x....             LDR.N    R1,??DataTable5_11
   \   00000208   0x6809             LDR      R1,[R1, #+0]
   \   0000020A   0x.... 0x....      BL       __aeabi_fadd
   \   0000020E   0x0004             MOVS     R4,R0
    306            gy = gy + Kp*ey + eyInt;
   \   00000210   0x9903             LDR      R1,[SP, #+12]
   \   00000212   0x....             LDR.N    R0,??DataTable5_14  ;; 0x41200000
   \   00000214   0x.... 0x....      BL       __aeabi_fmul
   \   00000218   0x0029             MOVS     R1,R5
   \   0000021A   0x.... 0x....      BL       __aeabi_fadd
   \   0000021E   0x....             LDR.N    R1,??DataTable5_12
   \   00000220   0x6809             LDR      R1,[R1, #+0]
   \   00000222   0x.... 0x....      BL       __aeabi_fadd
   \   00000226   0x0005             MOVS     R5,R0
    307            gz = gz + Kp*ez + ezInt;				   							//?aà?μ?gzóéóú??óD1?2a????DD???y?á2úéú?ˉò?￡?±í??3?à′μ??íê??y・?×????ò×???
   \   00000228   0x9902             LDR      R1,[SP, #+8]
   \   0000022A   0x....             LDR.N    R0,??DataTable5_14  ;; 0x41200000
   \   0000022C   0x.... 0x....      BL       __aeabi_fmul
   \   00000230   0x0031             MOVS     R1,R6
   \   00000232   0x.... 0x....      BL       __aeabi_fadd
   \   00000236   0x....             LDR.N    R1,??DataTable5_13
   \   00000238   0x6809             LDR      R1,[R1, #+0]
   \   0000023A   0x.... 0x....      BL       __aeabi_fadd
   \   0000023E   0x0006             MOVS     R6,R0
    308          
    309            // integrate quaternion rate and normalise						   //???a??μ??￠・?・?3ì
    310            q0 = q0 + (-q1*gx - q2*gy - q3*gz)*halfT;
   \   00000240   0x....             LDR.N    R0,??DataTable5_7
   \   00000242   0x6800             LDR      R0,[R0, #+0]
   \   00000244   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000248   0x0021             MOVS     R1,R4
   \   0000024A   0x.... 0x....      BL       __aeabi_fmul
   \   0000024E   0x9000             STR      R0,[SP, #+0]
   \   00000250   0x....             LDR.N    R0,??DataTable5_8
   \   00000252   0x6800             LDR      R0,[R0, #+0]
   \   00000254   0x0029             MOVS     R1,R5
   \   00000256   0x.... 0x....      BL       __aeabi_fmul
   \   0000025A   0x0001             MOVS     R1,R0
   \   0000025C   0x9800             LDR      R0,[SP, #+0]
   \   0000025E   0x.... 0x....      BL       __aeabi_fsub
   \   00000262   0x9000             STR      R0,[SP, #+0]
   \   00000264   0x....             LDR.N    R0,??DataTable5_9
   \   00000266   0x6800             LDR      R0,[R0, #+0]
   \   00000268   0x0031             MOVS     R1,R6
   \   0000026A   0x.... 0x....      BL       __aeabi_fmul
   \   0000026E   0x0001             MOVS     R1,R0
   \   00000270   0x9800             LDR      R0,[SP, #+0]
   \   00000272   0x.... 0x....      BL       __aeabi_fsub
   \   00000276   0x9901             LDR      R1,[SP, #+4]
   \   00000278   0x.... 0x....      BL       __aeabi_fmul
   \   0000027C   0x....             LDR.N    R1,??DataTable5_6
   \   0000027E   0x6809             LDR      R1,[R1, #+0]
   \   00000280   0x.... 0x....      BL       __aeabi_fadd
   \   00000284   0x....             LDR.N    R1,??DataTable5_6
   \   00000286   0x6008             STR      R0,[R1, #+0]
    311            q1 = q1 + (q0*gx + q2*gz - q3*gy)*halfT;
   \   00000288   0x....             LDR.N    R0,??DataTable5_6
   \   0000028A   0x6800             LDR      R0,[R0, #+0]
   \   0000028C   0x0021             MOVS     R1,R4
   \   0000028E   0x.... 0x....      BL       __aeabi_fmul
   \   00000292   0x9000             STR      R0,[SP, #+0]
   \   00000294   0x....             LDR.N    R0,??DataTable5_8
   \   00000296   0x6800             LDR      R0,[R0, #+0]
   \   00000298   0x0031             MOVS     R1,R6
   \   0000029A   0x.... 0x....      BL       __aeabi_fmul
   \   0000029E   0x9900             LDR      R1,[SP, #+0]
   \   000002A0   0x.... 0x....      BL       __aeabi_fadd
   \   000002A4   0x9000             STR      R0,[SP, #+0]
   \   000002A6   0x....             LDR.N    R0,??DataTable5_9
   \   000002A8   0x6800             LDR      R0,[R0, #+0]
   \   000002AA   0x0029             MOVS     R1,R5
   \   000002AC   0x.... 0x....      BL       __aeabi_fmul
   \   000002B0   0x0001             MOVS     R1,R0
   \   000002B2   0x9800             LDR      R0,[SP, #+0]
   \   000002B4   0x.... 0x....      BL       __aeabi_fsub
   \   000002B8   0x9901             LDR      R1,[SP, #+4]
   \   000002BA   0x.... 0x....      BL       __aeabi_fmul
   \   000002BE   0x....             LDR.N    R1,??DataTable5_7
   \   000002C0   0x6809             LDR      R1,[R1, #+0]
   \   000002C2   0x.... 0x....      BL       __aeabi_fadd
   \   000002C6   0x....             LDR.N    R1,??DataTable5_7
   \   000002C8   0x6008             STR      R0,[R1, #+0]
    312            q2 = q2 + (q0*gy - q1*gz + q3*gx)*halfT;
   \   000002CA   0x....             LDR.N    R0,??DataTable5_6
   \   000002CC   0x6800             LDR      R0,[R0, #+0]
   \   000002CE   0x0029             MOVS     R1,R5
   \   000002D0   0x.... 0x....      BL       __aeabi_fmul
   \   000002D4   0x9000             STR      R0,[SP, #+0]
   \   000002D6   0x....             LDR.N    R0,??DataTable5_7
   \   000002D8   0x6800             LDR      R0,[R0, #+0]
   \   000002DA   0x0031             MOVS     R1,R6
   \   000002DC   0x.... 0x....      BL       __aeabi_fmul
   \   000002E0   0x0001             MOVS     R1,R0
   \   000002E2   0x9800             LDR      R0,[SP, #+0]
   \   000002E4   0x.... 0x....      BL       __aeabi_fsub
   \   000002E8   0x9000             STR      R0,[SP, #+0]
   \   000002EA   0x....             LDR.N    R0,??DataTable5_9
   \   000002EC   0x6800             LDR      R0,[R0, #+0]
   \   000002EE   0x0021             MOVS     R1,R4
   \   000002F0   0x.... 0x....      BL       __aeabi_fmul
   \   000002F4   0x9900             LDR      R1,[SP, #+0]
   \   000002F6   0x.... 0x....      BL       __aeabi_fadd
   \   000002FA   0x9901             LDR      R1,[SP, #+4]
   \   000002FC   0x.... 0x....      BL       __aeabi_fmul
   \   00000300   0x....             LDR.N    R1,??DataTable5_8
   \   00000302   0x6809             LDR      R1,[R1, #+0]
   \   00000304   0x.... 0x....      BL       __aeabi_fadd
   \   00000308   0x....             LDR.N    R1,??DataTable5_8
   \   0000030A   0x6008             STR      R0,[R1, #+0]
    313            q3 = q3 + (q0*gz + q1*gy - q2*gx)*halfT;
   \   0000030C   0x....             LDR.N    R0,??DataTable5_6
   \   0000030E   0x6800             LDR      R0,[R0, #+0]
   \   00000310   0x0031             MOVS     R1,R6
   \   00000312   0x.... 0x....      BL       __aeabi_fmul
   \   00000316   0x9000             STR      R0,[SP, #+0]
   \   00000318   0x....             LDR.N    R0,??DataTable5_7
   \   0000031A   0x6800             LDR      R0,[R0, #+0]
   \   0000031C   0x0029             MOVS     R1,R5
   \   0000031E   0x.... 0x....      BL       __aeabi_fmul
   \   00000322   0x9900             LDR      R1,[SP, #+0]
   \   00000324   0x.... 0x....      BL       __aeabi_fadd
   \   00000328   0x9000             STR      R0,[SP, #+0]
   \   0000032A   0x....             LDR.N    R0,??DataTable5_8
   \   0000032C   0x6800             LDR      R0,[R0, #+0]
   \   0000032E   0x0021             MOVS     R1,R4
   \   00000330   0x.... 0x....      BL       __aeabi_fmul
   \   00000334   0x0001             MOVS     R1,R0
   \   00000336   0x9800             LDR      R0,[SP, #+0]
   \   00000338   0x.... 0x....      BL       __aeabi_fsub
   \   0000033C   0x9901             LDR      R1,[SP, #+4]
   \   0000033E   0x.... 0x....      BL       __aeabi_fmul
   \   00000342   0x....             LDR.N    R1,??DataTable5_9
   \   00000344   0x6809             LDR      R1,[R1, #+0]
   \   00000346   0x.... 0x....      BL       __aeabi_fadd
   \   0000034A   0x....             LDR.N    R1,??DataTable5_9
   \   0000034C   0x6008             STR      R0,[R1, #+0]
    314          
    315            // normalise quaternion
    316            norm = sqrt(q0*q0 + q1*q1 + q2*q2 + q3*q3);
   \   0000034E   0x....             LDR.N    R0,??DataTable5_6
   \   00000350   0x6801             LDR      R1,[R0, #+0]
   \   00000352   0x....             LDR.N    R0,??DataTable5_6
   \   00000354   0x6800             LDR      R0,[R0, #+0]
   \   00000356   0x.... 0x....      BL       __aeabi_fmul
   \   0000035A   0x9000             STR      R0,[SP, #+0]
   \   0000035C   0x....             LDR.N    R0,??DataTable5_7
   \   0000035E   0x6801             LDR      R1,[R0, #+0]
   \   00000360   0x....             LDR.N    R0,??DataTable5_7
   \   00000362   0x6800             LDR      R0,[R0, #+0]
   \   00000364   0x.... 0x....      BL       __aeabi_fmul
   \   00000368   0x9900             LDR      R1,[SP, #+0]
   \   0000036A   0x.... 0x....      BL       __aeabi_fadd
   \   0000036E   0x9000             STR      R0,[SP, #+0]
   \   00000370   0x....             LDR.N    R0,??DataTable5_8
   \   00000372   0x6801             LDR      R1,[R0, #+0]
   \   00000374   0x....             LDR.N    R0,??DataTable5_8
   \   00000376   0x6800             LDR      R0,[R0, #+0]
   \   00000378   0x.... 0x....      BL       __aeabi_fmul
   \   0000037C   0x9900             LDR      R1,[SP, #+0]
   \   0000037E   0x.... 0x....      BL       __aeabi_fadd
   \   00000382   0x9000             STR      R0,[SP, #+0]
   \   00000384   0x....             LDR.N    R0,??DataTable5_9
   \   00000386   0x6801             LDR      R1,[R0, #+0]
   \   00000388   0x....             LDR.N    R0,??DataTable5_9
   \   0000038A   0x6800             LDR      R0,[R0, #+0]
   \   0000038C   0x.... 0x....      BL       __aeabi_fmul
   \   00000390   0x9900             LDR      R1,[SP, #+0]
   \   00000392   0x.... 0x....      BL       __aeabi_fadd
   \   00000396   0x.... 0x....      BL       __aeabi_f2d
   \   0000039A   0x.... 0x....      BL       sqrt
   \   0000039E   0x.... 0x....      BL       __aeabi_d2f
   \   000003A2   0x4682             MOV      R10,R0
    317            q0 = q0 / norm;
   \   000003A4   0x....             LDR.N    R0,??DataTable5_6
   \   000003A6   0x6800             LDR      R0,[R0, #+0]
   \   000003A8   0x4651             MOV      R1,R10
   \   000003AA   0x.... 0x....      BL       __aeabi_fdiv
   \   000003AE   0x....             LDR.N    R1,??DataTable5_6
   \   000003B0   0x6008             STR      R0,[R1, #+0]
    318            q1 = q1 / norm;
   \   000003B2   0x....             LDR.N    R0,??DataTable5_7
   \   000003B4   0x6800             LDR      R0,[R0, #+0]
   \   000003B6   0x4651             MOV      R1,R10
   \   000003B8   0x.... 0x....      BL       __aeabi_fdiv
   \   000003BC   0x....             LDR.N    R1,??DataTable5_7
   \   000003BE   0x6008             STR      R0,[R1, #+0]
    319            q2 = q2 / norm;
   \   000003C0   0x....             LDR.N    R0,??DataTable5_8
   \   000003C2   0x6800             LDR      R0,[R0, #+0]
   \   000003C4   0x4651             MOV      R1,R10
   \   000003C6   0x.... 0x....      BL       __aeabi_fdiv
   \   000003CA   0x....             LDR.N    R1,??DataTable5_8
   \   000003CC   0x6008             STR      R0,[R1, #+0]
    320            q3 = q3 / norm;
   \   000003CE   0x....             LDR.N    R0,??DataTable5_9
   \   000003D0   0x6800             LDR      R0,[R0, #+0]
   \   000003D2   0x4651             MOV      R1,R10
   \   000003D4   0x.... 0x....      BL       __aeabi_fdiv
   \   000003D8   0x....             LDR.N    R1,??DataTable5_9
   \   000003DA   0x6008             STR      R0,[R1, #+0]
    321            
    322              attitude->w = q0;
   \   000003DC   0x980F             LDR      R0,[SP, #+60]
   \   000003DE   0x....             LDR.N    R1,??DataTable5_6
   \   000003E0   0x6809             LDR      R1,[R1, #+0]
   \   000003E2   0x6001             STR      R1,[R0, #+0]
    323              attitude->x = q1;
   \   000003E4   0x980F             LDR      R0,[SP, #+60]
   \   000003E6   0x....             LDR.N    R1,??DataTable5_7
   \   000003E8   0x6809             LDR      R1,[R1, #+0]
   \   000003EA   0x6041             STR      R1,[R0, #+4]
    324              attitude->y = q2;
   \   000003EC   0x980F             LDR      R0,[SP, #+60]
   \   000003EE   0x....             LDR.N    R1,??DataTable5_8
   \   000003F0   0x6809             LDR      R1,[R1, #+0]
   \   000003F2   0x6081             STR      R1,[R0, #+8]
    325              attitude->z = q3;
   \   000003F4   0x980F             LDR      R0,[SP, #+60]
   \   000003F6   0x....             LDR.N    R1,??DataTable5_9
   \   000003F8   0x6809             LDR      R1,[R1, #+0]
   \   000003FA   0x60C1             STR      R1,[R0, #+12]
    326          
    327          //  Q_ANGLE.Z = GYRO_I.Z;//atan2(2 * q1 * q2 + 2 * q0 * q3, -2 * q2*q2 - 2 * q3* q3 + 1)* 57.3; // yaw
    328          //  Q_ANGLE.Y = asin(-2 * q1 * q3 + 2 * q0* q2)* 57.3; // pitch
    329          //  Q_ANGLE.X = atan2(2 * q2 * q3 + 2 * q0 * q1, -2 * q1 * q1 - 2 * q2* q2 + 1)* 57.3; // roll
    330          }
   \                     ??IMUupdate_0:
   \   000003FC   0xB013             ADD      SP,SP,#+76
   \   000003FE   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     MIX_MAG_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     MIX_MAG_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     MIX_LONGTREM_FACTOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     MIX_MAG_VECTOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     MIX_ACC_VECTOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x3BA3D70A         DC32     0x3ba3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x3A83126F         DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ??FACTOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     q0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     q1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     q2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     q3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x3C03126F         DC32     0x3c03126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     exInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     eyInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     ezInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x41200000         DC32     0x41200000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  FuseAccMag
              16 -> FuseAccMagRotateMethod
       24  FuseAccMagRotateMethod
              24 -> quaternion_fromFourVectorRotation
      120  FuseAccMagSteepsetDescentMethod
             120 -> __aeabi_fadd
             120 -> __aeabi_fmul
             120 -> __aeabi_fsub
             120 -> math_rsqrt
             120 -> quaternion_normalize
       88  FuseAccSteepestDescentMethod
              88 -> __aeabi_fadd
              88 -> __aeabi_fmul
              88 -> __aeabi_fsub
              88 -> math_rsqrt
              88 -> quaternion_normalize
       48  FuseGyr
              48 -> __aeabi_fadd
              48 -> __aeabi_fdiv
              48 -> __aeabi_fmul
              48 -> __aeabi_fsub
              48 -> quaternion_normalize
      112  FuseGyrAccCrossMethod
             112 -> __aeabi_fadd
             112 -> __aeabi_fdiv
             112 -> __aeabi_fmul
             112 -> __aeabi_fsub
             112 -> math_rsqrt
             112 -> quaternion_normalize
      144  FuseGyrAccMagCrossMethod
             144 -> __aeabi_fadd
             144 -> __aeabi_fdiv
             144 -> __aeabi_fmul
             144 -> __aeabi_fsub
             144 -> math_rsqrt
             144 -> quaternion_normalize
        0  FuseInit
      112  IMUupdate
             112 -> __aeabi_cfcmpeq
             112 -> __aeabi_d2f
             112 -> __aeabi_f2d
             112 -> __aeabi_fadd
             112 -> __aeabi_fdiv
             112 -> __aeabi_fmul
             112 -> __aeabi_fsub
             112 -> sqrt


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  FACTOR
      20  FuseAccMag
      32  FuseAccMagRotateMethod
    1366  FuseAccMagSteepsetDescentMethod
     486  FuseAccSteepestDescentMethod
     296  FuseGyr
     640  FuseGyrAccCrossMethod
    1112  FuseGyrAccMagCrossMethod
       2  FuseInit
    1026  IMUupdate
      12  MIX_ACC_VECTOR
       4  MIX_LONGTREM_FACTOR
      12  MIX_MAG_VECTOR
       4  MIX_MAG_Y
       4  MIX_MAG_Z
       4  exInt
       4  eyInt
       4  ezInt
       4  q0
       4  q1
       4  q2
       4  q3

 
    24 bytes in section .bss
     8 bytes in section .data
    36 bytes in section .rodata
 5 048 bytes in section .text
 
 5 048 bytes of CODE  memory
    36 bytes of CONST memory
    32 bytes of DATA  memory

Errors: none
Warnings: none
