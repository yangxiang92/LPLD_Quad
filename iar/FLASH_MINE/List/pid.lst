###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     08/Aug/2014  19:52:14 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Control\pid.c                                            #
#    Command line =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\ #
#                    Control\pid.c -D LPLD_K60 -lCN                           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\ -lB E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\FLASH_MINE\List\ -o E:\ShawnDocuments\IAR_WorkSpa #
#                    ce\LPLD_Quad_V3\iar\FLASH_MINE\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\ #
#                    iar\..\source\app\Control\ -I                            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Others\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\app\Communicate\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\app\Algorithm\ -I E:\ShawnDocuments\IAR_WorkSpace\LPL #
#                    D_Quad_V3\iar\..\source\app\SignalProcess\ -I            #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_ #
#                    V3\iar\..\source\module\anbt_dmp\ -I                     #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\module\eMPL\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\CPU\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Q #
#                    uad_V3\iar\..\source\lib\LPLD\ -I                        #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\LPLD\HW\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_ #
#                    Quad_V3\iar\..\source\lib\LPLD\DEV\ -I                   #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\uCOS-II\Ports\ -I E:\ShawnDocuments\IAR_WorkSpace #
#                    \LPLD_Quad_V3\iar\..\source\lib\uCOS-II\Source\ -I       #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\FatFs\ -I E:\ShawnDocuments\IAR_WorkSpace\LPLD_Qu #
#                    ad_V3\iar\..\source\lib\FatFs\option\ -I                 #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\common\ -I E:\ShawnDocuments\IAR_WorkSpace\LP #
#                    LD_Quad_V3\iar\..\source\lib\USB\driver\ -I              #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\USB\descriptor\ -I E:\ShawnDocuments\IAR_WorkSpac #
#                    e\LPLD_Quad_V3\iar\..\source\lib\USB\class\ -I           #
#                    E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\..\sour #
#                    ce\lib\MyLib\ -On -I "D:\Program Files\IAR               #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\" -D    #
#                    ARM_MATH_CM4                                             #
#    List file    =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\List\pid.lst                                         #
#    Object file  =  E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\iar\FLASH_M #
#                    INE\Obj\pid.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShawnDocuments\IAR_WorkSpace\LPLD_Quad_V3\source\app\Control\pid.c
      1          /****************************************************************************** 
      2           *       pid.c ----- The PID Controller                                       *
      3           *       (c) Copyright 2012 HUST RENESAS LAB,The Department of CSE, HUST       *
      4           *                        All Rights Reserved                                  *
      5           *Filename             :  pid.c                                           *
      6           *Programmer(s)        :  Yang Xiang                                           *
      7           *Description          :                                                       *
      8           *Modification History :                                                       *
      9           *01a 2014/4/14 14:04:21                                                       *
     10           ******************************************************************************/
     11          #include "pid.h"

   \                                 In section .bss, align 4
     12          static PID_Parameters s_sXYZPidParameter[3];
   \                     s_sXYZPidParameter:
   \   00000000                      DS8 60

   \                                 In section .bss, align 4
     13          static PID_Data s_sXYZPidData[3];
   \                     s_sXYZPidData:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
     14          static PID_Parameters s_sHeightPidParameter;
   \                     s_sHeightPidParameter:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     15          static PID_Data s_sHeightPidData;
   \                     s_sHeightPidData:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     16          static PID_Parameters s_sPositionPidParameter[2];
   \                     s_sPositionPidParameter:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     17          static PID_Data s_sPositionPidData[2];
   \                     s_sPositionPidData:
   \   00000000                      DS8 16
     18          

   \                                 In section .text, align 2, keep-with-next
     19          void InitPID(PID_Parameters xyz_pid_para[3])
     20          {
   \                     InitPID:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     21              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     22          
     23              for(i = 0; i < 3; i++)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x0005             MOVS     R5,R0
   \                     ??InitPID_0:
   \   0000000A   0x2D03             CMP      R5,#+3
   \   0000000C   0xDA17             BGE.N    ??InitPID_1
     24              {
     25                  s_sXYZPidParameter[i] = xyz_pid_para[i];
   \   0000000E   0x2014             MOVS     R0,#+20
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000014   0xFB00 0x1005      MLA      R0,R0,R5,R1
   \   00000018   0x2114             MOVS     R1,#+20
   \   0000001A   0xFB01 0x4105      MLA      R1,R1,R5,R4
   \   0000001E   0x2214             MOVS     R2,#+20
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy4
     26                  s_sXYZPidData[i].pre_data = 0;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0xF840 0x1035      STR      R1,[R0, R5, LSL #+3]
     27                  s_sXYZPidData[i].integration = 0;
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000032   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x6041             STR      R1,[R0, #+4]
     28              }
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7E5             B.N      ??InitPID_0
     29          }
   \                     ??InitPID_1:
   \   0000003E   0xBD30             POP      {R4,R5,PC}       ;; return
     30          

   \                                 In section .text, align 2, keep-with-next
     31          void PIDInterate(float input[3], float output[3])
     32          {
   \                     PIDInterate:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
     33              int i = 0;
   \   00000008   0x2600             MOVS     R6,#+0
     34          
     35              float p_output = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
     36              float i_output = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
     37              float d_output = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
     38          
     39              for(i = 0; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??PIDInterate_0:
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xF280 0x80B2      BGE.W    ??PIDInterate_1
     40              {
     41                  p_output = s_sXYZPidParameter[i].p * input[i];
   \   0000001E   0x2014             MOVS     R0,#+20
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000024   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   0000002E   0x.... 0x....      BL       __aeabi_fmul
   \   00000032   0x0007             MOVS     R7,R0
     42          
     43                  if(s_sXYZPidParameter[i].i == 0)
   \   00000034   0x2014             MOVS     R0,#+20
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000003A   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   0000003E   0x6840             LDR      R0,[R0, #+4]
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000046   0xD102             BNE.N    ??PIDInterate_2
     44                  {
     45                      i_output = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x4680             MOV      R8,R0
   \   0000004C   0xE077             B.N      ??PIDInterate_3
     46                  }
     47                  else
     48                  {
     49                      s_sXYZPidData[i].integration += input[i];
   \                     ??PIDInterate_2:
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000052   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000056   0x6841             LDR      R1,[R0, #+4]
   \   00000058   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   0000005C   0x.... 0x....      BL       __aeabi_fadd
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000064   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   00000068   0x6048             STR      R0,[R1, #+4]
     50                      if(s_sXYZPidData[i].integration > (s_sXYZPidParameter[i].i_limit))
   \   0000006A   0x2014             MOVS     R0,#+20
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000070   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000074   0x68C0             LDR      R0,[R0, #+12]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000007A   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   0000007E   0x6849             LDR      R1,[R1, #+4]
   \   00000080   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000084   0xD20A             BCS.N    ??PIDInterate_4
     51                      {
     52                          s_sXYZPidData[i].integration = (s_sXYZPidParameter[i].i_limit);
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000008A   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   0000008E   0x2114             MOVS     R1,#+20
   \   00000090   0x.... 0x....      LDR.W    R2,??DataTable6
   \   00000094   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   00000098   0x68C9             LDR      R1,[R1, #+12]
   \   0000009A   0x6041             STR      R1,[R0, #+4]
     53                      }
     54                      if(s_sXYZPidData[i].integration < (-s_sXYZPidParameter[i].i_limit))
   \                     ??PIDInterate_4:
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000A0   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000A4   0x6840             LDR      R0,[R0, #+4]
   \   000000A6   0x2114             MOVS     R1,#+20
   \   000000A8   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000AC   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000B0   0x68C9             LDR      R1,[R1, #+12]
   \   000000B2   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000B6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BA   0xD20C             BCS.N    ??PIDInterate_5
     55                      {
     56                          s_sXYZPidData[i].integration = (-s_sXYZPidParameter[i].i_limit);
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000C0   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000C4   0x2114             MOVS     R1,#+20
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000CA   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000CE   0x68C9             LDR      R1,[R1, #+12]
   \   000000D0   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000D4   0x6041             STR      R1,[R0, #+4]
     57                      }
     58                      i_output = s_sXYZPidParameter[i].i * s_sXYZPidData[i].integration;
   \                     ??PIDInterate_5:
   \   000000D6   0x2014             MOVS     R0,#+20
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000000DC   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   000000E0   0x6841             LDR      R1,[R0, #+4]
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000E6   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000EA   0x6840             LDR      R0,[R0, #+4]
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x4680             MOV      R8,R0
     59                      if(i_output < -s_sXYZPidParameter[i].i_output_limit)
   \   000000F2   0x4640             MOV      R0,R8
   \   000000F4   0x2114             MOVS     R1,#+20
   \   000000F6   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000FA   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000FE   0x6909             LDR      R1,[R1, #+16]
   \   00000100   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000104   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000108   0xD208             BCS.N    ??PIDInterate_6
     60                      {
     61                          i_output = -s_sXYZPidParameter[i].i_output_limit;
   \   0000010A   0x2014             MOVS     R0,#+20
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000110   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000114   0x6900             LDR      R0,[R0, #+16]
   \   00000116   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000011A   0x4680             MOV      R8,R0
     62                      }
     63                      if(i_output > s_sXYZPidParameter[i].i_output_limit)
   \                     ??PIDInterate_6:
   \   0000011C   0x2014             MOVS     R0,#+20
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000122   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000126   0x6900             LDR      R0,[R0, #+16]
   \   00000128   0x4641             MOV      R1,R8
   \   0000012A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000012E   0xD206             BCS.N    ??PIDInterate_3
     64                      {
     65                          i_output = s_sXYZPidParameter[i].i_output_limit;
   \   00000130   0x2014             MOVS     R0,#+20
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000136   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   0000013A   0x6900             LDR      R0,[R0, #+16]
   \   0000013C   0x4680             MOV      R8,R0
     66                      }
     67                  }
     68          
     69                  d_output = s_sXYZPidParameter[i].d * (input[i] - s_sXYZPidData[i].pre_data);
   \                     ??PIDInterate_3:
   \   0000013E   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000146   0xF851 0x1036      LDR      R1,[R1, R6, LSL #+3]
   \   0000014A   0x.... 0x....      BL       __aeabi_fsub
   \   0000014E   0x2114             MOVS     R1,#+20
   \   00000150   0x.... 0x....      LDR.W    R2,??DataTable6
   \   00000154   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   00000158   0x6889             LDR      R1,[R1, #+8]
   \   0000015A   0x.... 0x....      BL       __aeabi_fmul
   \   0000015E   0x4681             MOV      R9,R0
     70          
     71                  output[i] = p_output + i_output + d_output;
   \   00000160   0x0038             MOVS     R0,R7
   \   00000162   0x4641             MOV      R1,R8
   \   00000164   0x.... 0x....      BL       __aeabi_fadd
   \   00000168   0x4649             MOV      R1,R9
   \   0000016A   0x.... 0x....      BL       __aeabi_fadd
   \   0000016E   0xF845 0x0026      STR      R0,[R5, R6, LSL #+2]
     72          
     73                  s_sXYZPidData[i].pre_data = input[i];
   \   00000172   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000017A   0xF841 0x0036      STR      R0,[R1, R6, LSL #+3]
     74              }
   \   0000017E   0x1C76             ADDS     R6,R6,#+1
   \   00000180   0xE74A             B.N      ??PIDInterate_0
     75          }
   \                     ??PIDInterate_1:
   \   00000182   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
     76          

   \                                 In section .text, align 2, keep-with-next
     77          void SAS_PIDInterate(float input[3], float output[3])
     78          {
   \                     SAS_PIDInterate:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x468B             MOV      R11,R1
     79              int i = 0;
   \   00000008   0x2600             MOVS     R6,#+0
     80          
     81              float p_output = 0;
   \   0000000A   0xF05F 0x0A00      MOVS     R10,#+0
     82              float i_output = 0;
   \   0000000E   0x2700             MOVS     R7,#+0
     83              float d_output = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
     84          
     85              for(i = 0; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??SAS_PIDInterate_0:
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xF280 0x80BF      BGE.W    ??SAS_PIDInterate_1
     86              {
     87                  p_output = s_sXYZPidParameter[i].p * input[i];
   \   0000001E   0x2014             MOVS     R0,#+20
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000024   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0xF858 0x0026      LDR      R0,[R8, R6, LSL #+2]
   \   0000002E   0x.... 0x....      BL       __aeabi_fmul
   \   00000032   0x4682             MOV      R10,R0
     88          
     89                  if(s_sXYZPidParameter[i].i == 0)
   \   00000034   0x2014             MOVS     R0,#+20
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000003A   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   0000003E   0x6840             LDR      R0,[R0, #+4]
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000046   0xD102             BNE.N    ??SAS_PIDInterate_2
     90                  {
     91                      i_output = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x0007             MOVS     R7,R0
   \   0000004C   0xE073             B.N      ??SAS_PIDInterate_3
     92                  }
     93                  else
     94                  {
     95                      s_sXYZPidData[i].integration += input[i];
   \                     ??SAS_PIDInterate_2:
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000052   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000056   0x6841             LDR      R1,[R0, #+4]
   \   00000058   0xF858 0x0026      LDR      R0,[R8, R6, LSL #+2]
   \   0000005C   0x.... 0x....      BL       __aeabi_fadd
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000064   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   00000068   0x6048             STR      R0,[R1, #+4]
     96                      if(s_sXYZPidData[i].integration > (s_sXYZPidParameter[i].i_limit))
   \   0000006A   0x2014             MOVS     R0,#+20
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000070   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000074   0x68C0             LDR      R0,[R0, #+12]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000007A   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   0000007E   0x6849             LDR      R1,[R1, #+4]
   \   00000080   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000084   0xD20A             BCS.N    ??SAS_PIDInterate_4
     97                      {
     98                          s_sXYZPidData[i].integration = (s_sXYZPidParameter[i].i_limit);
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000008A   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   0000008E   0x2114             MOVS     R1,#+20
   \   00000090   0x.... 0x....      LDR.W    R2,??DataTable6
   \   00000094   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   00000098   0x68C9             LDR      R1,[R1, #+12]
   \   0000009A   0x6041             STR      R1,[R0, #+4]
     99                      }
    100                      if(s_sXYZPidData[i].integration < (-s_sXYZPidParameter[i].i_limit))
   \                     ??SAS_PIDInterate_4:
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000A0   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000A4   0x6840             LDR      R0,[R0, #+4]
   \   000000A6   0x2114             MOVS     R1,#+20
   \   000000A8   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000AC   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000B0   0x68C9             LDR      R1,[R1, #+12]
   \   000000B2   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000B6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BA   0xD20C             BCS.N    ??SAS_PIDInterate_5
    101                      {
    102                          s_sXYZPidData[i].integration = (-s_sXYZPidParameter[i].i_limit);
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000C0   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000C4   0x2114             MOVS     R1,#+20
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000CA   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000CE   0x68C9             LDR      R1,[R1, #+12]
   \   000000D0   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000D4   0x6041             STR      R1,[R0, #+4]
    103                      }
    104                      i_output = s_sXYZPidParameter[i].i * s_sXYZPidData[i].integration;
   \                     ??SAS_PIDInterate_5:
   \   000000D6   0x2014             MOVS     R0,#+20
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000000DC   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   000000E0   0x6841             LDR      R1,[R0, #+4]
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000E6   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000EA   0x6840             LDR      R0,[R0, #+4]
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x0007             MOVS     R7,R0
    105                      if(i_output < -s_sXYZPidParameter[i].i_output_limit)
   \   000000F2   0x0038             MOVS     R0,R7
   \   000000F4   0x2114             MOVS     R1,#+20
   \   000000F6   0x....             LDR.N    R2,??DataTable6
   \   000000F8   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000FC   0x6909             LDR      R1,[R1, #+16]
   \   000000FE   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000102   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000106   0xD207             BCS.N    ??SAS_PIDInterate_6
    106                      {
    107                          i_output = -s_sXYZPidParameter[i].i_output_limit;
   \   00000108   0x2014             MOVS     R0,#+20
   \   0000010A   0x....             LDR.N    R1,??DataTable6
   \   0000010C   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000110   0x6900             LDR      R0,[R0, #+16]
   \   00000112   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000116   0x0007             MOVS     R7,R0
    108                      }
    109                      if(i_output > s_sXYZPidParameter[i].i_output_limit)
   \                     ??SAS_PIDInterate_6:
   \   00000118   0x2014             MOVS     R0,#+20
   \   0000011A   0x....             LDR.N    R1,??DataTable6
   \   0000011C   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000120   0x6900             LDR      R0,[R0, #+16]
   \   00000122   0x0039             MOVS     R1,R7
   \   00000124   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000128   0xD205             BCS.N    ??SAS_PIDInterate_3
    110                      {
    111                          i_output = s_sXYZPidParameter[i].i_output_limit;
   \   0000012A   0x2014             MOVS     R0,#+20
   \   0000012C   0x....             LDR.N    R1,??DataTable6
   \   0000012E   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000132   0x6900             LDR      R0,[R0, #+16]
   \   00000134   0x0007             MOVS     R7,R0
    112                      }
    113                  }
    114          
    115                  d_output = - s_sXYZPidParameter[i].d * sin(GyrFilterGetCurrent()[i]) * 2 * (PROGRAM_PERIOD_MS * 0.001);
   \                     ??SAS_PIDInterate_3:
   \   00000136   0x.... 0x....      BL       GyrFilterGetCurrent
   \   0000013A   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000013E   0x.... 0x....      BL       __aeabi_f2d
   \   00000142   0x.... 0x....      BL       sin
   \   00000146   0x0004             MOVS     R4,R0
   \   00000148   0x000D             MOVS     R5,R1
   \   0000014A   0x2014             MOVS     R0,#+20
   \   0000014C   0x....             LDR.N    R1,??DataTable6
   \   0000014E   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000152   0x6880             LDR      R0,[R0, #+8]
   \   00000154   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000158   0x.... 0x....      BL       __aeabi_f2d
   \   0000015C   0x0022             MOVS     R2,R4
   \   0000015E   0x002B             MOVS     R3,R5
   \   00000160   0x.... 0x....      BL       __aeabi_dmul
   \   00000164   0x2200             MOVS     R2,#+0
   \   00000166   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000016A   0x.... 0x....      BL       __aeabi_dmul
   \   0000016E   0x....             LDR.N    R2,??DataTable6_2  ;; 0xd2f1a9fc
   \   00000170   0x....             LDR.N    R3,??DataTable6_3  ;; 0x3f70624d
   \   00000172   0x.... 0x....      BL       __aeabi_dmul
   \   00000176   0x.... 0x....      BL       __aeabi_d2f
   \   0000017A   0x4681             MOV      R9,R0
    116          
    117                  output[i] = p_output + i_output + d_output;
   \   0000017C   0x4650             MOV      R0,R10
   \   0000017E   0x0039             MOVS     R1,R7
   \   00000180   0x.... 0x....      BL       __aeabi_fadd
   \   00000184   0x4649             MOV      R1,R9
   \   00000186   0x.... 0x....      BL       __aeabi_fadd
   \   0000018A   0xF84B 0x0026      STR      R0,[R11, R6, LSL #+2]
    118          
    119                  s_sXYZPidData[i].pre_data = input[i];
   \   0000018E   0xF858 0x0026      LDR      R0,[R8, R6, LSL #+2]
   \   00000192   0x....             LDR.N    R1,??DataTable6_1
   \   00000194   0xF841 0x0036      STR      R0,[R1, R6, LSL #+3]
    120              }    
   \   00000198   0x1C76             ADDS     R6,R6,#+1
   \   0000019A   0xE73D             B.N      ??SAS_PIDInterate_0
    121          }
   \                     ??SAS_PIDInterate_1:
   \   0000019C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    122          

   \                                 In section .text, align 2, keep-with-next
    123          void InitHeightPID(PID_Parameters height_pid_para)
    124          {
   \                     InitHeightPID:
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB500             PUSH     {LR}
    125              s_sHeightPidParameter = height_pid_para;
   \   00000004   0x....             LDR.N    R0,??DataTable6_4
   \   00000006   0xA901             ADD      R1,SP,#+4
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
    126              s_sHeightPidData.pre_data = 0;
   \   0000000E   0x....             LDR.N    R0,??DataTable6_5
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x6001             STR      R1,[R0, #+0]
    127              s_sHeightPidData.integration = 0;
   \   00000014   0x....             LDR.N    R0,??DataTable6_5
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x6041             STR      R1,[R0, #+4]
    128          }
   \   0000001A   0xF85D 0xFB14      LDR      PC,[SP], #+20    ;; return
    129          

   \                                 In section .text, align 2, keep-with-next
    130          float HeightPIDInterate(float height_err)
    131          {
   \                     HeightPIDInterate:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
    132              float output = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    133          
    134              float p_output = 0;
   \   00000008   0x2600             MOVS     R6,#+0
    135              float i_output = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
    136              float d_output = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    137          
    138              p_output = s_sHeightPidParameter.p * height_err;
   \   00000010   0x....             LDR.N    R0,??DataTable6_4
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0x.... 0x....      BL       __aeabi_fmul
   \   0000001A   0x0006             MOVS     R6,R0
    139          
    140              if(s_sHeightPidParameter.i == 0)
   \   0000001C   0x....             LDR.N    R0,??DataTable6_4
   \   0000001E   0x6840             LDR      R0,[R0, #+4]
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000026   0xD102             BNE.N    ??HeightPIDInterate_0
    141              {
    142                  i_output = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x0007             MOVS     R7,R0
   \   0000002C   0xE03D             B.N      ??HeightPIDInterate_1
    143              }
    144              else
    145              {
    146                  s_sHeightPidData.integration += height_err;
   \                     ??HeightPIDInterate_0:
   \   0000002E   0x....             LDR.N    R0,??DataTable6_5
   \   00000030   0x6840             LDR      R0,[R0, #+4]
   \   00000032   0x0021             MOVS     R1,R4
   \   00000034   0x.... 0x....      BL       __aeabi_fadd
   \   00000038   0x....             LDR.N    R1,??DataTable6_5
   \   0000003A   0x6048             STR      R0,[R1, #+4]
    147                  if(s_sHeightPidData.integration > (s_sHeightPidParameter.i_limit))
   \   0000003C   0x....             LDR.N    R0,??DataTable6_4
   \   0000003E   0x68C0             LDR      R0,[R0, #+12]
   \   00000040   0x....             LDR.N    R1,??DataTable6_5
   \   00000042   0x6849             LDR      R1,[R1, #+4]
   \   00000044   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000048   0xD203             BCS.N    ??HeightPIDInterate_2
    148                  {
    149                      s_sHeightPidData.integration = (s_sHeightPidParameter.i_limit);
   \   0000004A   0x....             LDR.N    R0,??DataTable6_5
   \   0000004C   0x....             LDR.N    R1,??DataTable6_4
   \   0000004E   0x68C9             LDR      R1,[R1, #+12]
   \   00000050   0x6041             STR      R1,[R0, #+4]
    150                  }
    151                  if(s_sHeightPidData.integration < (-s_sHeightPidParameter.i_limit))
   \                     ??HeightPIDInterate_2:
   \   00000052   0x....             LDR.N    R0,??DataTable6_5
   \   00000054   0x6840             LDR      R0,[R0, #+4]
   \   00000056   0x....             LDR.N    R1,??DataTable6_4
   \   00000058   0x68C9             LDR      R1,[R1, #+12]
   \   0000005A   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000005E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000062   0xD205             BCS.N    ??HeightPIDInterate_3
    152                  {
    153                      s_sHeightPidData.integration = (-s_sHeightPidParameter.i_limit);
   \   00000064   0x....             LDR.N    R0,??DataTable6_5
   \   00000066   0x....             LDR.N    R1,??DataTable6_4
   \   00000068   0x68C9             LDR      R1,[R1, #+12]
   \   0000006A   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000006E   0x6041             STR      R1,[R0, #+4]
    154                  }
    155                  i_output = s_sHeightPidParameter.i * s_sHeightPidData.integration;
   \                     ??HeightPIDInterate_3:
   \   00000070   0x....             LDR.N    R0,??DataTable6_4
   \   00000072   0x6841             LDR      R1,[R0, #+4]
   \   00000074   0x....             LDR.N    R0,??DataTable6_5
   \   00000076   0x6840             LDR      R0,[R0, #+4]
   \   00000078   0x.... 0x....      BL       __aeabi_fmul
   \   0000007C   0x0007             MOVS     R7,R0
    156                  if(i_output < -s_sHeightPidParameter.i_output_limit)
   \   0000007E   0x0038             MOVS     R0,R7
   \   00000080   0x....             LDR.N    R1,??DataTable6_4
   \   00000082   0x6909             LDR      R1,[R1, #+16]
   \   00000084   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000088   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000008C   0xD204             BCS.N    ??HeightPIDInterate_4
    157                  {
    158                      i_output = -s_sHeightPidParameter.i_output_limit;
   \   0000008E   0x....             LDR.N    R0,??DataTable6_4
   \   00000090   0x6900             LDR      R0,[R0, #+16]
   \   00000092   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000096   0x0007             MOVS     R7,R0
    159                  }
    160                  if(i_output > s_sHeightPidParameter.i_output_limit)
   \                     ??HeightPIDInterate_4:
   \   00000098   0x....             LDR.N    R0,??DataTable6_4
   \   0000009A   0x6900             LDR      R0,[R0, #+16]
   \   0000009C   0x0039             MOVS     R1,R7
   \   0000009E   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A2   0xD202             BCS.N    ??HeightPIDInterate_1
    161                  {
    162                      i_output = s_sHeightPidParameter.i_output_limit;
   \   000000A4   0x....             LDR.N    R0,??DataTable6_4
   \   000000A6   0x6900             LDR      R0,[R0, #+16]
   \   000000A8   0x0007             MOVS     R7,R0
    163                  }
    164              }
    165          
    166              d_output = s_sHeightPidParameter.d * (height_err - s_sHeightPidData.pre_data);
   \                     ??HeightPIDInterate_1:
   \   000000AA   0x0020             MOVS     R0,R4
   \   000000AC   0x....             LDR.N    R1,??DataTable6_5
   \   000000AE   0x6809             LDR      R1,[R1, #+0]
   \   000000B0   0x.... 0x....      BL       __aeabi_fsub
   \   000000B4   0x....             LDR.N    R1,??DataTable6_4
   \   000000B6   0x6889             LDR      R1,[R1, #+8]
   \   000000B8   0x.... 0x....      BL       __aeabi_fmul
   \   000000BC   0x4680             MOV      R8,R0
    167          
    168              s_sHeightPidData.pre_data = height_err;
   \   000000BE   0x....             LDR.N    R0,??DataTable6_5
   \   000000C0   0x6004             STR      R4,[R0, #+0]
    169          
    170              output = p_output + i_output + d_output;
   \   000000C2   0x0030             MOVS     R0,R6
   \   000000C4   0x0039             MOVS     R1,R7
   \   000000C6   0x.... 0x....      BL       __aeabi_fadd
   \   000000CA   0x4641             MOV      R1,R8
   \   000000CC   0x.... 0x....      BL       __aeabi_fadd
   \   000000D0   0x0005             MOVS     R5,R0
    171          
    172              return output;
   \   000000D2   0x0028             MOVS     R0,R5
   \   000000D4   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    173          }
    174          

   \                                 In section .text, align 2, keep-with-next
    175          void InitPositionPID(PID_Parameters position_pid_para[2])
    176          {
   \                     InitPositionPID:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    177              int i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    178              for(i = 0; i < 2; i++)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x0005             MOVS     R5,R0
   \                     ??InitPositionPID_0:
   \   0000000A   0x2D02             CMP      R5,#+2
   \   0000000C   0xDA14             BGE.N    ??InitPositionPID_1
    179              {
    180                  s_sPositionPidParameter[i] = position_pid_para[i];
   \   0000000E   0x2014             MOVS     R0,#+20
   \   00000010   0x....             LDR.N    R1,??DataTable6_6
   \   00000012   0xFB00 0x1005      MLA      R0,R0,R5,R1
   \   00000016   0x2114             MOVS     R1,#+20
   \   00000018   0xFB01 0x4105      MLA      R1,R1,R5,R4
   \   0000001C   0x2214             MOVS     R2,#+20
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
    181                  s_sPositionPidData[i].pre_data = 0;
   \   00000022   0x....             LDR.N    R0,??DataTable6_7
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0xF840 0x1035      STR      R1,[R0, R5, LSL #+3]
    182                  s_sPositionPidData[i].integration = 0;        
   \   0000002A   0x....             LDR.N    R0,??DataTable6_7
   \   0000002C   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x6041             STR      R1,[R0, #+4]
    183              }
   \   00000034   0x1C6D             ADDS     R5,R5,#+1
   \   00000036   0xE7E8             B.N      ??InitPositionPID_0
    184          }
   \                     ??InitPositionPID_1:
   \   00000038   0xBD30             POP      {R4,R5,PC}       ;; return
    185          

   \                                 In section .text, align 2, keep-with-next
    186          void PositionPIDInterate(float input[2], float output[2])
    187          {
   \                     PositionPIDInterate:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    188              int i = 0;
   \   00000008   0x2600             MOVS     R6,#+0
    189          
    190              float p_output = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
    191              float i_output = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    192              float d_output = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    193          
    194              for(i = 0; i < 2; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??PositionPIDInterate_0:
   \   00000018   0x2E02             CMP      R6,#+2
   \   0000001A   0xF280 0x80A4      BGE.W    ??PositionPIDInterate_1
    195              {
    196                  p_output = s_sPositionPidParameter[i].p * input[i];
   \   0000001E   0x2014             MOVS     R0,#+20
   \   00000020   0x....             LDR.N    R1,??DataTable6_6
   \   00000022   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000026   0x6801             LDR      R1,[R0, #+0]
   \   00000028   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x0007             MOVS     R7,R0
    197          
    198                  if(s_sPositionPidParameter[i].i == 0)
   \   00000032   0x2014             MOVS     R0,#+20
   \   00000034   0x....             LDR.N    R1,??DataTable6_6
   \   00000036   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   0000003A   0x6840             LDR      R0,[R0, #+4]
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000042   0xD102             BNE.N    ??PositionPIDInterate_2
    199                  {
    200                      i_output = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
   \   00000048   0xE067             B.N      ??PositionPIDInterate_3
    201                  }
    202                  else
    203                  {
    204                      s_sPositionPidData[i].integration += input[i];
   \                     ??PositionPIDInterate_2:
   \   0000004A   0x....             LDR.N    R0,??DataTable6_7
   \   0000004C   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000050   0x6841             LDR      R1,[R0, #+4]
   \   00000052   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   00000056   0x.... 0x....      BL       __aeabi_fadd
   \   0000005A   0x....             LDR.N    R1,??DataTable6_7
   \   0000005C   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   00000060   0x6048             STR      R0,[R1, #+4]
    205                      if(s_sPositionPidData[i].integration > (s_sPositionPidParameter[i].i_limit))
   \   00000062   0x2014             MOVS     R0,#+20
   \   00000064   0x....             LDR.N    R1,??DataTable6_6
   \   00000066   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   0000006A   0x68C0             LDR      R0,[R0, #+12]
   \   0000006C   0x....             LDR.N    R1,??DataTable6_7
   \   0000006E   0xEB11 0x01C6      ADDS     R1,R1,R6, LSL #+3
   \   00000072   0x6849             LDR      R1,[R1, #+4]
   \   00000074   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000078   0xD208             BCS.N    ??PositionPIDInterate_4
    206                      {
    207                          s_sPositionPidData[i].integration = (s_sPositionPidParameter[i].i_limit);
   \   0000007A   0x....             LDR.N    R0,??DataTable6_7
   \   0000007C   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000080   0x2114             MOVS     R1,#+20
   \   00000082   0x....             LDR.N    R2,??DataTable6_6
   \   00000084   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   00000088   0x68C9             LDR      R1,[R1, #+12]
   \   0000008A   0x6041             STR      R1,[R0, #+4]
    208                      }
    209                      if(s_sPositionPidData[i].integration < (-s_sPositionPidParameter[i].i_limit))
   \                     ??PositionPIDInterate_4:
   \   0000008C   0x....             LDR.N    R0,??DataTable6_7
   \   0000008E   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000092   0x6840             LDR      R0,[R0, #+4]
   \   00000094   0x2114             MOVS     R1,#+20
   \   00000096   0x....             LDR.N    R2,??DataTable6_6
   \   00000098   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   0000009C   0x68C9             LDR      R1,[R1, #+12]
   \   0000009E   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000A2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A6   0xD20A             BCS.N    ??PositionPIDInterate_5
    210                      {
    211                          s_sPositionPidData[i].integration = (-s_sPositionPidParameter[i].i_limit);
   \   000000A8   0x....             LDR.N    R0,??DataTable6_7
   \   000000AA   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000AE   0x2114             MOVS     R1,#+20
   \   000000B0   0x....             LDR.N    R2,??DataTable6_6
   \   000000B2   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000B6   0x68C9             LDR      R1,[R1, #+12]
   \   000000B8   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000BC   0x6041             STR      R1,[R0, #+4]
    212                      }
    213                      i_output = s_sPositionPidParameter[i].i * s_sPositionPidData[i].integration;
   \                     ??PositionPIDInterate_5:
   \   000000BE   0x2014             MOVS     R0,#+20
   \   000000C0   0x....             LDR.N    R1,??DataTable6_6
   \   000000C2   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   000000C6   0x6841             LDR      R1,[R0, #+4]
   \   000000C8   0x....             LDR.N    R0,??DataTable6_7
   \   000000CA   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   000000CE   0x6840             LDR      R0,[R0, #+4]
   \   000000D0   0x.... 0x....      BL       __aeabi_fmul
   \   000000D4   0x4680             MOV      R8,R0
    214                      if(i_output < -s_sPositionPidParameter[i].i_output_limit)
   \   000000D6   0x4640             MOV      R0,R8
   \   000000D8   0x2114             MOVS     R1,#+20
   \   000000DA   0x....             LDR.N    R2,??DataTable6_6
   \   000000DC   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   000000E0   0x6909             LDR      R1,[R1, #+16]
   \   000000E2   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000E6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EA   0xD207             BCS.N    ??PositionPIDInterate_6
    215                      {
    216                          i_output = -s_sPositionPidParameter[i].i_output_limit;
   \   000000EC   0x2014             MOVS     R0,#+20
   \   000000EE   0x....             LDR.N    R1,??DataTable6_6
   \   000000F0   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   000000F4   0x6900             LDR      R0,[R0, #+16]
   \   000000F6   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000000FA   0x4680             MOV      R8,R0
    217                      }
    218                      if(i_output > s_sPositionPidParameter[i].i_output_limit)
   \                     ??PositionPIDInterate_6:
   \   000000FC   0x2014             MOVS     R0,#+20
   \   000000FE   0x....             LDR.N    R1,??DataTable6_6
   \   00000100   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000104   0x6900             LDR      R0,[R0, #+16]
   \   00000106   0x4641             MOV      R1,R8
   \   00000108   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000010C   0xD205             BCS.N    ??PositionPIDInterate_3
    219                      {
    220                          i_output = s_sPositionPidParameter[i].i_output_limit;
   \   0000010E   0x2014             MOVS     R0,#+20
   \   00000110   0x....             LDR.N    R1,??DataTable6_6
   \   00000112   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000116   0x6900             LDR      R0,[R0, #+16]
   \   00000118   0x4680             MOV      R8,R0
    221                      }
    222                  }
    223          
    224                  d_output = s_sPositionPidParameter[i].d * (input[i] - s_sPositionPidData[i].pre_data);
   \                     ??PositionPIDInterate_3:
   \   0000011A   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   0000011E   0x....             LDR.N    R1,??DataTable6_7
   \   00000120   0xF851 0x1036      LDR      R1,[R1, R6, LSL #+3]
   \   00000124   0x.... 0x....      BL       __aeabi_fsub
   \   00000128   0x2114             MOVS     R1,#+20
   \   0000012A   0x....             LDR.N    R2,??DataTable6_6
   \   0000012C   0xFB01 0x2106      MLA      R1,R1,R6,R2
   \   00000130   0x6889             LDR      R1,[R1, #+8]
   \   00000132   0x.... 0x....      BL       __aeabi_fmul
   \   00000136   0x4681             MOV      R9,R0
    225          
    226                  if(p_output > 10)
   \   00000138   0x0038             MOVS     R0,R7
   \   0000013A   0x....             LDR.N    R1,??DataTable6_8  ;; 0x41200001
   \   0000013C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000140   0xD801             BHI.N    ??PositionPIDInterate_7
    227                  {
    228                      p_output = 10;
   \   00000142   0x....             LDR.N    R0,??DataTable6_9  ;; 0x41200000
   \   00000144   0x0007             MOVS     R7,R0
    229                  }
    230          
    231                  output[i] = p_output + i_output + d_output;
   \                     ??PositionPIDInterate_7:
   \   00000146   0x0038             MOVS     R0,R7
   \   00000148   0x4641             MOV      R1,R8
   \   0000014A   0x.... 0x....      BL       __aeabi_fadd
   \   0000014E   0x4649             MOV      R1,R9
   \   00000150   0x.... 0x....      BL       __aeabi_fadd
   \   00000154   0xF845 0x0026      STR      R0,[R5, R6, LSL #+2]
    232          
    233                  s_sPositionPidData[i].pre_data = input[i];
   \   00000158   0xF854 0x0026      LDR      R0,[R4, R6, LSL #+2]
   \   0000015C   0x....             LDR.N    R1,??DataTable6_7
   \   0000015E   0xF841 0x0036      STR      R0,[R1, R6, LSL #+3]
    234              }        
   \   00000162   0x1C76             ADDS     R6,R6,#+1
   \   00000164   0xE758             B.N      ??PositionPIDInterate_0
    235          }
   \                     ??PositionPIDInterate_1:
   \   00000166   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     s_sXYZPidParameter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     s_sXYZPidData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0xD2F1A9FC         DC32     0xd2f1a9fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x3F70624D         DC32     0x3f70624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     s_sHeightPidParameter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     s_sHeightPidData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     s_sPositionPidParameter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     s_sPositionPidData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x41200001         DC32     0x41200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x41200000         DC32     0x41200000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  HeightPIDInterate
             24 -> __aeabi_cfcmpeq
             24 -> __aeabi_cfcmple
             24 -> __aeabi_fadd
             24 -> __aeabi_fmul
             24 -> __aeabi_fsub
       20  InitHeightPID
             20 -> __aeabi_memcpy4
       12  InitPID
             12 -> __aeabi_memcpy4
       12  InitPositionPID
             12 -> __aeabi_memcpy4
       28  PIDInterate
             28 -> __aeabi_cfcmpeq
             28 -> __aeabi_cfcmple
             28 -> __aeabi_fadd
             28 -> __aeabi_fmul
             28 -> __aeabi_fsub
       28  PositionPIDInterate
             28 -> __aeabi_cfcmpeq
             28 -> __aeabi_cfcmple
             28 -> __aeabi_cfrcmple
             28 -> __aeabi_fadd
             28 -> __aeabi_fmul
             28 -> __aeabi_fsub
       40  SAS_PIDInterate
             40 -> GyrFilterGetCurrent
             40 -> __aeabi_cfcmpeq
             40 -> __aeabi_cfcmple
             40 -> __aeabi_d2f
             40 -> __aeabi_dmul
             40 -> __aeabi_f2d
             40 -> __aeabi_fadd
             40 -> __aeabi_fmul
             40 -> sin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
     216  HeightPIDInterate
      30  InitHeightPID
      64  InitPID
      58  InitPositionPID
     390  PIDInterate
     362  PositionPIDInterate
     416  SAS_PIDInterate
       8  s_sHeightPidData
      20  s_sHeightPidParameter
      16  s_sPositionPidData
      40  s_sPositionPidParameter
      24  s_sXYZPidData
      60  s_sXYZPidParameter

 
   168 bytes in section .bss
 1 576 bytes in section .text
 
 1 576 bytes of CODE memory
   168 bytes of DATA memory

Errors: none
Warnings: none
